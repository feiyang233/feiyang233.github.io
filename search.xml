<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>postman grpc test</title>
      <link href="/post/postman/"/>
      <url>/post/postman/</url>
      
        <content type="html"><![CDATA[<p>如何用 postman grpc 调用 API </p><span id="more"></span><h1 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h1><p><a href="https://www.postman.com/">https://www.postman.com/</a>  postman 想必大家已经很熟悉了, 平时用得比较多的是 HTTP call 测试。但有的服务,只有 grpc, 没有 http 方法, 测试的时候别无选择.</p><p>参考官方的文档：<a href="https://learning.postman.com/docs/sending-requests/grpc/grpc-client-overview/">https://learning.postman.com/docs/sending-requests/grpc/grpc-client-overview/</a> </p><h1 id="什么是-RPC"><a href="#什么是-RPC" class="headerlink" title="什么是 RPC"></a>什么是 RPC</h1><p>RPC（Remote Procedure Call，远程过程调用）是一种计算机通信协议，它允许一台计算机程序调用另一台计算机上的程序，而不需要程序员显式编写远程调用的代码。通过 RPC，程序员可以编写分布式应用程序，使得程序像运行在本地一样简单。<br>RPC 框架一般分为三个部分：客户端、服务器端和协议。客户端调用本地的代理程序，代理程序负责将调用转换为网络消息，然后发送给服务器端。服务器端接收到消息后，解析消息，调用本地的程序执行对应的操作，然后将结果返回给客户端。协议规定了客户端和服务器端之间的通信格式和方式，包括消息的结构、编码方式、传输协议等。<br>RPC 框架有很多种，常见的包括 gRPC、Thrift、Dubbo 等，它们都提供了类似的功能，使得开发人员可以快速地构建分布式应用程序。<br>总之，RPC 是一种计算机通信协议，可以让程序像本地程序一样调用远程程序，它可以帮助开发人员快速构建分布式应用程序。</p><h1 id="什么是-gRPC"><a href="#什么是-gRPC" class="headerlink" title="什么是 gRPC"></a>什么是 gRPC</h1><p>gRPC（g stands for Google）是一种高性能、开源、通用的远程过程调用（RPC）框架，由 Google 开发，支持多种编程语言。gRPC 基于 Protocol Buffers（protobuf）序列化协议开发，提供了比传统的 HTTP&#x2F;REST API 更快、更可靠和更高效的远程服务调用方式。<br>gRPC 的核心设计理念是定义服务，生成客户端和服务器端的 stub（存根），使得客户端和服务器端可以像调用本地方法一样调用远程方法，而且支持多种编程语言，包括 C、C++、Java、Python、Go、Ruby、Node.js 等。在 gRPC 中，客户端只需要通过服务定义文件来生成相应的客户端 stub，然后就可以像调用本地方法一样调用远程服务，非常方便。<br>gRPC 支持四种不同类型的服务方法，分别是：</p><ul><li>单向流：客户端发送一组请求到服务器端，但不等待回应。</li><li>双向流：客户端和服务器端可以同时发送多组请求和回应。</li><li>服务端流：客户端发送一组请求到服务器端，等待服务器端返回多组回应。</li><li>客户端流：客户端发送多组请求到服务器端，等待服务器端返回一组回应。</li></ul><p>除此之外，gRPC 还提供了许多功能，例如支持 TLS&#x2F;SSL 安全传输、支持客户端和服务器端的流量控制、支持多语言扩展等。<br>总之，gRPC 是一种高性能、开源、通用的 RPC 框架，可以支持多种编程语言，提供了比传统的 HTTP&#x2F;REST API 更快、更可靠和更高效的远程服务调用方式。</p><h1 id="什么是-Protobuf"><a href="#什么是-Protobuf" class="headerlink" title="什么是 Protobuf"></a>什么是 Protobuf</h1><p>Protobuf，全称为 Protocol Buffers，是一种语言无关、平台无关、可扩展的序列化数据格式，由 Google 公司开发。它支持多种编程语言，包括 C++、Java、Python 等，可以在不同的系统之间进行数据交换和存储。<br>与 XML 和 JSON 等数据格式相比，Protobuf 具有更高的序列化和反序列化效率、更小的数据体积以及更简单的数据结构定义。使用 Protobuf 可以帮助开发人员轻松地定义数据结构，然后使用自动生成的代码来进行序列化和反序列化。<br>在实际应用中，Protobuf 主要用于分布式应用程序中的数据传输和存储，例如在 Google 内部的各种系统和服务中就广泛使用了 Protobuf。<br>总之，Protobuf 是一种语言无关、平台无关、可扩展的序列化数据格式，具有更高的效率和更小的数据体积，可以帮助开发人员轻松地定义数据结构并进行数据传输和存储。</p><h1 id="开始实验"><a href="#开始实验" class="headerlink" title="开始实验"></a>开始实验</h1><p>先来看一看这个 pb 文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> todolistpb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;google/protobuf/empty.proto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;google/api/annotations.proto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;protoc-gen-swagger/options/annotations.proto&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generated by Kit - do not change this package</span></span><br><span class="line">option go_package = <span class="string">&quot;xxxxxxxxx/gophers/go/todolist/pb&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The base path is only for Swagger and does not affect the routing - do not change this.</span></span><br><span class="line">option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = &#123;</span><br><span class="line">  base_path: <span class="string">&quot;/todolist&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">service Todolist &#123;</span><br><span class="line">  rpc AddTodo(AddTodoRequest) returns (AddTodoResponse) &#123;</span><br><span class="line">    option idempotency_level = IDEMPOTENCY_UNKNOWN;</span><br><span class="line">    option (google.api.http) = &#123;</span><br><span class="line">      post: <span class="string">&quot;/addTodo&quot;</span></span><br><span class="line">      body: <span class="string">&quot;*&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  rpc ListTodos(google.protobuf.Empty) returns (ListTodosResponse) &#123;</span><br><span class="line">    option idempotency_level = NO_SIDE_EFFECTS;</span><br><span class="line">    option (google.api.http) = &#123;</span><br><span class="line">      get: <span class="string">&quot;/listTodos&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  rpc DoneTodo(DoneTodoRequest) returns (ListTodosResponse) &#123;</span><br><span class="line">    option idempotency_level = NO_SIDE_EFFECTS;</span><br><span class="line">    option (google.api.http) = &#123;</span><br><span class="line">      get: <span class="string">&quot;/doneTodo&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message AddTodoRequest &#123;</span><br><span class="line">  <span class="type">string</span> author = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> description = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message AddTodoResponse &#123;</span><br><span class="line">  Todo todo = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Todo &#123;</span><br><span class="line">  <span class="type">int64</span> id = <span class="number">1</span>;</span><br><span class="line">  <span class="type">string</span> author = <span class="number">2</span>;</span><br><span class="line">  <span class="type">string</span> description = <span class="number">3</span>;</span><br><span class="line">  <span class="type">bool</span> done = <span class="number">4</span>;</span><br><span class="line">  <span class="type">string</span> created_at = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message ListTodosResponse &#123;</span><br><span class="line">  repeated Todo todos = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message DoneTodoRequest &#123;</span><br><span class="line">  repeated <span class="type">int64</span> id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的地方是 import 的路径, 比如在 goland IDE 里面，也需要设置，如下图所示<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304032015610.jpeg"></p><p>在 postman 里面导入了 Protocol Buffers 文件后，可以直接点击橙色的 next ，如果有报错，则说明缺少了依赖，需要导入依赖的包的路径。和上图类似<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304032017324.png"></p><p>因为我们本地的服务监听在 8087, 所以地址就填写 localhost:8087 , 可以看到是两个蓝色的箭头双向流：<br>我们先 add 一条记录<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304032022081.png"></p><p>然后再查询所有的<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304032022099.png"></p><h1 id="需要注意的地方"><a href="#需要注意的地方" class="headerlink" title="需要注意的地方"></a>需要注意的地方</h1><ul><li>注意时间的格式 <a href="https://protobuf.dev/reference/php/api-docs/Google/Protobuf/Timestamp">https://protobuf.dev/reference/php/api-docs/Google/Protobuf/Timestamp</a><br>protected$seconds Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive. 可以在这个网站转换 <a href="https://www.epochconverter.com/">https://www.epochconverter.com/</a><br>protected$nanos Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google.protobuf.Timestamp startTime = <span class="number">9</span> </span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304032027626.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> testing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新加坡吃过的店 (SG FOOD)</title>
      <link href="/post/SG-food/"/>
      <url>/post/SG-food/</url>
      
        <content type="html"><![CDATA[<p>民以食为天<br>作为一个在新加坡搬砖的四川吃货，唯有美食不可辜负。坡县虽小，但各式各样的菜系都可以吃到。由于在四川长大，比较喜欢川菜火锅串串香锅烤鱼等。偶尔也跟着朋友们尝试一下其他的菜系。</p><span id="more"></span><h1 id="Eating-App"><a href="#Eating-App" class="headerlink" title="Eating App"></a>Eating App</h1><ul><li>eatigo <a href="https://eatigo.com/">https://eatigo.com/</a> 蛙功夫，成都，太古里火锅，麻省理功深海烤鱼 半价</li><li>chope <a href="https://www.chope.co/singapore-restaurants">https://www.chope.co/singapore-restaurants</a> 提前预定，比如预定 gyu-kaku</li><li>shopback <a href="https://www.shopback.sg/">https://www.shopback.sg/</a> 吃货返利</li></ul><h1 id="川菜"><a href="#川菜" class="headerlink" title="川菜"></a>川菜</h1><p>一句话总结新加坡的川菜：东巴蜀，西江湖</p><h2 id="巴蜀演义"><a href="#巴蜀演义" class="headerlink" title="巴蜀演义"></a>巴蜀演义</h2><ul><li>地址：219 Bedok Central, #01-122, Singapore 460219  <a href="https://bashusichuan.sg/">官方网站</a></li><li>点评：强烈推荐，我心目中新加坡第一川菜。在东部的一家正宗川菜馆子，店面很大。味道非常不错，值得一试。青椒鱼，香烤猪手，回锅肉，十八秒牛肉，宫爆鸡丁，鱼香肉丝，风味拌土豆，银芽青龙菜，辣子鸡，口水鸡都很不错。水煮牛肉，夫妻肺片，香煎走地鸡很一般，不推荐。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202202202230464.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202203061638650.jpeg"></li></ul><h2 id="江湖冒菜"><a href="#江湖冒菜" class="headerlink" title="江湖冒菜"></a>江湖冒菜</h2><ul><li>地址：2 Venture Dr, #02-50, Singapore 608526 就在友间食阁的楼上</li><li>点评：厨师是一位四川宜宾的大哥，夫妻两个共同经营的小店(最近装修，已经是大店了，哈哈)。星食客上有外卖。推荐的菜有，火爆黄喉，仔姜乌鱼，仔姜牛蛙，冒菜。 不推荐，火爆鸡胗，干煸肥肠。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010110612.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010110616.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010110647.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307231624478.png"></li></ul><h2 id="NTU-Canteen-11-川菜"><a href="#NTU-Canteen-11-川菜" class="headerlink" title="NTU Canteen 11 川菜"></a>NTU Canteen 11 川菜</h2><ul><li><a href="https://www.google.com/maps/place/NTU+Hall+of+Residence+11/@1.3550279,103.6842518,17z/data=!3m1!4b1!4m5!3m4!1s0x31da0fa624c5025d:0xff3b2e9bae59d6c4!8m2!3d1.3550279!4d103.6864405">地址</a>：20 Nanyang Ave, Singapore 639809</li><li>点评：目前吃过的新加坡性价比最高的川菜，味道好，价格最便宜，随便点还没有踩雷过。唯一的缺点就是地理位置太偏远了。</li><li>上图:  <img src="/img/food/ntu1.jpg" alt="ntu1">  <img src="/img/food/ntu2.jpg" alt="ntu2">  <img src="/img/food/ntu3.jpg" alt="ntu3"></li></ul><h2 id="牛车水食阁-川味园"><a href="#牛车水食阁-川味园" class="headerlink" title="牛车水食阁 川味园"></a>牛车水食阁 川味园</h2><ul><li><a href="https://www.google.com/maps/place/%E5%B7%9D%E5%91%B3%E5%9B%AD/@1.2847801,103.8424824,15z/data=!4m5!3m4!1s0x0:0x1775b362155b0f51!8m2!3d1.2847801!4d103.8424824">地址</a>：32 New Market Rd, Singapore 050032</li><li>点评：德阳大叔开的店，味道非常的四川，价格实惠，分量也很足。只是在食阁里比较吵杂，还有点热。<del>沸腾鱼</del>我觉得很一般，不是很入味，回锅肉，干煸四季豆，手抓排骨都很不错。据说旁边那家日日红麻辣香锅很不错，还没去吃过。旁边有一家卖甘蔗汁的，非常好喝</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202525.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202605.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202611.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202559.jpg"> <img src="/img/food/cwy.jpg" alt="cwy"></li></ul><h2 id="厦门街-成都"><a href="#厦门街-成都" class="headerlink" title="厦门街 成都"></a>厦门街 成都</h2><ul><li><a href="https://www.google.com/maps/place/%E6%88%90%E9%83%BDChengdu+%C2%B7+%E6%96%B0%E5%8A%A0%E5%9D%A1%E6%9C%80%E8%B5%B0%E5%BF%83%E5%B7%9D%E8%8F%9C/@1.2803505,103.8445213,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19515828ce5b:0xd28a3b9a3b6ee1db!8m2!3d1.2803451!4d103.84671">地址</a>：74 Amoy St, Singapore 069893</li><li>点评：新加坡的四川同学安利的，<code>水煮鱼，牛蛙</code>强推，干锅肥肠也不错(但我觉得老成都的干锅肥肠更好吃)。<del>辣子鸡</del>不要点，辣鸡。 2020-7-31 我又去吃了一次， 麻辣水煮鱼，夫妻肺片，干煸肥肠，椒麻排骨，小煎跑山鸡，茄子煲，手撕包菜，回锅肉 都很可以的。</li><li>上图:  <img src="/img/food/cd1.jpg" alt="cd1">  <img src="/img/food/cd2.jpg" alt="cd2">  <img src="/img/food/cd3.jpg" alt="cd3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720135949.png"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200731154306.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200731154301.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200731154256.jpg"></li></ul><h2 id="牛车水-老成都"><a href="#牛车水-老成都" class="headerlink" title="牛车水 老成都"></a>牛车水 老成都</h2><ul><li><a href="https://www.google.com/maps/place/Old+Chengdu+Sichuan+Cuisine+Restaurant+%E8%80%81%E6%88%90%E9%83%BD%E5%B7%9D%E8%8F%9C%E9%A6%86/@1.2838636,103.841519,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19735c9a4b71:0xb1aca33c8f02c76e!8m2!3d1.2838582!4d103.8437077">地址</a>：80 Pagoda St, Singapore 059239</li><li>点评：曾经我以为这家是热门景点宰客的店，虽然价格是贵，但人家的味道对得起老成都这个名字。目前吃过干锅肥肠，豆花牛肉，炒时蔬，nice！ 点过外卖</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234527.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210723201835.jpg"></li></ul><h2 id="牛车水-熊猫撸串"><a href="#牛车水-熊猫撸串" class="headerlink" title="牛车水 熊猫撸串"></a>牛车水 熊猫撸串</h2><ul><li>地址: 273 New Bridge Road Singapore 088749  搬家了，这是新地址。</li><li>点评： 非常正宗的川菜，两位厨师是四川泸州来的。水煮乌鱼片，手抓相思骨，酸辣鸡杂豆花非常不错。强烈推荐，我心目中新加坡第二川菜。烧烤的话：烤牛肉羊肉不错，烤掌中宝必点，烤毛肚不行。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200628210346.jpg">  <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210723201831.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210502102504.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112352267.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112352269.jpeg"></li></ul><h2 id="金文泰食阁-四川厨子"><a href="#金文泰食阁-四川厨子" class="headerlink" title="金文泰食阁 四川厨子"></a>金文泰食阁 四川厨子</h2><ul><li><a href="https://www.google.com/maps/place/Kopitiam+@+Clementi+Ave+3/@1.3139883,103.7652978,21z/data=!4m5!3m4!1s0x31da1a8e771fa3fd:0x57a3d8c0d2918f32!8m2!3d1.3138849!4d103.7652542">地址</a>：450 Clementi Ave 3, #01-271, Singapore 120450</li><li>点评：窗口那个姐姐是四川邛崃的，目前只吃过她家的烧鸡公一次，味道不错。川菜水煮鱼不错，孜然排骨太干了，不行。</li><li>上图:  <img src="/img/food/clementi1.jpg" alt="clementi1">  <img src="/img/food/clementi2.jpg" alt="clementi2">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144937.jpg"></li></ul><h2 id="NUS-PGP食堂-川菜"><a href="#NUS-PGP食堂-川菜" class="headerlink" title="NUS PGP食堂 川菜"></a>NUS PGP食堂 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.290806,103.7804248,19.17z/data=!4m12!1m6!3m5!1s0x31da1a53630ee451:0x69e2d2ba3d0d6ce1!2sbluPort+-+NUS+Prince+George's+Park!8m2!3d1.290875!4d103.78079!3m4!1s0x31da1a536b93fffb:0xea3041dd973bf902!8m2!3d1.2909419!4d103.7822132">地址</a>：23 Prince George’s Park, Singapore 118422</li><li>点评：四川厨师，在蜀香吃过一次干煸肥肠，有点干煸过头。2019-03-27 吃了一次水煮肉片，味道很棒。有空调那家卖面条的姐姐是四川大邑的(好像又换人了)，没有空调卖面条的那个锅锅是四川泸州的。没有空调最里面那家我也吃过川菜，味道还行吧。</li><li>上图:  <img src="/img/food/pgp.jpg" alt="pgp"> <img src="/img/food/pgp1.jpg" alt="pgp1">  <img src="/img/food/pgp2.jpg" alt="pgp2">  <img src="/img/food/pgp3.jpg" alt="pgp3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144957.jpg"></li></ul><h2 id="NUS-Utown-川菜"><a href="#NUS-Utown-川菜" class="headerlink" title="NUS Utown 川菜"></a>NUS Utown 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.3046434,103.772702,21z/data=!4m8!1m2!2m1!1snus+utown!3m4!1s0x31da1af5cc70dc97:0x7b392d9d676befeb!8m2!3d1.3047189!4d103.7727249">地址</a>：2 College Ave West, Level 2 Stephen Riady Centre, Singapore 138607</li><li>点评：东北厨师，配菜是德阳小姐姐。分量是真的足，但味道就很一般了，学校食堂比较便宜。小炒肉、夫妻肺片还不错吧，<del>水煮鱼 鱼香茄子 宫保鸡丁</del>打扰了。</li><li>上图:  <img src="/img/food/nus.jpg" alt="nus">  <img src="/img/food/nus1.jpg" alt="nus1"></li></ul><h2 id="蜀香添一点"><a href="#蜀香添一点" class="headerlink" title="蜀香添一点"></a>蜀香添一点</h2><ul><li><a href="https://www.google.com/maps/place/%E8%9C%80%E9%A6%99/@1.3022539,103.7639279,21z/data=!4m5!3m4!1s0x31da1af1dc3529bb:0xe41c8a6372b436d4!8m2!3d1.3022576!4d103.764117">地址</a>：721 Clementi West Street 2, Singapore 120721</li><li>点评：以前读书的时候住在附近，经常和学长去这家吃饭。价格还行，有的菜味道还可以。口水鸡，夫妻肺片凉菜不错。小炒肉，鱼香肉丝也行。<del>大盘鸡 辣子鸡 水煮肉片</del> 再见！</li><li>上图:  <img src="/img/food/shuxiang.jpg" alt="shuxiang">  <img src="/img/food/shuxiang1.jpg" alt="shuxiang1"></li></ul><h2 id="天府川菜"><a href="#天府川菜" class="headerlink" title="天府川菜"></a>天府川菜</h2><ul><li><a href="https://www.google.com/maps/place/Tianfu+Szechuan+Cuisine+%E5%A4%A9%E5%BA%9C%E5%B7%9D%E8%8F%9C/@1.314338,103.7628628,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1a8e40c040fb:0x9f8f60278dda8354!8m2!3d1.314338!4d103.7650515">地址</a>：3151 Commonwealth Ave W, #01-17&#x2F;18, Singapore 129581</li><li>点评：去吃过一次，我觉得酸菜鱼很一般，那个<del>炒莲白</del>更是不行啊。感觉辣椒没有几个，味道非常辣，像是放了辣椒素的感觉。</li><li>上图:  <img src="/img/food/tianfu1.jpg" alt="tianfu1">  <img src="/img/food/tianfu2.jpg" alt="tianfu2"></li></ul><h2 id="四川豆花饭庄"><a href="#四川豆花饭庄" class="headerlink" title="四川豆花饭庄"></a>四川豆花饭庄</h2><ul><li>地址：80 Raffles Place #60-01, 1 UOB Plaza, 048624  就在 raffles places 地铁站出来的 UOB 大楼。 中间需要在 38 楼换乘才能到 60 楼的餐厅。</li><li>点评：60 层的高楼，环境不错。菜品小贵，回锅肉还行，蒜泥白肉不行，水煮鱼的鱼肉不行，可能水煮牛肉更好吃。 UOB 的卡还有 15% discount</li><li>上图:  <img src="/img/food/douhua.jpg" alt="douhua"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202112241439699.jpeg"></li></ul><h2 id="思味冒菜"><a href="#思味冒菜" class="headerlink" title="思味冒菜"></a>思味冒菜</h2><ul><li><a href="https://www.google.com/maps/place/Si+Wei+Mao+Cai/@1.2835709,103.8452381,20.84z/data=!4m5!3m4!1s0x31da190cb17025ed:0xc245fc39a322492d!8m2!3d1.2836133!4d103.8452759">地址</a>: 33 Mosque St, Singapore 059511</li><li>点评： 我真的佛了，就成都gai上随便吃个冒菜，都比他家的好吃。真的太淡了，除了油，不辣不香，吃了想打人。泡椒牛蛙反而还不错的。2021 年又去了一次，还是觉得很一般，小红书那些乱安利，拉胯。 不是很推荐， 真要去，记得 eatigo 定位会有优惠。2022 年再吃了一次思味江湖菜，就还行吧，普普通通。 2023 年再来试了一次，在二楼吃的点菜，点的川菜也还是一般，就飘香3脆和小炒羊肉还行，肥肠太干了。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114732.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114734.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233601.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233604.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233553.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207021944398.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307082248270.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307082248231.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307082249299.jpeg"></li></ul><h2 id="A-ONE"><a href="#A-ONE" class="headerlink" title="A ONE"></a>A ONE</h2><ul><li><a href="https://www.google.com/maps/place/A-ONE+Claypot+House/@1.3506575,103.8698616,17z/data=!3m2!4b1!5s0x31da17a6c9cbff89:0xd57ea669903a76d8!4m5!3m4!1s0x31da17a6c6a5ad07:0xd1f33bcbb66ddf5f!8m2!3d1.3506521!4d103.8720503">地址</a>：23 Serangoon Central, #B1-73&#x2F;74, Singapore 556083 serangoon 地铁站旁</li><li>点评：其实是一家本地的店，居然也有麻辣系列。但分量较小，味道还行。水煮鱼的鱼肉不行，肉质差。水煮肉片的淀粉少了，不够嫩。人均 30 新吧</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162540.jpeg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155332.jpg"></li></ul><h2 id="Birds-of-a-Feather"><a href="#Birds-of-a-Feather" class="headerlink" title="Birds of a Feather"></a>Birds of a Feather</h2><ul><li><a href="https://www.google.com/maps/place/Birds+of+a+Feather/@1.282141,103.8455223,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190c54bb3971:0x9eefa2ec6018112a!8m2!3d1.282141!4d103.847711">地址</a>: 115 Amoy St, #01-01, Singapore 069935</li><li>点评：一家精致的川菜，分量超级小，有点西式料理的味道。人少的话可以来试一试。就在 <a href="#%E5%8E%A6%E9%97%A8%E8%A1%97-%E6%88%90%E9%83%BD">厦门街 成都</a> 那一条街上。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141702.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141658.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141707.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141710.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141713.jpg"></li></ul><h2 id="小渔村柴火鸡"><a href="#小渔村柴火鸡" class="headerlink" title="小渔村柴火鸡"></a>小渔村柴火鸡</h2><ul><li><a href="https://www.google.com/maps/place/Xiao+Yu+Cun+Seafood+Restaurant+%E5%B0%8F%E6%B8%94%E6%9D%91%E6%9F%B4%E7%81%AB%E9%B8%A1/@1.3404171,103.8825676,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1796ad421f09:0xa8336dc955c257bb!8m2!3d1.3404171!4d103.8847563">地址</a>: 201 Upper Paya Lebar Rd, Singapore 534876</li><li>点评：柴火鸡的味道非常不错，还可以往锅里面加菜，越到后面味道越浓。老板还是一位马拉松爱好者，店里面全是马拉松的奖牌。人均 20+ 新币，地理位置稍微偏了一点点，其他的挺不错的。 <a href="https://www.shicheng.news/show/658725">软文</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200112223455.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200112223458.jpg"></li></ul><h2 id="Kim-San-Leng-Coffeeshop"><a href="#Kim-San-Leng-Coffeeshop" class="headerlink" title="Kim San Leng Coffeeshop"></a>Kim San Leng Coffeeshop</h2><ul><li>地址：116 Bukit Merah View, Singapore 151116</li><li>点评：这家的回锅肉是非常不错的，水煮鱼不行，据说田鸡也一般。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221115.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221125.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221131.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221147.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221154.jpg"></li></ul><h2 id="老四川"><a href="#老四川" class="headerlink" title="老四川"></a>老四川</h2><ul><li>地址：太开心了，我家附近荷兰村也有新开的一家。24A Lorong Mambong Holland Village, Singapore 277683 另外两家：9 Selegie Rd, #01-31, Singapore 180009 或 50 Tiong Bahru Rd, Singapore 168733</li><li>点评：我们这次去的是 Selegie 这家店，辣子鸡， 香辣排骨不错，泡豇豆炒肉下饭. <a href="https://www.youtube.com/watch?v=7Wui4qfJdXo">看网红博主的测评视频</a></li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210809211742.jpeg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116094329.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116094338.jpg"></li></ul><h2 id="Thye-Guan-Fragrant-HotPot"><a href="#Thye-Guan-Fragrant-HotPot" class="headerlink" title="Thye Guan Fragrant HotPot"></a>Thye Guan Fragrant HotPot</h2><ul><li>地址：我是在 grabfood 上面点的外卖 <a href="https://food.grab.com/sg/en/restaurant/thye-guan-fragrant-hot-pot-commonwealth-view-delivery/4-CZD1GNBGCACCLJ">Thye Guan Fragrant Hot Pot - Commonwealth View</a></li><li>点评：已经吃过他家的好几次外卖了，推荐的菜有香辣肉丝，水煮牛肉，回国肉，干煸四季豆，土豆丝， 鱼香茄子。 不推荐青椒肉丝，小炒肉。水煮肥肠味道有点大，看个人喜好 </li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210611090623.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210611090628.jpg"></li></ul><h2 id="锅匠"><a href="#锅匠" class="headerlink" title="锅匠"></a>锅匠</h2><ul><li>地址：38 Mosque street Singapore, Singapore 069400</li><li>点评：芋儿鸡，牛蛙，鱼片还不错。 糍粑，炸酥肉巨坑，千万不要点，价格不贵，人均 30 多新币</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210829222238.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210829222241.jpg"></li></ul><h2 id="家家翘脚牛肉"><a href="#家家翘脚牛肉" class="headerlink" title="家家翘脚牛肉"></a>家家翘脚牛肉</h2><ul><li>地址：Mosque St, #21, Singapore 059501</li><li>点评：最近新开的一家翘脚牛肉店。 牛肉和乐山的肯定没法比，不过还不错。油炸串串还可以，叶儿粑不行。 黑豆花肥肠味道不错，就是分量好小，肥肠只有一点点。黑豆花牛肉不错分量还可以</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304131550822.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304131550246.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304131550929.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307310946861.jpeg"></li></ul><h2 id="ZhouJi-周记小厨"><a href="#ZhouJi-周记小厨" class="headerlink" title="ZhouJi 周记小厨"></a>ZhouJi 周记小厨</h2><ul><li>地址：504 West Coast Drive #01-236 Singapore 120504  谷歌地图显示的位置是错误的</li><li>点评：西海岸开的一家川菜 + 东北菜 + 烤串，地址位置有点偏僻，但价格实惠。回锅肉，辣子鸡，烤牛肉串不错。 烤羊排太咸了，不推荐。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306171438036.png"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306171438126.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306171438694.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307231625118.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307231626308.jpeg"></li></ul><h1 id="火锅"><a href="#火锅" class="headerlink" title="火锅"></a>火锅</h1><h2 id="小龙坎"><a href="#小龙坎" class="headerlink" title="小龙坎"></a>小龙坎</h2><ul><li>地址：牛车水或者武吉士</li><li>点评： 每年愚人节的那个周末，全球的小龙坎全场半价，抓住机会。平时人均 60 新 +，味道不错，我觉得比海底捞好吃多了，最爱它家的麻辣牛肉（不能吃辣的慎点），毛肚，黄喉。锅底也是老油，很浓郁</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162948.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162952.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162955.jpg"></li></ul><h2 id="大龙燚"><a href="#大龙燚" class="headerlink" title="大龙燚"></a>大龙燚</h2><ul><li>地址：乌节路，somerset 楼上 181 Orchard Rd, #08-08, Singapore 238896</li><li>点评：也是又贵又好吃的那种火锅。贫穷限制了我吃火锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163645.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163648.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163652.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163655.jpg"></li></ul><h2 id="同心如意火锅"><a href="#同心如意火锅" class="headerlink" title="同心如意火锅"></a>同心如意火锅</h2><ul><li><a href="https://www.google.com/maps/place/%E5%90%8C%E5%BF%83%E5%A6%82%E6%84%8F%E4%BC%A0%E7%BB%9F%E9%93%9C%E7%81%AB%E9%94%85/@1.2869932,103.8465049,17z/data=!4m8!1m2!2m1!1z5ZCM5b-D5aaC5oSP54Gr6ZSF!3m4!1s0x31da190a4cc3d849:0x5c55c99089e27a1e!8m2!3d1.2869783!4d103.8486978">地址</a>：克拉码头 6 Lor Telok, Singapore 049019</li><li>点评：强烈安利了，真的好吃又不贵，环境还优雅，免费的西瓜深受吃瓜群众的喜爱。人均 30-40 新币。 新出的兔子锅味道可以，兔子肉很嫩，推荐，板鸭还行。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210904214723.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164043.jpeg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155506.jpeg"></li></ul><h2 id="海底捞"><a href="#海底捞" class="headerlink" title="海底捞"></a>海底捞</h2><ul><li><a href="https://www.haidilao.com/sg/fwzx/mdss/index.html">地址</a>: 全岛分店太多了，我去过 vivo city 那家， IMM 那家也吃过， 乌节路那家店人少点, marina square 最佳，有机器人送餐，自定义锅底。</li><li>点评：众所周知服务好，价格贵，免费小菜，水果，豆花，冰淇淋。食材新鲜，就是有时候排队很长，如果能加到店员的微信，就能走内部订餐，只需要提前一天，任何时间段都可以预定。人均 60+，和牛不推荐点，吃和牛要去烤肉店。 因为最后还有 10% 服务费， 7% 税，所以在点餐的时候，建议 ipad 上，人均 50 就行了，多了真的吃不完。 用 UOB 能有优惠券，满 150， 减免 10 新币。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190926171753.jpeg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234907.jpg"></li></ul><h2 id="重庆小木凳火锅"><a href="#重庆小木凳火锅" class="headerlink" title="重庆小木凳火锅"></a>重庆小木凳火锅</h2><ul><li><a href="https://www.google.com/maps/place/XIAO+MU+DENG+HOT+POT+%E9%87%8D%E6%85%B6%E5%B0%8F%E6%9C%A8%E5%87%B3%E6%87%B7%E8%88%8A%E7%81%AB%E9%8D%8B/@1.2822806,103.8399297,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1992938246bb:0x7d60e3de7635057b!8m2!3d1.2822752!4d103.8421184">地址</a>： 牛车水 279 New Bridge Rd, Singapore 088752</li><li>点评： 小组聚餐吃过一次，人均 30-35 新，味道还是非常的不错，环境也还是可以的。2021 年又吃了一次，这次是自助了，我觉得很一般了。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210516104327.jpg"></li></ul><h2 id="食间火锅"><a href="#食间火锅" class="headerlink" title="食间火锅"></a>食间火锅</h2><ul><li>地址：Jcube 和 Suntec City</li><li>点评：老板小武哥哥是 MIT 毕业的重庆大佬，食材新鲜，味道不错，算是味道正宗且价格最低的火锅了，强烈推荐，我心中的 No.1。Suntec City 还有自助火锅，人均在 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164825.jpeg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234537.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234532.jpg"></li></ul><h2 id="优品火锅"><a href="#优品火锅" class="headerlink" title="优品火锅"></a>优品火锅</h2><ul><li><a href="https://www.google.com/maps/place/Upin+Hot+Pot+West+Coast+Plaza/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x315bc1bb345ca3af!8m2!3d1.303843!4d103.7662919">地址</a>： 全岛有几家，我吃的是 west coast plaza 那一家 154 West Coast Rd, #01-02, Singapore 127371</li><li>点评： 出乎意料的火锅，以为是一家不知名的小店，结果味道很不错。人均 40+ 新</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709165414.jpeg"></li></ul><h2 id="食立方火锅"><a href="#食立方火锅" class="headerlink" title="食立方火锅"></a>食立方火锅</h2><ul><li><a href="https://www.google.com/maps/place/Shi+Li+Fang/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x3cfc2dfce4934166!8m2!3d1.3036439!4d103.7658919">地址</a>：全岛连锁,我吃的是 west coast plaza 那一家 154 West Coast Road 127371, 02-24 West Coast Rd, Singapore 127447</li><li>点评：吃火锅送公仔娃娃是这家店最大的特色。味道不辣，适合口味淡的朋友们。人均 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170029.jpg"></li></ul><h2 id="潮牛-Chaoniu-Hot-Pot"><a href="#潮牛-Chaoniu-Hot-Pot" class="headerlink" title="潮牛 Chaoniu Hot Pot"></a>潮牛 Chaoniu Hot Pot</h2><ul><li>地址：7 Fraser St, #01-40&#x2F;41&#x2F;42&#x2F;43 Duo Galleria, Singapore 189356</li><li>点评：曾经开在东海岸的潮汕牛肉火锅，如今开在了 bugis 地铁站 E 出口。晚上自助餐 4 人，税+服务费，人均 60 新币，适合胃口比较大的朋友们。胸口油, 牛筋，牛尾骨一般般，蚝煎非常的油不建议点，考牛肉串，酱牛肉都很不错。 </li><li>上图： <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306162013622.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306162013091.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306162012115.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306162012657.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306162013734.jpeg"></li></ul><h2 id="满族火锅"><a href="#满族火锅" class="headerlink" title="满族火锅"></a>满族火锅</h2><ul><li><a href="https://www.google.com/maps/place/Man+Zhu+Steamboat+Restaurant/@1.3209719,103.7588833,13z/data=!4m8!1m2!2m1!1z5ruh5peP54Gr6ZSF!3m4!1s0x0:0xebd740cbf2973c8e!8m2!3d1.3440604!4d103.7312257">地址</a>: 350 Jurong East Ave 1, #01-1231 Singapore Singapore Region, Singapore 600350</li><li>点评：裕华园地铁出来，食阁附近的一家小店。那一排的店家都是这个风格，可能是地理位置偏远，价格非常便宜，味道还行。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113012.jpeg"></li></ul><h2 id="川羊记"><a href="#川羊记" class="headerlink" title="川羊记"></a>川羊记</h2><ul><li>地址：官网几家分店，我吃的是牛车水那一家 211 South Bridge Road Singapore 058760 <a href="http://chuanyangji.com/">http://chuanyangji.com/</a></li><li>点评：味道还不错，羊排那些很棒。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230641.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230631.jpg"></li></ul><h2 id="绝世好粥"><a href="#绝世好粥" class="headerlink" title="绝世好粥"></a>绝世好粥</h2><ul><li>地址：6001 Beach Rd, #01-52 GOLDEN MILE TOWER, Singapore 199589 (注意不是旁边那个 GOLDEN MILE COMPLEX)</li><li>点评：开到凌晨 3 点就很牛啤，因为周围歌舞厅酒吧很多，你懂的夜生活的配套设置，喝酒醉了来旁边喝一碗粥。他这个粥真的非常棒，很香。蘸碟有点辣，清香。推荐虾，腌制牛肉，鸡肉，油条</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/IMG_2657.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/IMG_2656.jpeg"></li></ul><h2 id="椰子鸡"><a href="#椰子鸡" class="headerlink" title="椰子鸡"></a>椰子鸡</h2><ul><li>地址：bugis有两家店：8 Liang Seah Street #01-03 Singapore 189029 这家老店，有点热。 6 Tan Queen Lan Street S188095 这家新店, 空调冷气很足</li><li>点评：味道还不错，竹笙很好吃，非常的清淡。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207021935365.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207021942036.jpeg"></li></ul><h1 id="串串"><a href="#串串" class="headerlink" title="串串"></a>串串</h1><h2 id="串食代"><a href="#串食代" class="headerlink" title="串食代"></a>串食代</h2><ul><li>地址：74 Prinsep St, Singapore 188669</li><li>点评：citizen 绵阳老板开的店，第一次去我们点的最辣，把我辣安逸了，味道还可以。就是空调有点冷，电话偶尔打不通，可以加老板娘微信 WeChat ID: jngyanaaa</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210401152543.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210401152539.jpg"></li></ul><h2 id="重庆李记串串"><a href="#重庆李记串串" class="headerlink" title="重庆李记串串"></a>重庆李记串串</h2><ul><li><a href="https://www.google.com/maps/place/Li+Ji+Chuan+Chuan+Xiang/@1.2814591,103.8442259,19.55z/data=!4m5!3m4!1s0x31da190d33000029:0xd2d2d3005dc64da!8m2!3d1.2813333!4d103.8449943">地址</a>： 295 South Bridge Rd, Singapore 058838 South Bridge Rd, Singapore 058838，巧了就在嘿串串旁边</li><li>点评： 一年前吃过一次，味道还不错，感觉性价比高。shopee 聚餐吃了第二次</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170652.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230552.jpg"></li></ul><h2 id="很乐山"><a href="#很乐山" class="headerlink" title="很乐山"></a>很乐山</h2><ul><li>地址：21 Tan Quee Lan St, #01-02, Singapore 188108</li><li>点评：东海岸划水完去吃的，翘脚牛肉很一般，米线的话，干拌生椒米线不错，肥肠米线很一般。 油炸串串的话，肉类（五花肉，牛肉，鸡肉）炸得太干了，像美珍香的肉干，不好吃。 土豆片，牛肚，猪颈肉还不错。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/6649701C-247A-492D-99A8-78819F8A752F_1_102_a.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/B537E86D-1EAC-4039-BB3D-F534880F8EB6_1_102_a.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/F46663EC-0916-4841-86AA-9EA6F274FEDA_1_102_a.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/38175CCD-E309-4FFD-82A6-89ECDDA2B485_1_102_a.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301935045.jpeg"></li></ul><h1 id="香锅"><a href="#香锅" class="headerlink" title="香锅"></a>香锅</h1><h2 id="Timbre大海麻辣香锅"><a href="#Timbre大海麻辣香锅" class="headerlink" title="Timbre大海麻辣香锅"></a>Timbre大海麻辣香锅</h2><ul><li><a href="https://www.google.com/maps/place/Timbre%2B/@1.2974743,103.7872491,21z/data=!4m12!1m6!3m5!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!2sMellben+Signature!8m2!3d1.2770306!4d103.842881!3m4!1s0x31da1a4fdcdcb793:0x212cfcf8b61862cd!8m2!3d1.2974124!4d103.7875038">地址</a>：73A Ayer Rajah Crescent, JTC Launchpad, Singapore 139957 one north 地铁站出来 Timbre+  食阁里</li><li>点评：非常温和的一家香锅，记得喊老板多放油。毛肚不错哦，还可以送外卖的。人均 8-15 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171446.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190814174051.jpeg"></li></ul><h2 id="OneNorth口福一品堂麻辣香锅"><a href="#OneNorth口福一品堂麻辣香锅" class="headerlink" title="OneNorth口福一品堂麻辣香锅"></a>OneNorth口福一品堂麻辣香锅</h2><ul><li><a href="https://www.google.com/maps/place/Koufu+Food+Court/@1.2989013,103.787071,19z/data=!3m1!4b1!4m5!3m4!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!8m2!3d1.2989!4d103.7876182">地址</a>：1 Fusionopolis Way, Singapore 138577 One North 口福</li><li>点评：他们家放的芝麻可是真的比较多，真香！2023 更新：感觉味道不行了，我吃的麻辣烫，感觉科技加太多了，吃完嘴巴很干，不舒服。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171833.jpeg"></li></ul><h2 id="Galaxis二楼麻辣香锅"><a href="#Galaxis二楼麻辣香锅" class="headerlink" title="Galaxis二楼麻辣香锅"></a>Galaxis二楼麻辣香锅</h2><ul><li><a href="https://www.google.com/maps/place/Foodmaster/@1.2995888,103.7880186,21z/data=!3m1!5s0x31da1a454101b3dd:0xe60bb1bc39017b65!4m12!1m6!3m5!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!2sKoufu+Food+Court!8m2!3d1.2989!4d103.7876182!3m4!1s0x0:0xfc2120aaf6811cb1!8m2!3d1.2994549!4d103.7882856">地址</a>： 1 Fusionopolis Pl, Singapore 138522 Galaxis 二楼食阁 </li><li>点评： 有一个绵阳的哥哥在这里，是我看到过的第一家荤素菜不分开计算重量的麻辣香锅。所以也就是最便宜的麻辣香锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171452.jpg"></li></ul><h2 id="宽宽干锅"><a href="#宽宽干锅" class="headerlink" title="宽宽干锅"></a>宽宽干锅</h2><ul><li>地址：38 Mosque St, Singapore 059516， 牛车水这家已经换成锅匠了，bugis 还有一家宽宽</li><li>点评：是伟翔锅锅请我这个小弟吃的，味道不错，和国内的干锅比较相似。鸭掌还不够糯，比起成都的销魂掌还是有点差距的。第二次去吃了排骨虾干锅还可以，肥肠鸡不行，仔姜牛蛙也还行。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144004.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144008.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201218160443.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201218160450.jpg"></li></ul><h2 id="千椒百味"><a href="#千椒百味" class="headerlink" title="千椒百味"></a>千椒百味</h2><ul><li>地址：荷兰村食阁 1 Lor Mambong, Singapore 277700 #01-31</li><li>点评： 麻辣烫味道不错，价格实惠，但就是排队的人有点多。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234545.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223219.jpg"></li></ul><h2 id="小满麻辣烫"><a href="#小满麻辣烫" class="headerlink" title="小满麻辣烫"></a>小满麻辣烫</h2><ul><li>地址：1 Fusionopolis Way, #B1-21 Connexis, Singapore 138632</li><li>点评： 店面很小，但很干净。 番茄锅和麻辣锅是最好吃的，价格比食阁贵很多。2023 更新： 我觉得味道不咋地了，随便吃一点就 20 新币了</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200909185730.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200909185746.jpg"></li></ul><h2 id="中华锅王"><a href="#中华锅王" class="headerlink" title="中华锅王"></a>中华锅王</h2><ul><li><a href="https://www.google.com/maps/place/Spa+9+@+Holland/@1.3075198,103.7931053,18.96z/data=!4m5!3m4!1s0x31da1a41e53dea59:0x6e11bf7bca23974f!8m2!3d1.3076055!4d103.793457">地址</a>: Block 43, 43 Holland Dr, Singapore 270043</li><li>点评：干锅的味道还不错，可以点外卖。除了干锅，他家还有炒菜。但是炒菜味道一般般，不推荐。2023 年更新：推荐汤的麻辣烫，味道很不错，比 one-north 口福里面的一品堂，小满都好吃，价格也便宜，值得一试。 人均 10 新就够了 </li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200429114707.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306041725565.jpeg"></li></ul><h1 id="美蛙烤鱼"><a href="#美蛙烤鱼" class="headerlink" title="美蛙烤鱼"></a>美蛙烤鱼</h1><h2 id="探鱼"><a href="#探鱼" class="headerlink" title="探鱼"></a>探鱼</h2><ul><li><a href="https://www.google.com/maps/place/TAN+YU/@1.3008112,103.8361644,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1991290f596b:0x74129219b25d6b6c!8m2!3d1.3008112!4d103.8383531">地址</a>：313 Orchard Rd, Singapore 238895</li><li>点评：新加坡吃过最好吃的烤鱼，肉质不是油炸的那种烤鱼。推荐鲜青椒烤鱼，重庆豆花烤鱼。人均 30-40 新</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161227.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161215.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161231.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161234.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161218.jpg"></li></ul><h2 id="蛙功夫"><a href="#蛙功夫" class="headerlink" title="蛙功夫"></a>蛙功夫</h2><ul><li>地址：牛车水那家搬迁了 34 Mosque St, Singapore 059512， bugis 也有一家 470 North Bridge Rd, Singapore 188735 他们跟密斯湘菜是一个老板的</li><li>点评：微信提前预定打九折。新加坡第一蛙了，怪椒味和姜辣味真的好辣啊，四川人都遭不住了。 人均 30-40 新，最新发现蛙功夫在 <a href="https://eatigo.com/sg/singapore/en?vrt=n&utm_expid=.b1OLVdG4Q824z64aUUlGBQ.2&utm_referrer=">eatigo</a> 上有打折，最低有半价哦。注册时可填写我的邀请码【 <strong>eati1avcj</strong> 】</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155308.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155347.jpeg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161949.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161954.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162001.jpg"></li></ul><h2 id="尝相思-重庆烤鱼"><a href="#尝相思-重庆烤鱼" class="headerlink" title="尝相思 重庆烤鱼"></a>尝相思 重庆烤鱼</h2><ul><li><a href="https://www.google.com/maps/place/Singapore+419779/data=!4m2!3m1!1s0x31da1805c6b3a221:0x2fac1d0a92c28b6f?sa=X&ved=2ahUKEwi44fzsm5bkAhVBfH0KHSk_CGsQ8gEwE3oECAoQBA">地址</a>: Singapore 419779</li><li>点评：地理位置有点偏僻，在 eunos 地铁站出来步行 12 分钟左右。老板是本地人，老板娘是重庆人。他们家的烤鱼是油炸的，算是在新加坡油炸的烤鱼中非常不错的了。而且价格比较的实惠。推荐麻辣味道</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175630.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175636.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175639.jpg"></li></ul><h2 id="午阳烤鱼-NUS-YIH"><a href="#午阳烤鱼-NUS-YIH" class="headerlink" title="午阳烤鱼 NUS YIH"></a>午阳烤鱼 NUS YIH</h2><ul><li><a href="https://www.google.com/search?tbm=lcl&ei=3wGeXY2vOov39QOfsajIBQ&q=nus+yih+food&oq=nus+yih+&gs_l=psy-ab.1.1.0l10.7866.7866.0.8973.1.1.0.0.0.0.69.69.1.1.0....0...1c.1.64.psy-ab..0.1.68....0.trHv8wA6ueM#rlfi=hd:;si:13376272886801035322,l,CgxudXMgeWloIGZvb2QiA4gBAVoQCgAiDG51cyB5aWggZm9vZA;mv:[[1.3055455,103.7867909],[1.2901151,103.77164789999999]]">地址</a>: 31 Lower Kent Ridge Rd, Singapore 119078</li><li>点评： NUS YIH 学校食堂的烤鱼，一份才 12 新币。油炸的鱼，再配以佐料，油汤煮一下即可。味道还不错，油放的超级多（四川人表示很赞），辣度适中，这个价格性价比很高。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191009234939.jpeg"></li></ul><h2 id="太二酸菜鱼-JEM"><a href="#太二酸菜鱼-JEM" class="headerlink" title="太二酸菜鱼 (JEM)"></a>太二酸菜鱼 (JEM)</h2><ul><li>地址：50 Jurong Gateway Rd, #B1-04 JEM, Singapore 608549</li><li>点评：酸菜鱼不错，米饭也可以，价格小贵。 夫妻肺片分量很小</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307291503737.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307291503199.jpeg"></li></ul><h1 id="螃蟹"><a href="#螃蟹" class="headerlink" title="螃蟹"></a>螃蟹</h1><h2 id="珍宝-jumbo-seafood"><a href="#珍宝-jumbo-seafood" class="headerlink" title="珍宝 jumbo seafood"></a>珍宝 jumbo seafood</h2><ul><li>地址：新加坡有几家，看<a href="https://www.jumboseafood.com.sg/en/our-outlets">官网</a></li><li>点评：环境非常好，螃蟹不错，鱼也还行，炒饭好吃，麦片虾推荐</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215152.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215159.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215204.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215209.jpg"></li></ul><h2 id="Long-Seafood"><a href="#Long-Seafood" class="headerlink" title="Long Seafood"></a>Long Seafood</h2><ul><li><a href="https://www.google.com/maps/place/Long+Seafood/@1.3670972,103.8321013,15.81z/data=!4m5!3m4!1s0x31da16d966bf9c5d:0xb8a5924677080786!8m2!3d1.3682784!4d103.8371577">地址</a>： Ang Mo Kio Avenue 3, #01-1222,Block 232, Singapore 560232 龙海鲜螃蟹王宏茂桥店</li><li>点评： 在一个食阁的一楼，店面很大。米粉螃蟹不错，人均 70 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172701.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172705.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172709.jpg"></li></ul><h2 id="Mellben-Signature"><a href="#Mellben-Signature" class="headerlink" title="Mellben Signature"></a>Mellben Signature</h2><ul><li><a href="https://www.google.com/maps/place/Mellben+Signature/@1.2771411,103.839687,16.48z/data=!4m5!3m4!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!8m2!3d1.2770306!4d103.842881">地址</a>：7 Tanjong Pagar Plaza, #01-105, Singapore 081007</li><li>点评： 人均 60 新币，感觉螃蟹小一点点，没有宏茂桥那家好吃，米粉螃蟹的话。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173222.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173227.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173230.jpg"></li></ul><h2 id="Por-Kee-Eating-House-1996"><a href="#Por-Kee-Eating-House-1996" class="headerlink" title="Por Kee Eating House 1996"></a>Por Kee Eating House 1996</h2><ul><li><a href="https://www.google.com/maps/place/Por+Kee+Eating+House+1996/@1.2842764,103.8297145,17.59z/data=!4m5!3m4!1s0x31da197a03941b03:0x52f6df3241826f4e!8m2!3d1.2842166!4d103.8327882">地址</a>: 69 Seng Poh Ln, #01-02, Singapore 160069</li><li>点评: 非常 local 的一家本地菜系, 需要提前打电话预定，味道还不错，人均 50 左右</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162015.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162017.jpg"></li></ul><h2 id="The-BOILER-Howard-Road"><a href="#The-BOILER-Howard-Road" class="headerlink" title="The BOILER @ Howard Road"></a>The BOILER @ Howard Road</h2><ul><li>地址：18 Howard Rd, #01-06 Novelty BizCentre, Singapore 369585</li><li>点评：其实这是一家海鲜酒吧，但我还是把它归类到螃蟹这一类。海鲜套餐的味道还不错，人均 60 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210502102514.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210502102510.jpg"></li></ul><h1 id="烤肉烤串"><a href="#烤肉烤串" class="headerlink" title="烤肉烤串"></a>烤肉烤串</h1><h2 id="友间厨坊"><a href="#友间厨坊" class="headerlink" title="友间厨坊"></a>友间厨坊</h2><ul><li>地址：2 Venture Dr, #01-37&#x2F;38 Vision Exchange, Singapore  <a href="https://food.grab.com/sg/en/restaurant/a-kitchen-vision-exchange-delivery/SGDD09828">grabfood 网站</a> <a href="https://mp.weixin.qq.com/s/oZZGtxGo3dyMBkiqL-53cg">微信公众号安利文章</a></li><li>点评：一家东北菜馆，价格还算实惠，烤串很不错。牛肉都可以，但猪肉串不行。 干锅筋头巴脑很不错，其实就是牛肉块，牛筋，牛肚锅</li><li>上图： <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210723202000.png"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210723202803.png"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210728091028.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210814131354.jpg"></li></ul><h2 id="Taste-of-Korea-JJIN"><a href="#Taste-of-Korea-JJIN" class="headerlink" title="Taste of Korea JJIN"></a>Taste of Korea JJIN</h2><ul><li>地址：109 Amoy St, Singapore 069929</li><li>点评：非常正宗的一家韩国烤肉店，肉非常的新鲜，他们家的泡菜都是自己做的，不像某些店是去 cold storage 买的泡菜。烤牛舌很好吃，搭配上芥末蘸料</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202202202234060.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202202202234417.jpg"></li></ul><h2 id="WANG-DAE-BAK-BBQ-98-AMOY"><a href="#WANG-DAE-BAK-BBQ-98-AMOY" class="headerlink" title="WANG DAE BAK BBQ@98 AMOY"></a>WANG DAE BAK BBQ@98 AMOY</h2><ul><li>地址：98 Amoy Street Singapore 069918 官网可以预定 <a href="https://www.wangdaebakbbq.sg/">https://www.wangdaebakbbq.sg/</a> </li><li>点评：味道不错，人均 40 多新币。厚五花肉真的很厚，不推荐。推荐还是吃 2 厘米那个不错， 薄切牛肉 slice beef 不错，一定要试一试。half &amp; half pancake 也不错。它家还有一家分店在 93，Wang Dae Bak Pocha BBQ，Wang Dae Bak Pocha is managed by the Wang Dae Bak Group, except that the concept at Pocha takes on a retro Korean street food vibe inspired by the 70’s and 80’s.<br>The other main difference between Pocha and the other Wang Dae Bak outlets is that Pocha uses Traditional Korean Iron Grill BBQ, as opposed to charcoal BBQ used in other outlets.<br>唯一的区别就是 POCHA 是铁热， WANG DAE BAK  是炭火加热。还是炭火的好吃一点哦</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220125.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220131.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220137.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220144.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116145405.jpeg"></li></ul><h2 id="Wang-Dae-Bak-Grill"><a href="#Wang-Dae-Bak-Grill" class="headerlink" title="Wang Dae Bak Grill"></a>Wang Dae Bak Grill</h2><ul><li>地址：3 Lorong Liput, Holland Piazza Level 2, Singapore 277725 (Closed every Tuesday)</li><li>点评： 以前这家店是 saizeriya， 这家烤肉是店是最近新开的，我觉得味道很一般，没有 Amoy Street 的好吃. 2023 再来，这次点的猪蹄，原味和甜辣双拼，都不错，有点辣哦。蜂蜜炸鸡也不错</li><li>上图： <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/1F76A5A3-FF83-4C9B-8E84-A57DEDD60A0C_1_105_c.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/B09B3963-8AE1-4B1F-9232-5A97EE9356DC_1_105_c.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307152325042.jpeg"></li></ul><h2 id="Omma-Korean-Charcoal-BBQ"><a href="#Omma-Korean-Charcoal-BBQ" class="headerlink" title="Omma Korean Charcoal BBQ"></a>Omma Korean Charcoal BBQ</h2><ul><li>地址：21 Lor Mambong, Singapore 277680</li><li>点评：荷兰村酒吧一条街上面，我们 2 人吃的 set 3 完全够吃了，而且和牛真的好油啊，人均 50 新币，小贵。 第二次去，我们 2 人只要一个 set 1 纯猪肉，刚刚合适。那个 sweet and spicy 的炸鸡也不错</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210829222244.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210829222247.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210904214719.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210928231838.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301934709.jpeg"></li></ul><h2 id="Myeong-Ryun-Jinsa-Galbi"><a href="#Myeong-Ryun-Jinsa-Galbi" class="headerlink" title="Myeong Ryun Jinsa Galbi"></a>Myeong Ryun Jinsa Galbi</h2><ul><li>地址：17E Lor Liput, Singapore 277731</li><li>点评：荷兰村酒吧一条街上面，自助的韩国烤肉，周一到周四的中午会便宜一点。肉好吃的排名是 LA short ribs &gt; beef brisket &gt; pork jowl &gt; pork belly &gt; galbi</li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211203142913.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211203142917.jpg">  <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211203142922.jpg"></li></ul><h2 id="Supulae"><a href="#Supulae" class="headerlink" title="Supulae"></a>Supulae</h2><ul><li>李加绒同学倾情推荐，还没有来得及去吃。</li></ul><h2 id="Super-Star-K"><a href="#Super-Star-K" class="headerlink" title="Super Star K"></a>Super Star K</h2><ul><li><a href="https://www.google.com/maps/place/Super+Star+K/@1.2779864,103.8416363,17z/data=!3m1!4b1!4m5!3m4!1s0x31da196d3b353d13:0xa2254940717b1324!8m2!3d1.277981!4d103.843825">地址</a>: 75 Tg Pagar Rd, Singapore 088496</li><li>点评：吃过3次了，那一条街大部分店面都是晚上营业，他家是少有的中午也开门。味道不错，分量也很足。服务员还会帮忙烤肉，态度也很好的。人均 40 新左右，推荐。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120216.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120210.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120206.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120222.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122223.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122227.jpg"></li></ul><h2 id="Hyang-Yeon-Korean-Restaurant"><a href="#Hyang-Yeon-Korean-Restaurant" class="headerlink" title="Hyang Yeon Korean Restaurant"></a>Hyang Yeon Korean Restaurant</h2><ul><li>地址：128 Telok Ayer St, #01-01, Singapore 068597 有三家店</li><li>点评：这个猪蹄是真的不错，一半是辣炒，一半是卤味.</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211218195634.jpeg"></li></ul><h2 id="The-Go-Gi-Jip"><a href="#The-Go-Gi-Jip" class="headerlink" title="The Go Gi Jip"></a>The Go Gi Jip</h2><ul><li>地址：72 Tg Pagar Rd, Singapore 088493 <a href="https://www.thegogijip.com/">官网</a></li><li>点评：黑猪肉不错，牛肉也还行。但牛肉贵一点点。人均五六十的样子。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200829202439.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200829202446.jpg"></li></ul><h2 id="GO-K-BBQ"><a href="#GO-K-BBQ" class="headerlink" title="GO! K - BBQ"></a>GO! K - BBQ</h2><ul><li><a href="https://www.google.com/maps/place/GO!+K+-+BBQ+%28%EA%B3%A0%EC%BC%80%EC%9D%B4+%EB%B9%84%EB%B9%84%ED%81%90%29/@1.2805141,103.8444605,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190d6ec97b63:0x8df5f639962a0c51!8m2!3d1.2805087!4d103.8466492">地址</a>: 76 Amoy St, Singapore 069895 就在川菜《成都》店旁边，都在厦门街</li><li>点评：晚上才开，人很多，最好提前预定。他家的肉是腌制过后的肉，味道更加的美味。但感觉服务员少了，有点忙不过来。肉的分量稍微小点，价格也就偏贵。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120227.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120232.jpg"></li></ul><h2 id="烧肉王子"><a href="#烧肉王子" class="headerlink" title="烧肉王子"></a>烧肉王子</h2><ul><li><a href="https://www.google.com/maps/place/YAKINIKU+OHJI/@1.3115275,103.7647342,19.12z/data=!4m8!1m2!2m1!1z54On6IKJ546L5a2Q!3m4!1s0x0:0xfe0d932f72c53d41!8m2!3d1.3119171!4d103.7651466">地址</a>: 321 Clementi Ave 3, #01-01, Singapore 129905</li><li>点评： 日式的自助烤肉，分为三个等级：只有鸡肉，有猪肉牛肉，顶级和牛。我们当时吃的是中间那个档次，人均 32 新币。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120241.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120235.jpg"></li></ul><h2 id="大胡子烧烤"><a href="#大胡子烧烤" class="headerlink" title="大胡子烧烤"></a>大胡子烧烤</h2><ul><li><a href="https://www.google.com/maps/place/%E5%A4%A7%E8%83%A1%E5%AD%90%E7%83%A7%E7%83%A4+Moustache+BBQ/@1.3156963,103.8827708,19z/data=!3m1!4b1!4m5!3m4!1s0x31da183b17be1ecf:0x72a7719ac6298795!8m2!3d1.315695!4d103.883318">地址</a>: 70 Lor 25A Geylang, Singapore 388255</li><li>点评： 就在 Aljunied 地铁站出来，烤串是非常不错。干锅肥肠还需要煎的更焦一点。 店里有点炒闹，吃饭时感觉回到了国内小城市的街边小店。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112206.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112210.jpg"></li></ul><h2 id="香港小厨"><a href="#香港小厨" class="headerlink" title="香港小厨"></a>香港小厨</h2><ul><li><a href="https://www.google.com/maps/place/Hong+Kong+Kitchen/@1.2930018,103.7688243,20.15z/data=!4m5!3m4!1s0x31da1afc3d91620f:0x1005559cd93f32a6!8m2!3d1.2930409!4d103.7687545">地址</a>: 24 Clementi Rd, Singapore 129753</li><li>点评：就在 NUS 后街，烤串还是不错的，烤羊排不行，少的太真实了。烤韭菜，一定要让老板少放点盐啊！</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112215.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112218.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112220.jpg"></li></ul><h2 id="王大爷烧烤"><a href="#王大爷烧烤" class="headerlink" title="王大爷烧烤"></a>王大爷烧烤</h2><ul><li><a href="https://www.google.com/maps/place/Grandpa's+BBQ/@1.2838619,103.8441928,19.72z/data=!4m5!3m4!1s0x31da19735213b637:0x3ab7d78c61a477e5!8m2!3d1.2838905!4d103.8445477">地址</a>: 16 Mosque St, Singapore 059496</li><li>点评：在牛车水摩士街，有点小贵。店面环境还不错，味道一般般，那个柴火鸡一定不要点，比起成都的差太多了，吃了想打人。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113639.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113636.jpg"></li></ul><h2 id="HANSSIK"><a href="#HANSSIK" class="headerlink" title="HANSSIK"></a>HANSSIK</h2><ul><li>地址: 3155 Commonwealth Ave W, #05-17&#x2F;18, Singapore 129588</li><li>点评： 金文泰商场 5 楼，一家自助烤肉，味道还行吧，人均 33 新。吃到最后有点闷了。。。。</li><li>上图：   <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113732.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113735.jpg"></li></ul><h2 id="gyu-kaku"><a href="#gyu-kaku" class="headerlink" title="gyu-kaku"></a>gyu-kaku</h2><ul><li><a href="https://www.google.com/maps?q=gyu-kaku+@the+star+vista&um=1&ie=UTF-8&sa=X&ved=2ahUKEwiTqsPd6ufnAhVDyDgGHTu_AK0Q_AUoAXoECBwQAw">地址</a>: 1 Vista Exchange Green #02-17, The Star Vista</li><li>点评：一家不错的日式烧肉连锁店，详情看<a href="https://www.gyu-kaku.com.sg/">官网</a>，有自助烤肉，也有单点的。自助限时 90 分钟，味道还不错。这家店单点人均都是 60+ ， 比 tanjong pagar 那条街的韩国烤肉还贵。我已经吃了五六次了，从省钱角度上来说，一定要吃自助啊，澳洲和牛那个自助，税后一共人均 78 新币的样子，比较推荐这个。日本和牛那个人均 100 新币，但非常的油腻，不是很安利，吃多了就闷得慌。 </li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215643.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215646.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215651.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170257.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170301.jpg"></li></ul><h2 id="好张记烧烤"><a href="#好张记烧烤" class="headerlink" title="好张记烧烤"></a>好张记烧烤</h2><ul><li>地址： 530 Geylang Rd, Singapore 389486</li><li>点评：烤肥牛很棒，非常好吃，满满的油脂芬芳。烤鸡肉串，牛肉串也可以，醋花生也不错的。烤生蚝我觉得一般</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093531.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093538.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093546.jpg"></li></ul><h1 id="鸡饭"><a href="#鸡饭" class="headerlink" title="鸡饭"></a>鸡饭</h1><h2 id="了凡香港油鸡饭"><a href="#了凡香港油鸡饭" class="headerlink" title="了凡香港油鸡饭"></a>了凡香港油鸡饭</h2><ul><li><a href="https://www.google.com/maps/place/%E9%A6%99%E6%B8%AF%E6%B2%B9%E9%B6%8F%E9%A3%AF%E9%BA%BA/@1.2830062,103.8420419,18z/data=!4m12!1m6!3m5!1s0x31da197318313879:0x32fdfa545f34d128!2z6aaZ5riv5rK56bih6aWt6Z2iMi9G!8m2!3d1.2826067!4d103.8432113!3m4!1s0x0:0x9ac9da435638ad56!8m2!3d1.2831614!4d103.8429974">地址</a>：78 Smith St, Singapore 058972</li><li>点评： 米其林一星的鸡饭，我觉得可以。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170032.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144001.jpg"></li></ul><h2 id="天天海南鸡饭"><a href="#天天海南鸡饭" class="headerlink" title="天天海南鸡饭"></a>天天海南鸡饭</h2><p>待吃</p><h2 id="荣亮阁"><a href="#荣亮阁" class="headerlink" title="荣亮阁"></a>荣亮阁</h2><ul><li><a href="https://www.google.com/maps/place/Rong+Liang+Restaurant+%E6%A6%AE%E4%BA%AE%E9%96%A3/@1.3037029,103.7631718,19.84z/data=!4m5!3m4!1s0x31da1aedff402c6b:0xd6e2974e3a8ca8f2!8m2!3d1.303813!4d103.7636313">地址</a>: #01-192, 725 Clementi West Street 2, Block 725, Singapore 120725</li><li>点评：家附近的一家鸡饭店，本地人经常去吃，物美价廉。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150141.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150146.jpg"></li></ul><h2 id="良伟腊味饭"><a href="#良伟腊味饭" class="headerlink" title="良伟腊味饭"></a>良伟腊味饭</h2><ul><li><a href="https://www.google.com/maps/place/Leong+Wei+Roasted+Delight/@1.3082051,103.79308,20.77z/data=!4m5!3m4!1s0x31da1a6a042925ed:0x8e651ad3c3dde1c4!8m2!3d1.3081371!4d103.7930037">地址</a>:  44 Holland Dr, #02-36, Singapore 270044 Holland Drive Market and Food Centre</li><li>点评： 每天 11:30 才开卖，然而 11 点就已经有人排队了。价格便宜，半只鸡才 12 新币，味道非常的不错，特别是它家的辣椒酱，带一点点甜味。每天下午 四五点卖完就收摊了。 每周四休息</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621171112.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621171125.jpg"></li></ul><h2 id="Wee-Nam-Kee-Hainanese-Chicken-Rice"><a href="#Wee-Nam-Kee-Hainanese-Chicken-Rice" class="headerlink" title="Wee Nam Kee Hainanese Chicken Rice"></a>Wee Nam Kee Hainanese Chicken Rice</h2><ul><li>地址：101 Thomson Rd, #01-08 United Square, Singapore 307591 官网 <a href="http://wnk.com.sg/">http://wnk.com.sg/</a></li><li>点评：鸡饭非常的不错，咖喱鱼头也是非常的好处。强烈推荐，全岛有好几家分店，大家可以去官网查看。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210508231637.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210508231640.jpg"></li></ul><h2 id="Encik-Heng-chicken-rice-amp-roasted-pork"><a href="#Encik-Heng-chicken-rice-amp-roasted-pork" class="headerlink" title="Encik Heng chicken rice &amp; roasted pork"></a>Encik Heng chicken rice &amp; roasted pork</h2><ul><li>地址: 2 Venture Dr, Singapore 608526</li><li>点评: 芝麻鸡饭非常的不错，烧鸡饭一般，叉烧还可以</li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210814131401.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210814131357.jpg"></li></ul><h1 id="面食"><a href="#面食" class="headerlink" title="面食"></a>面食</h1><h2 id="西部马华-荷兰村"><a href="#西部马华-荷兰村" class="headerlink" title="西部马华-荷兰村"></a>西部马华-荷兰村</h2><ul><li>地址：245 Holland Ave, Singapore 278978</li><li>点评：味道很不错，拉面第二份半价也划算</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304030009341.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304030009012.jpeg"></li></ul><h2 id="好滋味鸡公煲"><a href="#好滋味鸡公煲" class="headerlink" title="好滋味鸡公煲"></a>好滋味鸡公煲</h2><ul><li>地址：3 Gateway drive B1-28 Westgate，Food Republic，608532 (Jurong East MRT）图片里有 3 家分店</li><li>点评：面非常的不错，就是有点辣（四川人也顶不住，建议小辣） <a href="https://www.yan.sg/renqibaopengdejigongbao/">https://www.yan.sg/renqibaopengdejigongbao/</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093517.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809100147.jpeg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093511.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093507.jpg"></li></ul><h2 id="给面子"><a href="#给面子" class="headerlink" title="给面子"></a>给面子</h2><ul><li>地址：46 Holland Dr coffeeshop Opening Hours is from 7am - 9pm</li><li>点评：很不错的一家本地面店，比大华好很多，软骨面强烈推荐。丸子汤也不错</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211203142906.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211203144027.jpeg"></li></ul><h2 id="大华猪肉裸条面"><a href="#大华猪肉裸条面" class="headerlink" title="大华猪肉裸条面"></a>大华猪肉裸条面</h2><ul><li><a href="https://www.google.com/maps/place/Hill+Street+Tai+Hwa+Pork+Noodle/@1.305169,103.8603009,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19b42ad981b9:0x99e64da5de0603b8!8m2!3d1.305169!4d103.8624896">地址</a>: 466 Crawford Ln, #01-12, Singapore 190466</li><li>点评: 就在 ICA 移民局背后的组屋群，一楼的食阁窗口，号称米其林一星。味道还不错，料很足的。但是价格也比一般的店铺贵一点，还是值得一吃。荷兰村也有一家，我觉得一般，丸子汤不要点</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140435.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140442.jpg"></li></ul><h2 id="舌尖尖兰州拉面"><a href="#舌尖尖兰州拉面" class="headerlink" title="舌尖尖兰州拉面"></a>舌尖尖兰州拉面</h2><ul><li><a href="https://mp.weixin.qq.com/s/SFz9PiGVADIdEChbJeNCmg">地址</a>：有几家分店 302 Tiong Bahru Road, Tiong Bahru Plaza,#02-107</li><li>点评：在新加坡非常火的一家兰州拉面，味道还是不错的。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg"></li></ul><h2 id="Xi’An-Impression-西安印象"><a href="#Xi’An-Impression-西安印象" class="headerlink" title="Xi’An Impression 西安印象"></a>Xi’An Impression 西安印象</h2><ul><li>地址：2 Venture Dr, #01-24 Vision Exchange, Singapore 608526</li><li>点评：在 jurong east 地铁出来，步行 8 分钟到 Vision Exchange</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142838.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142833.jpg"></li></ul><h2 id="黄土地西安小吃"><a href="#黄土地西安小吃" class="headerlink" title="黄土地西安小吃"></a>黄土地西安小吃</h2><ul><li>地址：321 CLEMENTI AVE 3, #02-08 321 CLEMENTI(Shopping mall, 129905</li><li>点评：在 321 mall 里面二楼，周末才有胡辣汤，油泼面也很不错，那个桂花稠酒很淡，甄糕还不错，稍微有点干。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202208082258633.JPG"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202208082257937.JPG"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202208082257331.jpeg"></li></ul><h2 id="XIAO-GUAN-ZI-小馆子-金文泰店"><a href="#XIAO-GUAN-ZI-小馆子-金文泰店" class="headerlink" title="XIAO GUAN ZI 小馆子 金文泰店"></a>XIAO GUAN ZI 小馆子 金文泰店</h2><ul><li>地址：Clementi Ave 3, 443号SG #01-55 邮政编码: 120443</li><li>点评：在 clementi 公交车站旁的一个食阁里面，我目前吃过肉夹馍，我觉得肉夹馍猪肉很好吃。它家的外卖：<a href="https://deliveroo.com.sg/menu/singapore/clementi/xiao-guan-zi-clementi-koufu">https://deliveroo.com.sg/menu/singapore/clementi/xiao-guan-zi-clementi-koufu</a></li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306041733877.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306041733446.jpeg"></li></ul><h2 id="O-BBa-Jjajang"><a href="#O-BBa-Jjajang" class="headerlink" title="O.BBa Jjajang"></a>O.BBa Jjajang</h2><ul><li><a href="https://www.google.com/maps/place/O.BBa+Jjajang/@1.277942,103.84381,21z/data=!4m5!3m4!1s0x31da196d24b78dd5:0x6966f7d8ce0bda08!8m2!3d1.2779418!4d103.8438101">地址</a>: 77 Tg Pagar Rd, Singapore 088498</li><li>点评： 他家的炸酱面不错，大猪蹄子也还可以。每次都需要排队一小会，中午也开门，旁边就是那家 <a href="#Super-Star-K">Super Star K</a> </li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162011.jpg"></li></ul><h2 id="川巷米粉"><a href="#川巷米粉" class="headerlink" title="川巷米粉"></a>川巷米粉</h2><ul><li><a href="https://www.google.com/maps/place/Chuan+Hung+The+Noodle+Place/@1.2830203,103.849014,19.3z/data=!4m12!1m6!3m5!1s0x31da198ccb7e3611:0xc7ccac447235071d!2sChuan+Hung+The+Noodle+Place!8m2!3d1.2831443!4d103.8492268!3m4!1s0x31da198ccb7e3611:0xc7ccac447235071d!8m2!3d1.2831443!4d103.8492268">地址</a>: 51A Telok Ayer St, #01-01, Singapore 048441</li><li>点评：老司机晓蕊带我来吃的这家川巷米粉，味道非常的不错，推荐藤椒味牛舌米粉和牛肉面。冒节子也是非常不错的。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201204141309.jpeg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200406193025.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200406193051.jpg"></li></ul><h2 id="Le-Shrimp-Ramen"><a href="#Le-Shrimp-Ramen" class="headerlink" title="Le Shrimp Ramen"></a>Le Shrimp Ramen</h2><p>地址：<a href="https://www.paradisegp.com/le-shrimp-ramen/">https://www.paradisegp.com/le-shrimp-ramen/</a><br>点评：拉面味道还是不错的<br>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230534.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230539.jpg"></p><h2 id="Mian-Jia"><a href="#Mian-Jia" class="headerlink" title="Mian Jia"></a>Mian Jia</h2><ul><li>地址：19 Lorong Liput，Holland Village Singapore, 277732 <a href="https://mianjianoodlebar.getz.co/">官网</a></li><li>点评：西班牙黑豚肉汤面不错，手打虾丸麻辣汤面很一般, 龙虾面也还行。米粉比幼面好吃</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200911183811.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202112251844016.jpeg"></li></ul><h2 id="Chuan-Noooodle"><a href="#Chuan-Noooodle" class="headerlink" title="Chuan Noooodle"></a>Chuan Noooodle</h2><ul><li>地址：5 Straits View, B2-35 详细地图 <a href="http://moments.com.sg/store/chuan-noooodle/">http://moments.com.sg/store/chuan-noooodle/</a> </li><li>点评：我第一次去只吃了甜水面，味道还可以。 就是位置有点难找， 在 Marina one 负二楼</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210113123408.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210113123413.jpg"></li></ul><h2 id="Ah-Heng-Curry-Chicken-Bee-Hoon-Mee"><a href="#Ah-Heng-Curry-Chicken-Bee-Hoon-Mee" class="headerlink" title="Ah Heng Curry Chicken Bee Hoon Mee"></a>Ah Heng Curry Chicken Bee Hoon Mee</h2><ul><li>address：531A Upper Cross St, #02-57&#x2F;58, Singapore 051531</li><li>review：Thanks old driver Alex bring us to the famous curry noodle in Hong Lim Market &amp; Food Centre. The curry is really nice, option size is 5&#x2F;6&#x2F;7 SGD. must try it</li><li>photos: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210122143908.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210122143916.jpg"></li></ul><h2 id="Chilli-Pan-Mee-Batu-Rd"><a href="#Chilli-Pan-Mee-Batu-Rd" class="headerlink" title="Chilli Pan Mee (Batu Rd)"></a>Chilli Pan Mee (Batu Rd)</h2><ul><li>address: 22 China St, Singapore 049564</li><li>review: Thanks Fabian recommendation and brings us to this spicy noodle. I add 3 spoons chilli, it’s too spicy. Best chilli half spoon to 2 spoon.</li><li>photos: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210205224312.jpeg"></li></ul><h2 id="新美香卤面"><a href="#新美香卤面" class="headerlink" title="新美香卤面"></a>新美香卤面</h2><ul><li>地址：Block 43 Holland Drive #01-75, Stall 6 S(270043), 7:30AM - 5:30PM daily.</li><li>点评：一家米其林网红点，很粘稠的卤汁，第一次吃这种类型的面，还可以。 可以参考这个<a href="https://youtu.be/T1YjSKc0hSo">视频</a></li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211203144224.jpeg"></li></ul><h2 id="Kajiken-Singapore-Tanjong-Pagar-outlet"><a href="#Kajiken-Singapore-Tanjong-Pagar-outlet" class="headerlink" title="Kajiken Singapore -Tanjong Pagar outlet"></a>Kajiken Singapore -Tanjong Pagar outlet</h2><ul><li>地址：1 Tras link #01-03 Orchid Hotel Singapore, Singapore 078867</li><li>点评：拉面味道真心的不错，葱香拌面，价格也实惠。强烈推荐去试一试</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211205212525.jpeg"></li></ul><h2 id="Shixiangge-食香阁"><a href="#Shixiangge-食香阁" class="headerlink" title="Shixiangge 食香阁"></a>Shixiangge 食香阁</h2><ul><li>地址：514 Bishan Street 13, level 2 Bishan Bus Interchange, Singapore 570514</li><li>点评：BiShan 地铁站 A 口出来，穿过商城，走到 Bishan Bus Interchange。 这家面馆就在二楼的食阁里面，在自助点餐机上面下单。 靠近墙壁的 2 个自助点餐机可以 pay wave， 档口那个只能现金。刀削肥肠面还可以，凉皮一般。岐山臊子面也不错</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306191525496.jpeg"></li></ul><h2 id="Sanpoutei-Ramen"><a href="#Sanpoutei-Ramen" class="headerlink" title="Sanpoutei Ramen"></a>Sanpoutei Ramen</h2><ul><li>地址：253 Holland Ave, Singapore 278982</li><li>点评：荷兰村地铁站 B 口出来往前走几步就到了，一家味道非常不错的日本拉面。就是店面很小，有时候需要排队一会。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307231628165.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307231628256.jpeg"></li></ul><h1 id="日料"><a href="#日料" class="headerlink" title="日料"></a>日料</h1><h2 id="Waa-Cow"><a href="#Waa-Cow" class="headerlink" title="Waa Cow"></a>Waa Cow</h2><ul><li>地址：#01-06 College Ave West, Stephen Riady Centre, 138607</li><li>点评：我去的是 NUS 学校里的这家分店，和牛饭非常的好吃。菜单和价格，参考官网 <a href="https://www.waacow.sg/">https://www.waacow.sg/</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201212095706.jpeg"></li></ul><h2 id="Sushi-Tei"><a href="#Sushi-Tei" class="headerlink" title="Sushi Tei"></a>Sushi Tei</h2><ul><li><a href="https://www.sushitei.com/outlets/outlets.aspx">地址</a>: 新加坡全岛有 13 家分店，我是在家附近 Raffles Holland V 吃的</li><li>点评：猪肉饭非常的不错，鳗鱼寿司也可以。金针菇牛肉卷感觉一般，刺身拼盘也可以。2023 年来再吃，冷面也是可以的，生鱼片不太行，有点腥 <a href="https://www.sushitei.com/menu/menu.aspx">官网菜单</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144810.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144813.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307082300980.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307082300448.jpeg"></li></ul><h2 id="鶏金-Torikin"><a href="#鶏金-Torikin" class="headerlink" title="鶏金 Torikin"></a>鶏金 Torikin</h2><ul><li>地址： 205 River Valley Road #01-75 UE Square, 238274</li><li>点评： 非常的清淡，有很多种锅：白煮鸡，酱油鸡，牛粉肠，肥牛锅等。 需要提前打电话预定</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223348.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223406.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223402.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223358.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223353.jpg"></li></ul><h2 id="Man-Man-Japanese-Unagi-Restaurant"><a href="#Man-Man-Japanese-Unagi-Restaurant" class="headerlink" title="Man Man Japanese Unagi Restaurant"></a>Man Man Japanese Unagi Restaurant</h2><ul><li>地址：1 Keong Saik Rd., #01-01, Singapore 089109 从 outram park 紫线 G 口出来走 5 分钟就到了</li><li>点评： 疫情期间，我们在家用 grab 点的外卖，一份 40+ 新币，但味道不错。 后来我们又去店里吃，小店的门也太偏僻了，店里更好吃。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223343.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211207154951.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211207154955.jpg"></li></ul><h2 id="Imakatsu"><a href="#Imakatsu" class="headerlink" title="Imakatsu"></a>Imakatsu</h2><ul><li>地址：1 Vista Exchange Green, Singapore 138617</li><li>点评：炸猪排味道不错，值得一吃，20 多新币。鳗鱼饭一般般，不推荐啦。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210707081059.jpeg">  <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210627201714.jpeg"></li></ul><h2 id="SUSHIRO"><a href="#SUSHIRO" class="headerlink" title="SUSHIRO"></a>SUSHIRO</h2><ul><li>地址：302 Tiong Bahru Rd, #02-118, Singapore 168732 <a href="https://www.akindo-sushiro.co.jp/cn/">官网菜单介绍</a> <a href="http://bit.ly/SUSHIROAppiOS">下载 App 免排队</a></li><li>点评：好吃便宜的旋转寿司，性价比高。它家小甜品也不错。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230615.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230557.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230606.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230624.jpg"></li></ul><h2 id="Goro-Japanese-Cuisine"><a href="#Goro-Japanese-Cuisine" class="headerlink" title="Goro Japanese Cuisine"></a>Goro Japanese Cuisine</h2><ul><li>地址：43 Holland Dr, #01-49, Singapore 270043</li><li>点评：一家非常家常的小店，就在街边上，味道很不错，价格实惠。 最好吃的就是它家的 M1 寿司，还有鳗鱼饭。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200919100023.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200919100017.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200919100011.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200924171904.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200924171909.jpg"></li></ul><h2 id="Shin-Kushiya-Vivocity"><a href="#Shin-Kushiya-Vivocity" class="headerlink" title="Shin Kushiya Vivocity"></a>Shin Kushiya Vivocity</h2><ul><li>地址：1 HarbourFront Walk, #02-120 Vivocity, Singapore</li><li>点评：人超多，最好是提前预定。寿司我觉得很一般，推荐烤肉串，推荐鸡肉，牛肉，牛肉卷金针菇，猪肉有一点点腻，人均 50 多新币。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201122164739.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201122164746.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201122164754.jpg"></li></ul><h2 id="Kumo-Japanese-Dining"><a href="#Kumo-Japanese-Dining" class="headerlink" title="Kumo Japanese Dining"></a>Kumo Japanese Dining</h2><ul><li>地址：321 Alexandra Road, Alexandra Central, #01-10, 159971</li><li>点评：在商场的一楼，店面很小。有自助和单点，我是吃的自助， 人均 40 新币。周五周末节假日自助会限时，其他工作日自助不限时。有刺身，寿司，手卷，饭团，面，饭，天妇罗，汤，烧烤。Google map 上评分非常高</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201217235315.jpeg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201217235034.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201217235039.jpg"></li></ul><h2 id="The-Public-Izakaya"><a href="#The-Public-Izakaya" class="headerlink" title="The Public Izakaya"></a>The Public Izakaya</h2><ul><li>地址：100 Tras St, #01 - 09, Singapore 079027  其实就在 100 AM Mall 后门旁边</li><li>点评：装修风格不错，屋内有榻榻米雅座，需要提前一到两周预定。 烤肉串还可以，它家的酒太贵了，贫穷的打工人我吃不起。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201223161004.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201223161008.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201223161014.jpg"></li></ul><h2 id="Yakiniku-Don-Don-1st"><a href="#Yakiniku-Don-Don-1st" class="headerlink" title="Yakiniku Don-Don 1st"></a>Yakiniku Don-Don 1st</h2><ul><li>地址：90 Tg Pagar Rd, Singapore 088511</li><li>点评：店很小一个，需要提前预定。这次是坐的 Counter Seat，能看到厨师在旁边准备材料。推荐的菜， 牛舌 OX Tongue with Spring Onion, Tenderest Tenderloin,  和牛 Zabuton，牛肠没有猪大肠的味道，有嚼劲， WakemeS 汤也不错， 冷面也好吃。 我两个人吃了 185 SGD</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000042.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000049.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000054.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000059.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000104.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000111.jpg"></li></ul><h1 id="中餐"><a href="#中餐" class="headerlink" title="中餐"></a>中餐</h1><h2 id="密斯湘菜"><a href="#密斯湘菜" class="headerlink" title="密斯湘菜"></a>密斯湘菜</h2><ul><li>地址：8 Mosque St, Singapore 059488</li><li>点评： 在牛车水的一家湖南菜，里面的炒腊肉不错，那个烤鱿鱼拉胯，炒黄牛肉也下饭，还是值得一试。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233539.jpg"></li></ul><h2 id="国色天湘"><a href="#国色天湘" class="headerlink" title="国色天湘"></a>国色天湘</h2><ul><li>地址：100 Tras St, #02-14A, Singapore 079027</li><li>点评： 在 100 AM mall 里面的一家湘菜店，环境不错，价格也还行。 小炒黄牛肉，皮蛋擂茄子，红烧走地鸡不错</li><li>上图： <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/6D13EA36-A483-422D-BE3A-975870E0DA35_1_105_c.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/1524A5BF-B4E9-48CD-A51A-82298DE48F53_1_105_c.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/0B2BC49A-0F06-4F69-B1A9-94C35A08D600_1_105_c.jpeg"></li></ul><h2 id="莆田"><a href="#莆田" class="headerlink" title="莆田"></a>莆田</h2><ul><li><a href="https://www.putien.com/outlet/vivocity/">地址</a>: 1 HarbourFront Walk #02-131&#x2F;132</li><li>点评： 一家非常不错的福建菜。九转粉肠非常的好吃，虾苗拌紫菜也好吃，蛏子也很大只的（蒜蓉+辣炒）。百秒黄花鱼也是很嫩。扁肉汤的馄饨好吃，汤一般般，很腻。大白菜软豆腐汤不错，很好喝推荐。脆皮蒜香鸡不行，不推荐。铁板鳗鱼一般，普宁豆酱蒜香焗鳗鱼不错。一品海蛎煎非常好吃。兴华炒米粉必点，推荐。西安也吃过一次，2023 吃了2次，荔枝肉也不错。新品酸菜肥肠还可以</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233354.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233358.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233401.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233405.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233408.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190904114704.jpeg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200815151001.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200815151006.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112341917.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112341622.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307082257108.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307231626704.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307231628246.jpeg"></li></ul><h2 id="汕头海鲜"><a href="#汕头海鲜" class="headerlink" title="汕头海鲜"></a>汕头海鲜</h2><ul><li><a href="https://swatow.com.sg/home.php">地址</a>: Blk 181 Lorong 4 Toa Payoh #02-602 有两家店</li><li>点评：我们当时是去吃的自助下午茶，会有阿姨推车过，然后选择需要的茶点。环境还不错，菜品也丰富。可以早点去 2:30 到店里。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142958.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143005.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143009.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143012.jpg"></li></ul><h2 id="大牛潮汕海鲜"><a href="#大牛潮汕海鲜" class="headerlink" title="大牛潮汕海鲜"></a>大牛潮汕海鲜</h2><ul><li>地址： 61 Kampong Bahru Rd, Singapore 169368 在 Outram Park 附近</li><li>点评：卤鹅 + 卤猪蹄肉不错， 虾也很新鲜， 牛肉丸好吃，推荐。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211216143325.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211216143330.jpeg"></li></ul><h2 id="蟹老宋"><a href="#蟹老宋" class="headerlink" title="蟹老宋"></a>蟹老宋</h2><ul><li><a href="https://www.google.com.sg/maps/place/Crab+Song+Seafood+Restaurant/@1.2820955,103.8423314,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19732a617c17:0x7a7c31f97d06d8d0!8m2!3d1.2820901!4d103.8445201">地址</a>: 16 Smith St, Singapore 058930</li><li>点评：本来去是想吃大闸蟹的，结果只剩大个头的蟹蟹，48 新币一只，打扰了。然后就吃了他家的其他一些菜，小龙虾和烤鸭都还不错的，酸辣鸡杂也不错。</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112534.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112539.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112543.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112547.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112551.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112554.jpg"></li></ul><h2 id="阿里疆"><a href="#阿里疆" class="headerlink" title="阿里疆"></a>阿里疆</h2><ul><li>地址： HarbourFront Walk, #03-11B VivoCity, Singapore 098585</li><li>点评：西北菜，大盘鸡，杏皮茶，酿皮不错，人均 50+ 新币</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230545.jpg"></li></ul><h2 id="手拉手山东菜馆"><a href="#手拉手山东菜馆" class="headerlink" title="手拉手山东菜馆"></a>手拉手山东菜馆</h2><ul><li>地址：69 Boat Quay, Singapore 049857 (Nearest MRT exit: EW14&#x2F;NS26 – Raffles Place or NE5 – Clarke Quay)</li><li>点评：就在克拉克河边上，风景不错。烤鸭也可以。烤鸭、陈麻婆豆腐、脆皮大肠、豆花牛肉，海虾炒白菜，炸萝卜丸子不错，千万不要点爆炸腰花和手撕包菜腊肉。 官网看菜单 <a href="https://handinhandfood.com/hand-in-hand-shandong-restaurant/">https://handinhandfood.com/hand-in-hand-shandong-restaurant/</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231215911.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231215920.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210102165806.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210102165800.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210122143903.jpg"></li></ul><h2 id="御宝至尊烤鸭店"><a href="#御宝至尊烤鸭店" class="headerlink" title="御宝至尊烤鸭店"></a>御宝至尊烤鸭店</h2><ul><li>地址：Asia Square Tower 1, Marina View, #02-08 8, 018960  在二楼，从扶梯上去，绕一下才能看到门口。 官方网站 <a href="https://www.imperialtreasure.com/LG-cn/restaurant/ImperialTreasureSuperPekingDuck">https://www.imperialtreasure.com/LG-cn/restaurant/ImperialTreasureSuperPekingDuck</a></li><li>点评：烤鱼很不错 140 新币，鸭架剩下的肉可以做蛋炒饭，我觉得非常好吃。炭烧猪颈肉有点腻，凉菜猪蹄一般。 黑胡椒筛子牛和干炒牛河都一般。 素菜竹荪还不错。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306251738763.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306251738892.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306251738439.png"></li></ul><h2 id="云海肴"><a href="#云海肴" class="headerlink" title="云海肴"></a>云海肴</h2><ul><li>地址：3 Gateway Dr, #03-07, Singapore 608532</li><li>点评：一家云南菜，感觉还不错。松板肉有点像四川的水煮肉片，但是不辣，黑三剁非常的下饭, 过桥米线也可以，人均 40+ 新币</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233517.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233523.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233528.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210508231634.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307152325984.jpeg"></li></ul><h2 id="东北饺子王"><a href="#东北饺子王" class="headerlink" title="东北饺子王"></a>东北饺子王</h2><ul><li>地址：372 Geylang Road Singapore 389383</li><li>点评：一家不错的东北菜，分量很足，店里人多很热闹，就是有点嘈杂</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231221024.jpeg"></li></ul><h2 id="Spring-Court-詠春园"><a href="#Spring-Court-詠春园" class="headerlink" title="Spring Court 詠春园"></a>Spring Court 詠春园</h2><ul><li>地址：52-56 Upper Cross St, Singapore 058348 </li><li>点评：看起来很高档的一家中餐厅，主要是粤菜，福建菜。金龙百花鸡很不错，薄饼也好吃。想吃烤乳猪，需要用餐人数多一点才行。</li><li>无图</li></ul><h2 id="MONKI-台灣小吃部"><a href="#MONKI-台灣小吃部" class="headerlink" title="MONKI 台灣小吃部"></a>MONKI 台灣小吃部</h2><ul><li>地址： 01-41 Vista Exchange Green, The Star Vista, 138617</li><li>点评：店里的面积不是很大，座位有限，但食物价格还算是实惠。 卤肉饭很不错</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/B0E536B1-5078-44EF-9BC1-6CF487C4F10B_1_102_a.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/C0C672D7-8959-4E41-B63A-2A147E287DA0_1_102_a.jpeg"></li></ul><h2 id="翠華-TSUI-WAH-Jem"><a href="#翠華-TSUI-WAH-Jem" class="headerlink" title="翠華 TSUI WAH - Jem"></a>翠華 TSUI WAH - Jem</h2><ul><li>地址： 50 Jurong Gateway Rd, #01-38 Jem, Singapore 608549</li><li>点评：香港著名的茶餐厅, 牛肉牛筋不错, 猪扒蛋炒饭也很好吃. 那个炒面我觉得一般般, UOB 卡满 50 新币，减 10 新币</li><li>上图： <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307310947727.jpeg"></li></ul><h1 id="东南亚"><a href="#东南亚" class="headerlink" title="东南亚"></a>东南亚</h1><h2 id="Rong-Hua-Bak-Kut-Teh"><a href="#Rong-Hua-Bak-Kut-Teh" class="headerlink" title="Rong Hua Bak Kut Teh"></a>Rong Hua Bak Kut Teh</h2><ul><li><a href="https://www.google.com.sg/maps/place/Rong+Hua+Bak+Kut+Teh/@1.2989347,103.7872707,19z/data=!3m2!4b1!5s0x31da19a8f35a3147:0xc77b3af93afc0695!4m5!3m4!1s0x31da1a4545e6d565:0xc913ef2de4ce7367!8m2!3d1.2989334!4d103.7878179">地址</a>: 1 Fusionopolis Way # B1 - 13, 138632</li><li>点评： 胡椒味很重，吃普通的肉骨茶就行，特级龙骨不好吃，肉太柴了。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315170529.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315170532.jpg"></li></ul><h2 id="松发肉骨茶"><a href="#松发肉骨茶" class="headerlink" title="松发肉骨茶"></a>松发肉骨茶</h2><ul><li><a href="https://songfa.com.sg/pages/outlets">地址</a>: 店太多了，谷歌一下</li><li>点评： 松发是最出名的新加坡肉骨茶，味道不错。卤猪脚很不错，可以选瘦肉多一点。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315171451.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315171454.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304162330508.jpeg"></li></ul><h2 id="Ah-Loy-Thai"><a href="#Ah-Loy-Thai" class="headerlink" title="Ah Loy Thai"></a>Ah Loy Thai</h2><ul><li>地址：9 #01-04 Tan Quee Lan St, Singapore 188098</li><li>点评：正宗且价格实惠的一家泰国菜，第一次和同学来吃，第二次和同事来吃饭（他们去过泰国，说这家非常 authentic）</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223338.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200902231450.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200902231442.jpg"></li></ul><h2 id="Little-Elephant-SG"><a href="#Little-Elephant-SG" class="headerlink" title="Little Elephant SG"></a>Little Elephant SG</h2><ul><li>地址：57 Eng Hoon St, #01-72, Singapore 160057</li><li>点评：在 tiong bahru market 附近的一家泰国菜，开放式环境，没有空调这一点不太行，菜品都还不错。那个虾炒面好辣，不错</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/69DD8ECC-6225-4963-93BB-0053F57C9D50_1_105_c.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/C86288B7-833B-4D2C-9C65-70F05059BFE6_1_102_a.jpeg"></li></ul><h2 id="Nakhon-Kitchen-Holland-Village"><a href="#Nakhon-Kitchen-Holland-Village" class="headerlink" title="Nakhon Kitchen - Holland Village"></a>Nakhon Kitchen - Holland Village</h2><ul><li>地址：27A Lor Liput, Singapore 277738</li><li>点评：这家店价格实惠，味道不错，也有空调。唯一缺点就是：高峰用餐时间，排队的队伍超级长。只能 NETS 和 cash，不能 pay wave 哈</li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207301830047.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207301830728.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307082253912.jpeg"></li></ul><h2 id="Nana-Original-Thai-Food-Clementi"><a href="#Nana-Original-Thai-Food-Clementi" class="headerlink" title="Nana Original Thai Food (Clementi)"></a>Nana Original Thai Food (Clementi)</h2><ul><li>地址：18 Clementi Rd, Singapore 129747  <a href="https://www.nana.thai.restaurant/">https://www.nana.thai.restaurant/</a> </li><li>点评：所有分店都是 24 小时，也太卷了吧。这家店在 NUS 后街，当年读书的时候居然没有发现。 而且居然是用 grab app 扫码点餐的，那个鱼不太行，鱼鳞没有剔除干净。</li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202208042252120.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202208042252136.jpeg"></li></ul><h2 id="Aris-Studio23"><a href="#Aris-Studio23" class="headerlink" title="Aris Studio23"></a>Aris Studio23</h2><ul><li>地址：18 Lor Mambong, Singapore 277678</li><li>点评：就在荷兰村酒吧一条街上，店环境不错，味道也可以， eatigo 上面还有优惠</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231220747.jpeg"></li></ul><h2 id="Enak-Enak-HongKong-Tea-House"><a href="#Enak-Enak-HongKong-Tea-House" class="headerlink" title="Enak Enak HongKong Tea House"></a>Enak Enak HongKong Tea House</h2><ul><li>地址：1202 ECP, Singapore 449881</li><li>点评：每次划水完都来吃的一家东南亚菜系，麦片虾，沙爹都还不错，价格实惠</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233616.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233619.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233622.jpg"></li></ul><h2 id="香港街珍达记"><a href="#香港街珍达记" class="headerlink" title="香港街珍达记"></a>香港街珍达记</h2><ul><li>地址： 46 Holland Dr, Singapore 270046   46CTK@Seafood Pte Ltd</li><li>点评：租房附近的一个本地煮炒，蒜蓉豆苗和耗油奶白菜都不错，咸蛋黄鸡丁可以，咸蛋黄排骨（其实不是排骨，是肉片）</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210516104331.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210516104334.jpg"></li></ul><h2 id="樂天皇朝"><a href="#樂天皇朝" class="headerlink" title="樂天皇朝"></a>樂天皇朝</h2><ul><li>地址：3 Gateway Drive Westgate #02-13 <a href="https://www.paradisegp.com/cn/brand-paradise-dynasty/">官网</a></li><li>点评：糕点类还不错，川菜类那就算咯。人均 40 +</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210720211206.jpeg"></li></ul><h2 id="Hillman-99-Restaurant"><a href="#Hillman-99-Restaurant" class="headerlink" title="Hillman 99 Restaurant"></a>Hillman 99 Restaurant</h2><ul><li>地址：99 Pasir Panjang Rd, Singapore 118517</li><li>点评：罗华哥哥推荐的一家粤菜，很正宗。猪肝很嫩，蟹肉粥也很好吃。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207141507544.jpeg"></li></ul><h2 id="Legendary-Hong-Kong-Rochester-Commons"><a href="#Legendary-Hong-Kong-Rochester-Commons" class="headerlink" title="Legendary Hong Kong @ Rochester Commons"></a>Legendary Hong Kong @ Rochester Commons</h2><ul><li>地址：10A Rochester Park, Rochester Commons, Singapore 139258</li><li>点评：buona vsita 附近的一家粤菜，牛肉蛋炒饭是最好吃的。骰子（色子）牛肉，鸭腿都还不错。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207141511049.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307291504459.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307291504452.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307291504187.jpeg"></li></ul><h1 id="西餐"><a href="#西餐" class="headerlink" title="西餐"></a>西餐</h1><h2 id="Panamericana"><a href="#Panamericana" class="headerlink" title="Panamericana"></a>Panamericana</h2><ul><li>地址：27 Bukit Manis Rd, Sentosa Golf Club, 099892 先坐 express 到 beach station，再步行 2 分钟到 Beach Station Bus terminal 坐 shuttle bus B, 坐到 Sentosa Golf Club 这一站下车。</li><li>点评：这家店的风景是目前吃过餐厅中最佳的，Pluma Iberico Pork 非常好吃（已经没有这个菜了），那个酱很不错。 Liitle Joe Ribeye 也很不错，配菜不知道是酸菜还是咸菜很好吃。 Colombian Chicken 我觉得一般，Charred Octopus Tentacle 还不错. California salad 也不错， Tacos 也还行， Churros 西班牙油条太甜了。 总体来说，人均 70 - 100 新币，非常的不错，待客的好地方。就是室外的座位需要提前预定。 2023 年又来吃了一次，价格上涨了，最爱的猪肉没有了， 那个 pig belly 不好吃。 只建议点烤 Octopus Tentacle 和 California salad</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225518.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225459.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225510.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225420.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225408.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304162330142.jpeg"></li></ul><h2 id="Cha-Cha-Cha-Mexican-Restaurant"><a href="#Cha-Cha-Cha-Mexican-Restaurant" class="headerlink" title="Cha Cha Cha Mexican Restaurant"></a>Cha Cha Cha Mexican Restaurant</h2><ul><li>地址：32 LORONG MAMBONG, HOLLAND VILLAGE  SINGAPORE 277690  官网：<a href="https://www.chachacha.com.sg/">https://www.chachacha.com.sg/</a></li><li>点评：很不错的一家墨西哥餐厅，人均 30 新币+，环境也不错。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200811165726.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200811165647.jpg"></li></ul><h2 id="The-French-Ladle"><a href="#The-French-Ladle" class="headerlink" title="The French Ladle"></a>The French Ladle</h2><ul><li>地址：2 Pandan Valley, Singapore 597626  官网：<a href="https://thefrenchladle.com/">https://thefrenchladle.com/</a></li><li>点评：第一次吃法国菜，环境很家常，蘑菇汤不错，escargot 蜗牛也不错, 牛脸颊，牛排，鸡腿，油封鸭腿还行吧</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115020.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115025.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115030.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115035.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115039.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115043.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115053.jpg"></li></ul><h2 id="The-English-House-by-Marco-Pierre-White"><a href="#The-English-House-by-Marco-Pierre-White" class="headerlink" title="The English House by Marco Pierre White"></a>The English House by Marco Pierre White</h2><ul><li>地址: 28 Mohamed Sultan Rd, Singapore 238972</li><li>点评: 这家惠灵顿牛排店装修是非常的好, 如果是点 2 人份的 惠灵顿牛排 125 SGD 不需要提前交押金的，没有必要。点四人份以上的话，就需要 pre-order 了。他家的那个生牛肉沙拉强烈推荐，第一次吃生牛肉，但完全没有腥味，反而牛肉很柔软。如果是过生日的话，预定的时候告诉店家，他们还会送一个小蛋糕。惠灵顿牛排怎么说呢，没有给我很惊艳的感觉，只能说是尝个新鲜</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233630.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233634.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233640.jpg"></li></ul><h2 id="Saizeriya"><a href="#Saizeriya" class="headerlink" title="Saizeriya"></a>Saizeriya</h2><ul><li>地址：1 Vista Exchange Green, #01-44&#x2F;45 The Star Vista, Singapore 138617 是一家连锁快餐店 <a href="https://www.saizeriya.com.sg/">https://www.saizeriya.com.sg/</a></li><li>点评：食阁的价格，带空调的环境。日常消费的好去处，比较喜欢它家的意面</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210511193218.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210511193214.jpg"> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210511193209.jpg"></li></ul><h2 id="morganfields"><a href="#morganfields" class="headerlink" title="morganfields"></a>morganfields</h2><ul><li>地址：1 Vista Exchange Green, #02-23, Singapore 138617 <a href="https://morganfields.com.sg/">官网</a></li><li>点评：今天吃的是猪排套餐， half &amp;half 59 新币，还喝了一杯 mojito，最后算上 GTS + Service Charge , 一共是 88 新币</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210627134631.jpeg"></li></ul><h2 id="L’Entrecote-Holland-Village"><a href="#L’Entrecote-Holland-Village" class="headerlink" title="L’Entrecôte Holland Village"></a>L’Entrecôte Holland Village</h2><ul><li>地址：46 Lor Mambong, Singapore 277698, 荷兰村酒吧一条街上面</li><li>点评：今天吃的是 T bone steak 还不错，女朋友点了一个 dinner set， 蜗牛也不错的。人均 60+， 小贵</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211205211630.jpg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211205211635.jpg"></li></ul><h2 id="Caruso"><a href="#Caruso" class="headerlink" title="Caruso"></a>Caruso</h2><ul><li>地址：791 Bukit Timah Rd, #01-01, Singapore 269764</li><li>点评：一家味道还可以的意大利餐厅，starter salad 不错，意面也可以，牛排 7 分有点老，该要 5 分熟。两人 134 新币</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/AFC01360-DBD5-4FF5-952B-86AFDAF2B151_1_105_c.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/E8019315-7606-4349-8F0E-EB8E382B2A7C_1_105_c.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/648205C6-502E-4EEB-9D28-7CDD33C48D4D_1_105_c.jpeg"></li></ul><h2 id="Black-Marble"><a href="#Black-Marble" class="headerlink" title="Black Marble"></a>Black Marble</h2><ul><li>地址：118 Holland Ave, #02-01 Raffles Holland V Mall</li><li>点评：在荷兰村的一家西餐，环境还不错，价格小贵，人均 60+， 牛排可以，意面不行。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207021933128.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202207021933698.jpeg"></li></ul><h2 id="Margarita’s-Dempsey-Hill"><a href="#Margarita’s-Dempsey-Hill" class="headerlink" title="Margarita’s Dempsey Hill"></a>Margarita’s Dempsey Hill</h2><ul><li>地址：1 Dempsey Rd, Singapore 249673</li><li>点评：一家墨西哥餐厅，店里的装修很不错。推荐菜品 nachos, margarita’s original kitchen sink burrito，carnitas de puerco “pork carnitas”， churros 觉得很一般。mexican fried ice cream 冰火两重天，可以试一试。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304162335313.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304162335880.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202304162335412.jpeg"></li></ul><h2 id="iO-Italian-Osteria"><a href="#iO-Italian-Osteria" class="headerlink" title="iO Italian Osteria"></a>iO Italian Osteria</h2><ul><li>地址：4 Hillview Rise, #02 - 01, Singapore 667979</li><li>点评：一家意大利餐厅，餐厅的食物不错，装修风格也可以，缺点就是桌子之间太密集，有点吵闹。两人吃了 123 新币，披萨没有吃完，打包回家。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306031420155.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306031420881.jpeg"></li></ul><h2 id="Two-Men-Bagel-House-Holland-Village"><a href="#Two-Men-Bagel-House-Holland-Village" class="headerlink" title="Two Men Bagel House Holland Village"></a>Two Men Bagel House Holland Village</h2><ul><li>地址：17D Lor Liput, Singapore 277731</li><li>点评：一家卖 Bagel 硬面包圈的店，门口没有 receptionist, 自己随便找位置做下。扫码可以看菜单 <a href="https://www.twomenbagels.com/hv-menu">https://www.twomenbagels.com/hv-menu</a>, 喜欢吃牛肉的，可以点 cheddar 面包的 Smashe- D Double TT</li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112340989.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112340044.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112340305.png"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306112340700.jpeg"></li></ul><h2 id="Madrinaa-Italiano"><a href="#Madrinaa-Italiano" class="headerlink" title="Madrinaa Italiano"></a>Madrinaa Italiano</h2><ul><li>地址：Blk 44 Jln Merah Saga, #01-60 Chip Bee Gardens, Singapore 278116</li><li>点评：荷兰村地铁站背后的意大利餐厅，那个 steak florentine 真的不错，全场最佳。牛肉酱意面，蒜香橄榄油意面都不错。</li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307152325770.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307152326353.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202307152326403.jpeg"></li></ul><h2 id="Pano-Kato-Grill-Pizza-amp-Deli"><a href="#Pano-Kato-Grill-Pizza-amp-Deli" class="headerlink" title="Pano Kato Grill, Pizza &amp; Deli"></a>Pano Kato Grill, Pizza &amp; Deli</h2><ul><li>地址：163 Tanglin Rd, #02-142&#x2F;144 Tanglin Mall, Singapore 247933</li><li>点评：在大使馆附近的 Tanglin Mall 里面， 一家希腊餐厅。 推荐烤章鱼，肉拼盘， 希腊披萨很一般不建议</li><li>上图: <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202309082311310.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202309082311256.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202309082310581.jpeg"></li></ul><h1 id="自助餐"><a href="#自助餐" class="headerlink" title="自助餐"></a>自助餐</h1><h2 id="Edge-Buffet-pan-pacific-hotel"><a href="#Edge-Buffet-pan-pacific-hotel" class="headerlink" title="Edge Buffet pan pacific hotel"></a>Edge Buffet pan pacific hotel</h2><ul><li>地址：7 Raffles Blvd, Level 3 Pan Pacific, Singapore 039595 在酒店的三楼</li><li>点评：人均 90+ 新币的自助餐， 环境还行。 龙虾，大虾都不错，生蚝很拉胯。 北京烤鸭一般，辣椒螃蟹强烈推荐，沙爹也不错，牛排和猪肋排也可以的。最好提前打电话预订，然后用 UOB 的卡买单有 15% 的折扣。节假日没有折扣</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301936063.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301936131.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301936327.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301937044.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301937345.jpeg"> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301937165.jpeg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202306301937723.jpeg"></li></ul><h1 id="酒吧"><a href="#酒吧" class="headerlink" title="酒吧"></a>酒吧</h1><h2 id="SQUE"><a href="#SQUE" class="headerlink" title="SQUE"></a>SQUE</h2><ul><li><a href="http://www.sque.com.sg/">http://www.sque.com.sg/</a></li><li>点评：同事带我去吃的，说这里很受 local 欢迎，河对面的是游客常去的。啤酒和食物也不错，人均 50 新币，🍺喝饱了</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170329.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170339.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170309.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223333.jpg"></li></ul><h2 id="Artichoke"><a href="#Artichoke" class="headerlink" title="Artichoke"></a>Artichoke</h2><ul><li>地址：161 Middle Rd, Singapore 188978 <a href="https://www.bjornshen.com/artichoke">https://www.bjornshen.com/artichoke</a></li><li>点评：中东菜系，啤酒是英国苏格兰进口。如果喝酒，那么人均 100 新币+， 有两个菜不错，一个是虾，另外一个是最后的甜点。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223305.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223249.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223245.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223321.jpg"></li></ul><h2 id="Tango-Restaurant-amp-Wine-Bar"><a href="#Tango-Restaurant-amp-Wine-Bar" class="headerlink" title="Tango Restaurant &amp; Wine Bar"></a>Tango Restaurant &amp; Wine Bar</h2><ul><li>地址：35 Lor Mambong, Singapore 277692</li><li>点评：在荷兰村酒吧一条街的尽头， 和 hashicorp 的朋友在这里聚餐。北京烤鸭披萨还不错</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210902230716.jpeg"></li></ul><h1 id="甜品"><a href="#甜品" class="headerlink" title="甜品"></a>甜品</h1><h2 id="Gram-Cafe-amp-Pancakes-Singapore"><a href="#Gram-Cafe-amp-Pancakes-Singapore" class="headerlink" title="Gram Café &amp; Pancakes Singapore"></a>Gram Café &amp; Pancakes Singapore</h2><ul><li><a href="https://www.google.com/maps/place/Gram+Caf%C3%A9+%26+Pancakes+Singapore/@1.2980014,103.7598895,13z/data=!4m8!1m2!2m1!1sgram!3m4!1s0x0:0x986c1a8d200bf1bb!8m2!3d1.2635613!4d103.8227105">地址</a>： 1 Harbourfront Walk, #02-110 VivoCity, Singapore 098585</li><li>点评： 我本人不喜欢吃甜品，妹子喜欢吃，还不错。三个甜品 58 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101631.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101636.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101640.jpg">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101643.jpg"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美食 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang json unmarshal 踩坑</title>
      <link href="/post/unmarshal/"/>
      <url>/post/unmarshal/</url>
      
        <content type="html"><![CDATA[<p>最近在工作上遇到一个关于 json unmarshal 的问题。</p><span id="more"></span><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://www.cxybb.com/article/Larouzey/100993697">浅谈Golang中Json反序列化的一些 “坑”</a></li><li><a href="https://blog.csdn.net/weixin_43095238/article/details/118443328">Go 语言 JSON 的序列化与反序列化实践</a></li></ul><h1 id="人在家中坐，锅从天上来"><a href="#人在家中坐，锅从天上来" class="headerlink" title="人在家中坐，锅从天上来"></a>人在家中坐，锅从天上来</h1><p>某天，组里的小哥对我说，某个服务的 function test failed，可能是与我的最近一次代码改动有关。我有点震惊，就那小改动，居然会影响。既然锅都来了，那就看看我的代码，看看是不是真的有问题。<br>首先，我们定位到 test failed 的地方，TestUpdateDriverTier function 失败了。接着我们去 kibana 看看 log， 发现错误是 </p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">error</span>=no tier config found <span class="keyword">for</span> cityID : <span class="number">1</span> and taxiTypes [<span class="number">233</span>]</span><br></pre></td></tr></table></figure><p>既然日志说没有 no found，我又去检查配置中心，结果配置中心是有对应的 json 配置的。</p><h1 id="坑一"><a href="#坑一" class="headerlink" title="坑一"></a>坑一</h1><p>我随后又再看了一眼 function test ，离谱的地方是 TestUpdateDriverTier 失败了，但是 TestBulkUpdateDriverTier 成功了。我检查了两个代码的区别：UpdateDriverTier 和 BulkUpdateDriverTier 的唯一不同是:<br>BulkUpdateDriverTier 是一个 for 循环单个更新，而 UpdateDriverTier 是只有一个更新。两者背后调用的 function 都是一样了，这就使我百思不得其解了： 为什么只有 TestUpdateDriverTier 失败了。</p><p>难上加难的地方在于：function test 不像 unit test 可以轻松的在本地测试，function test 需要在远程服务器上测试。为了复现这个问题， 我在自己的电脑上调用那个 API, 结果还真就只有 UpdateDriverTier 报错误， BulkUpdateDriverTier 没有报错。</p><p>踩坑一是因为我自己检查代码是时候不够仔细， UpdateDriverTier 和 BulkUpdateDriverTier 还有一个巨大的区别。</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UpdateDriverTier ...</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span></span> UpdateDriverTier(ctx context.Context, driverTier *dto.DriverTier) <span class="type">error</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := s.TierCalculator.ForceUpdateTier(ctx, driverTier.DriverID, driverTier.Progress); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Error(logkey.Error, <span class="string">&quot;error in force update driver tier&quot;</span>, logkey.DriverID, driverTier.DriverID, logkey.Error, err)</span><br><span class="line">s.statsClient.Count1(statsdkey.ServiceContextTag, updateDriverTierTag, statsdkey.FailedTag)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果发现 BulkUpdateDriverTier 是异步的，即使有错误，gorutine 也不会返回到 main gorutine，所以 API 得到的结果是没有错误的。</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BulkUpdateDriverTier ...</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span></span> BulkUpdateDriverTier(ctx context.Context, driverTiers []*dto.DriverTier) <span class="type">error</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(driverTiers []*dto.DriverTier)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, driverTier := <span class="keyword">range</span> driverTiers &#123;</span><br><span class="line"><span class="keyword">if</span> err := s.TierCalculator.ForceUpdateTier(ctx, driverTier.DriverID, driverTier.Progress); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Warn(logkey.Message, <span class="string">&quot;error in bulk force update driver&quot;</span>, logkey.DriverID, driverTier.DriverID, logkey.Error, err)</span><br><span class="line">s.statsClient.Count1(statsdkey.ServiceContextTag, bulkUpdateDriverTierTag, statsdkey.FailedTag)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;(driverTiers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="坑二"><a href="#坑二" class="headerlink" title="坑二"></a>坑二</h1><p>其实我在最开始的时候，是没有发现坑一的。我为了搞清楚为什么找不到配置，我就临时添加了代码打 log，把那个配置的变量给打印出来。结果发现了配置的 point nil</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feiyang=<span class="string">&quot;&amp;&#123;0 0 0 false &lt;nil&gt; map[] 0&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>我又换了一个输入，正常的配置应该是这个样子的</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feiyang=<span class="string">&quot;&amp;&#123;0 0 0 true 0xc0214e8e00 map[41:0xc01627b810 42:0xc01627b880 43:0xc01627b8f0 44:0xc01627b9d0] 0&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>我就开始搜索这个错误，发现一个类似的：反序列化Map或Slice的类型要求要与 序列化时Map或Slice的类型必须保持一致</p><p>差不多就是下面这个例子，golang struct 里面要求的是 Rank int，结果 json 传入的是 string，最终 Unmarshal 出错，得到默认初始值的 struct</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;encoding/json&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// TierRules ...</span></span><br><span class="line"><span class="keyword">type</span> TierRules <span class="keyword">struct</span> &#123;</span><br><span class="line">Rank         <span class="type">int64</span> <span class="string">`json:&quot;rank&quot;`</span></span><br><span class="line">TierID       <span class="type">int64</span> <span class="string">`json:&quot;tierID&quot;`</span></span><br><span class="line">UseAsDefault <span class="type">bool</span>  <span class="string">`json:&quot;useAsDefault&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">tier := TierRules&#123;</span><br><span class="line">Rank:         <span class="number">1</span>,</span><br><span class="line">TierID:       <span class="number">1</span>,</span><br><span class="line">UseAsDefault: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tierjson, err := json.Marshal(tier)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;tierjson type is: %T\n&quot;</span>, tierjson)</span><br><span class="line">fmt.Printf(<span class="string">&quot;tierjson value is: %v\n&quot;</span>, <span class="type">string</span>(tierjson))</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tier1 TierRules</span><br><span class="line">str := <span class="string">&quot;&#123;\&quot;rank\&quot;:\&quot;1\&quot;,\&quot;tierID\&quot;:\&quot;1\&quot;,\&quot;useAsDefault\&quot;:true&#125;&quot;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;str value is: %v\n&quot;</span>, str)</span><br><span class="line">err = json.Unmarshal([]<span class="type">byte</span>(str), &amp;tier1)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;反序列化错误：&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;tier1 type is: %T\n&quot;</span>, tier1)</span><br><span class="line">fmt.Printf(<span class="string">&quot;tier1 value is: %v\n&quot;</span>, tier1)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tierjson type is: []uint8</span><br><span class="line">tierjson value is: &#123;&quot;rank&quot;:1,&quot;tierID&quot;:1,&quot;useAsDefault&quot;:true&#125;</span><br><span class="line"></span><br><span class="line">str value is: &#123;&quot;rank&quot;:&quot;1&quot;,&quot;tierID&quot;:&quot;1&quot;,&quot;useAsDefault&quot;:true&#125;</span><br><span class="line">反序列化错误： json: cannot unmarshal string into Go struct field TierRules.rank of type int64</span><br><span class="line"></span><br><span class="line">tier1 type is: main.TierRules</span><br><span class="line">tier1 value is: &#123;0 0 true&#125;</span><br></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>我太菜了，搞了 2 天终于发现是因为配置 json 文件里面数据类型不一致导致的问题后，再次去配置中心检查，在密密麻麻的配置中，终于发现了那个错误（rank 是 string 类型）。下一步是：我们如何在配置的时候就就行校验，提前预防这样的错误呢？</p>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 里面的超时取消</title>
      <link href="/post/context/"/>
      <url>/post/context/</url>
      
        <content type="html"><![CDATA[<p>之前读书 《Go 语言并发之道》 里面有讲到 context 的超时取消，最近在工作上也遇到了一个问题和超时取消有关系的。</p><span id="more"></span><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><ul><li><a href="https://talkgo.org/t/topic/1503">《Go 语言并发之道》读后感-第四章</a></li><li><a href="https://mp.weixin.qq.com/s/_5gBIwvtXKJME7AV2W2bqQ">小白也能看懂的context包详解：从入门到精通</a></li></ul><h1 id="深有同感"><a href="#深有同感" class="headerlink" title="深有同感"></a>深有同感</h1><p>公众号那篇文章的有一句话，菜鸡深有同感：我记得我第一次接触context时，同事都说这个用来做并发控制的，可以设置超时时间，超时就会取消往下执行，快速返回，我就单纯的认为只要函数中带着context参数往下传递就可以做到超时取消，快速返回。<br>我曾经也是这样认为的，哈哈哈。</p><h1 id="kafka-write-超时"><a href="#kafka-write-超时" class="headerlink" title="kafka write 超时"></a>kafka write 超时</h1><p>今年从 devops 转 backend 后端开发，遇到一个 kafka write 超时的问题。 </p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">err = w.writer.Save(castedEvent)</span><br></pre></td></tr></table></figure><p>这里调用 kafka team 的 client 写入， 但是 client 的 timeout 是 30 s , 重试 3 次，再加上 broker 比较多，等待的时间就会更久。<br>Net.[Dial|Read]Timeout &#x3D; 30s<br>Metadata.Retry.Max&#x3D;3<br>Metadata.Retry.Backoff&#x3D;250ms<br>for example: a producer with 1 broker Addr and 6 partitions (intotal 6+1 brokers considered in the library)  the processing time is abt 7-8 min for the first msg to return error msg<br>Note:</p><ul><li>when there are more brokers and partitions, the processing time of the message will be multiplied</li><li>if the timeout of the rest api is shorter than the producer processing time, there might not be any success&#x2F;error msg returned and displayed on datadog</li></ul><p>交代完问题的背景，我就开始思考如何才能提前取消，而不是等待 七八分钟。</p><h1 id="single-gorutine"><a href="#single-gorutine" class="headerlink" title="single gorutine"></a>single gorutine</h1><p>因为工作上那段代码逻辑只有一个 gorutine， 我就尽量想用一个简化版的例子实现超时取消。<br>《Go 语言并发之道》 关于 context 超时取消给我印象最深刻的一句话： goroutine 中任何阻塞操作都必须是可抢占的 ，以便它可以被取消。<br>我就在思考，kafka 在写入的时候，在哪一步可以被抢占呢？ 我猜测应该是尝试写之后，如果失败了，就 backoff 在重试，这一段贤者时间，可以被抢占。</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;math/rand&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">kafkaWrite</span><span class="params">()</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">i := rand.Intn(<span class="number">2</span>)</span><br><span class="line">log.Println(i)</span><br><span class="line"><span class="keyword">if</span> i == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">tryWrite</span><span class="params">(ctx context.Context)</span></span> <span class="type">error</span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">result := kafkaWrite()</span><br><span class="line"><span class="keyword">if</span> result &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">log.Println(<span class="string">&quot;timeout exit&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> ctx.Err()</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx := context.Background()</span><br><span class="line">ctx, cancel := context.WithTimeout(ctx, <span class="number">3</span>*time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line">err := tryWrite(ctx)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;Success to process in time&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们 granular 很细了，也用到了 context。 但是实际上我们在调用 kafka SDK 的时候，并不能把  context 传进去。</p><h1 id="multiple-gorutine"><a href="#multiple-gorutine" class="headerlink" title="multiple gorutine"></a>multiple gorutine</h1><p>在咨询大佬 jiahao 后，他给出了另外一种方法，多用一个 channel，监听 write 是否完成。而且也不需要传 context 到 kafka write 代码里面。</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;errors&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;math/rand&quot;</span></span><br><span class="line"><span class="string">&quot;runtime&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">kafkaWrite</span><span class="params">()</span></span> <span class="type">error</span> &#123;</span><br><span class="line">i := rand.Intn(<span class="number">2</span>)</span><br><span class="line">log.Println(i)</span><br><span class="line"><span class="keyword">if</span> i == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">log.Println(<span class="string">&quot;sleeping&quot;</span>, i)</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">&quot;write error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">tryWrite</span><span class="params">(ctx context.Context)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">jobDone := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">err := kafkaWrite()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;failed to write&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//jobDone &lt;- struct&#123;&#125;&#123;&#125;</span></span><br><span class="line"><span class="built_in">close</span>(jobDone)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">log.Println(<span class="string">&quot;timeout exit&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> ctx.Err()</span><br><span class="line"><span class="keyword">case</span> &lt;-jobDone:</span><br><span class="line">log.Println(<span class="string">&quot;job Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">15</span>; i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;gorutine number is: %v\n&quot;</span>, runtime.NumGoroutine())</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">ctx := context.Background()</span><br><span class="line">ctx, cancel := context.WithTimeout(ctx, <span class="number">3</span>*time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line">err := tryWrite(ctx)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;Success to process in time&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">10</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个确实能提前取消，但那个 gorutine 会一直运行，直到 timeout 才消亡。 我们在这里专门用一个 gorutine 去监控当前 gorutine 数量 runtime.NumGoroutine</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">gorutine number is: 2</span><br><span class="line">2022/05/17 20:41:15 1</span><br><span class="line">2022/05/17 20:41:15 sleeping 0</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:16 sleeping 1</span><br><span class="line">2022/05/17 20:41:17 sleeping 2</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:18 <span class="built_in">timeout</span> <span class="built_in">exit</span></span><br><span class="line">2022/05/17 20:41:18 context deadline exceeded</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:18 sleeping 3</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:19 sleeping 4</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:20 sleeping 5</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:21 sleeping 6</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:22 sleeping 7</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:23 sleeping 8</span><br><span class="line">2022/05/17 20:41:24 sleeping 9</span><br><span class="line">gorutine number is: 3</span><br><span class="line">2022/05/17 20:41:25 failed to write</span><br><span class="line">gorutine number is: 2</span><br><span class="line">gorutine number is: 2</span><br><span class="line">gorutine number is: 2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vault k8s integration</title>
      <link href="/post/vault-k8s/"/>
      <url>/post/vault-k8s/</url>
      
        <content type="html"><![CDATA[<p>本文记录了 vault 与 kubernetes 集成实验</p><span id="more"></span><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><ul><li><a href="https://learn.hashicorp.com/tutorials/vault/kubernetes-external-vault">https://learn.hashicorp.com/tutorials/vault/kubernetes-external-vault</a></li><li><a href="https://support.hashicorp.com/hc/en-us/articles/4404389946387-Kubernetes-auth-method-Permission-Denied-error">https://support.hashicorp.com/hc/en-us/articles/4404389946387-Kubernetes-auth-method-Permission-Denied-error</a></li><li><a href="https://www.vaultproject.io/api-docs/auth/kubernetes">https://www.vaultproject.io/api-docs/auth/kubernetes</a></li></ul><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><ul><li>vault cluster version: v1.7.2</li><li>kubernetes cluster version: v1.21.1</li></ul><h1 id="kubernetes-config"><a href="#kubernetes-config" class="headerlink" title="kubernetes config"></a>kubernetes config</h1><p>Below is an example configuration of a working k8s auth.  In this below example:</p><ul><li>vault-auth is the service account with which k8s auth is configured.</li><li>test-cloud is the service account used to login to vault using the k8s auth method</li><li>test is the namespace of the service account test-cloud</li><li>role-tokenreview-binding is the name of the cluster role binding the service accounts (vault-auth and test-cloud) need to be associated with</li></ul><p>这里是准备了 2 个 service account， 一个 vault-auth 是专门用来给 vault 回调 call k8s 验证来自 k8s 的request 的真实性。另外一个 test-cloud 是我们服务运行时， 用这个 test-cloud 的 secrets 向 vault 发起请求。 role-tokenreview-binding 是一个权限增加配置， 运行两个 service account 去 call rbac.authorization.k8s.io 验证身份。<br>这里我的理解是，有点像 AWS 的 role， 互相可以 assume ，验证 role 的身份。如果想更简单，就一个 service account 也是可以的。<br>这里让我联想到了 AWS STS, 每次当 AWS call vault ，vault 都需要验证来访的真实性。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2012-10-17&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Sid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Stmt1639532537842&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;sts:GetCallerIdentity&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>以下命令，都在 kubernetes 那台机器上执行。 我已经把返回值加#注释</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace test</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">namespace/test created</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF | kubectl create -f -</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: test-cloud</span><br><span class="line">  namespace: test</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line"> name: test-cloud</span><br><span class="line"> namespace: test</span><br><span class="line"> annotations:</span><br><span class="line">   kubernetes.io/service-account.name: test-cloud</span><br><span class="line">type: kubernetes.io/service-account-token</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">serviceaccount/test-cloud created</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">secret/test-cloud created</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF | kubectl create -f -</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: vault-auth</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: vault-auth</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/service-account.name: vault-auth</span><br><span class="line">type: kubernetes.io/service-account-token</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: role-tokenreview-binding</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:auth-delegator</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: vault-auth</span><br><span class="line">    namespace: default</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: test-cloud</span><br><span class="line">    namespace: test</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">serviceaccount/vault-auth created</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">secret/vault-auth created</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">clusterrolebinding.rbac.authorization.k8s.io/role-tokenreview-binding created</span></span><br></pre></td></tr></table></figure><p>接下来是得到一些 config 用来给 vault 设置 kubernetes auth integration</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">TOKEN_REVIEW_JWT=$(kubectl get secret vault-auth -o go-template=&#x27;&#123;&#123; .data.token &#125;&#125;&#x27; | base64 --decode) </span><br><span class="line">echo  $TOKEN_REVIEW_JWT</span><br><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IlZNU3F3QURqYThpVndNdXQ0Nmlsc19LanFDM1Z4NzRwVXNxSTY0X3M5VW8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InZhdWx0LWF1dGgiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoidmF1bHQtYXV0aCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjAxNWUzNjU4LWM4MjEtNDQzNi1iMTcwLWNmZTUwMGRmZDMwZCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OnZhdWx0LWF1dGgifQ.R86ZHaSIYK4evpUhT9ayQp5XgJS-Lj_GIsIRT2n1M3Q8cFiO8A3HKx44VI0XToPHKpkyrRvzAX3n-GodR2L7AEcsesr1vQ-qlb2qreb07uh9ZxMo8t8r9bJ91eRaoV-xygW6bu3_dJupKDFL7peuCJSB16VYkPoSONQA_v1gZdXK7hmPe-JSrKtyz31FpsoI5mEhqxCwMTON_7Ew41S2wN089lMR--Rvn1ZtEaLRy1fpzEvJmwiUrN28byGrszZXMnmHTA26UUAHs59fKo-My_jM7EpV029aJGZEytX8czlndwiijPCRnhiuSb7oCJNI8yFLXyTr7LVbe6q7ip6Qqw</span><br><span class="line">echo  $TOKEN_REVIEW_JWT &gt;&gt; TOKEN_REVIEW_JWT</span><br><span class="line"></span><br><span class="line">KUBE_CA_CERT=$(kubectl config view --raw --minify --flatten --output=&#x27;jsonpath=&#123;.clusters[].cluster.certificate-authority-data&#125;&#x27; | base64 --decode)</span><br><span class="line">echo $KUBE_CA_CERT</span><br><span class="line">-----BEGIN CERTIFICATE----- MIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl cm5ldGVzMB4XDTIxMDUxMzAxMzAxOFoXDTMxMDUxMTAxMzAxOFowFTETMBEGA1UE AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKjq 3U72Z95kACf7ZbWYN2ktCxQVzcgJiVsD9UP2vm9c0hsI+eQWxodEf3+T6XVMCJce YgrYpLFyM1Mv7W/ZJ5F6UAGaPG4jOrF4CUgnYRV3j39wRjuvguOaf3lSMVFkAkOF GAN2eEO+OVaIeH7IxIbQ+vzC72V3WNTD0RC3OQoJIIQ2nLebcxkbksSTpDgARg+O j34IbHyUAUw3+msaCsKtqF+Tg6cLWGOu+iNekfL27rGJotXD3NCInE2aFX9Ipbmd BjnsvauwcCuBDKkSxxr46kcd7NZ2SFcvokkkuGl/c8AVdlL0TeDOrl8AOz/eUiQj 6ihQ7s07SUdNU3MefIkCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB /wQFMAMBAf8wHQYDVR0OBBYEFFIG5EyHEyWO9GE2Gm1D7nRY7iXFMA0GCSqGSIb3 DQEBCwUAA4IBAQCFcFHMgDAQ3GMfrLX0EudpyeDqJ/+Mj6C5xHet/bxQopMyCbmC ZVVXx2jpRaMSo81U/eDE0hfUSD3JGVUeM6aajivsGrGjqjuF0t/5hUxPJT74lIbc 5OQNXyYYuPeRyRw7Cnx8YpdJh4NJvWI+LBWSOSaDyFjf5yMpWQvT3bfWV4PGvi/0 YHxglWM3Jfpn7JBF6OJPs4P+6E0FPmS88d5ry6znmrAg9/PCOefZ1r93EAIwP1P4 EhWsyF9xemSyTIeDA740X7ZFcCEugkS6mOoswWtXPsL0JURlkx0kRR5HAYcQ01N1 Cv0epL7mgWJpxcwnil9pWXVDRgWTXvFP5aaD -----END CERTIFICATE-----</span><br><span class="line">echo $KUBE_CA_CERT &gt;&gt; KUBE_CA_CERT</span><br><span class="line"></span><br><span class="line">KUBE_HOST=$(kubectl config view --raw --minify --flatten --output=&#x27;jsonpath=&#123;.clusters[].cluster.server&#125;&#x27;)</span><br><span class="line">echo $KUBE_HOST</span><br><span class="line">https://192.168.1.119:6443</span><br><span class="line">echo $KUBE_HOST &gt;&gt; KUBE_HOST</span><br><span class="line"></span><br><span class="line">kubectl get secret  test-cloud -n test -o go-template=&#x27;&#123;&#123; .data.token &#125;&#125;&#x27; | base64 --decode &gt;&gt; test-cloud</span><br><span class="line">cat test-cloud</span><br><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IlZNU3F3QURqYThpVndNdXQ0Nmlsc19LanFDM1Z4NzRwVXNxSTY0X3M5VW8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0ZXN0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InRlc3QtY2xvdWQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoidGVzdC1jbG91ZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjlkNDE0NjNkLWEyNTctNGRjNy1iZGQwLTVlYmRhODliOGE5NiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDp0ZXN0OnRlc3QtY2xvdWQifQ.MaPfB0w-rj9ymn1nr7Y1IJPfTM1-HpCjRhRF-qqJ8qFbREVeYgMwqg6FCYTL_bH9thLW4oNSFTw80IN8H9-0D-TVlA6UsRQGbp4v6tvb4YZ_rPJ7DRC5iaHproGPPJ0Nr-1cPLbfJVfWZwqvrrkz_pNmF23qM9WliGNGHgxV0n58KOD06lb03wk-IVBAyTKBwRTKgA3yub7SzoR0HeCS_4fvB4T73vGeNUBoaS2kIC1MF7Hlunmr0rzkGv7zs6HseFSXnGg8wZ1jUqOrP0AKuOXpE8eUXoqxd3-t0Y9zAj4pjZMCsJJZQlEVrKxAhuyeTvh_SYy5SCxjIKhpjT8j8A</span><br></pre></td></tr></table></figure><h1 id="vault-config"><a href="#vault-config" class="headerlink" title="vault config"></a>vault config</h1><p>这里我们需要把上面从 kubernetes 得到的 TOKEN_REVIEW_JWT KUBE_CA_CERT  KUBE_HOST test-cloud 拷贝到 vault 这台机器上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">vault auth enable kubernetes</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Success! Enabled kubernetes auth method at: kubernetes/</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这一步很容易出错，因为 cert 的格式不对， 后面我会讲</span></span><br><span class="line">vault write auth/kubernetes/config   token_reviewer_jwt=&quot;$TOKEN_REVIEW_JWT&quot;   kubernetes_host=&quot;$KUBE_HOST&quot;   kubernetes_ca_cert=&quot;$KUBE_CA_CERT&quot; disable_local_ca_jwt=&quot;true”</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Success! Data written to: auth/kubernetes/config</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里 kubernetes_ca_cert 格式不对</span></span><br><span class="line">vault read auth/kubernetes/config</span><br><span class="line">Key                       Value</span><br><span class="line">---                       -----</span><br><span class="line">disable_iss_validation    true</span><br><span class="line">disable_local_ca_jwt      true</span><br><span class="line">issuer                    n/a</span><br><span class="line">kubernetes_ca_cert        -----BEGIN CERTIFICATE----- MIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl cm5ldGVzMB4XDTIxMDUxMzAxMzAxOFoXDTMxMDUxMTAxMzAxOFowFTETMBEGA1UE AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKjq 3U72Z95kACf7ZbWYN2ktCxQVzcgJiVsD9UP2vm9c0hsI+eQWxodEf3+T6XVMCJce YgrYpLFyM1Mv7W/ZJ5F6UAGaPG4jOrF4CUgnYRV3j39wRjuvguOaf3lSMVFkAkOF GAN2eEO+OVaIeH7IxIbQ+vzC72V3WNTD0RC3OQoJIIQ2nLebcxkbksSTpDgARg+O j34IbHyUAUw3+msaCsKtqF+Tg6cLWGOu+iNekfL27rGJotXD3NCInE2aFX9Ipbmd BjnsvauwcCuBDKkSxxr46kcd7NZ2SFcvokkkuGl/c8AVdlL0TeDOrl8AOz/eUiQj 6ihQ7s07SUdNU3MefIkCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB /wQFMAMBAf8wHQYDVR0OBBYEFFIG5EyHEyWO9GE2Gm1D7nRY7iXFMA0GCSqGSIb3 DQEBCwUAA4IBAQCFcFHMgDAQ3GMfrLX0EudpyeDqJ/+Mj6C5xHet/bxQopMyCbmC ZVVXx2jpRaMSo81U/eDE0hfUSD3JGVUeM6aajivsGrGjqjuF0t/5hUxPJT74lIbc 5OQNXyYYuPeRyRw7Cnx8YpdJh4NJvWI+LBWSOSaDyFjf5yMpWQvT3bfWV4PGvi/0 YHxglWM3Jfpn7JBF6OJPs4P+6E0FPmS88d5ry6znmrAg9/PCOefZ1r93EAIwP1P4 EhWsyF9xemSyTIeDA740X7ZFcCEugkS6mOoswWtXPsL0JURlkx0kRR5HAYcQ01N1 Cv0epL7mgWJpxcwnil9pWXVDRgWTXvFP5aaD -----END CERTIFICATE-----</span><br><span class="line">kubernetes_host           https://192.168.1.119:6443</span><br><span class="line">pem_keys                  []</span><br><span class="line"></span><br><span class="line">vault policy write devwebapp - &lt;&lt;EOF</span><br><span class="line">path &quot;secret/data/devwebapp/config&quot; &#123;</span><br><span class="line">  capabilities = [&quot;read”]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Success! Uploaded policy: devwebapp</span></span><br><span class="line"></span><br><span class="line">vault write auth/kubernetes/role/devweb-app \</span><br><span class="line">  bound_service_account_names=test-cloud \</span><br><span class="line">  bound_service_account_namespaces=test \</span><br><span class="line">  policies=devwebapp \</span><br><span class="line">  ttl=24h</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Success! Data written to: auth/kubernetes/role/devweb-app</span></span><br></pre></td></tr></table></figure><p>最后就是测试 login 了， 在 vault 那台机器上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:~# curl     --request POST   \</span><br><span class="line">--data &#x27;&#123;&quot;jwt&quot;: &quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IlZNU3F3QURqYThpVndNdXQ0Nmlsc19LanFDM1Z4NzRwVXNxSTY0X3M5VW8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0ZXN0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InRlc3QtY2xvdWQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoidGVzdC1jbG91ZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjlkNDE0NjNkLWEyNTctNGRjNy1iZGQwLTVlYmRhODliOGE5NiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDp0ZXN0OnRlc3QtY2xvdWQifQ.MaPfB0w-rj9ymn1nr7Y1IJPfTM1-HpCjRhRF-qqJ8qFbREVeYgMwqg6FCYTL_bH9thLW4oNSFTw80IN8H9-0D-TVlA6UsRQGbp4v6tvb4YZ_rPJ7DRC5iaHproGPPJ0Nr-1cPLbfJVfWZwqvrrkz_pNmF23qM9WliGNGHgxV0n58KOD06lb03wk-IVBAyTKBwRTKgA3yub7SzoR0HeCS_4fvB4T73vGeNUBoaS2kIC1MF7Hlunmr0rzkGv7zs6HseFSXnGg8wZ1jUqOrP0AKuOXpE8eUXoqxd3-t0Y9zAj4pjZMCsJJZQlEVrKxAhuyeTvh_SYy5SCxjIKhpjT8j8A&quot;, &quot;role&quot;: &quot;devweb-app&quot;&#125;&#x27;  \</span><br><span class="line">http://192.168.64.3:8200/v1/auth/kubernetes/login |jq</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  % </span><span class="language-bash">Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  1574  100   653  100   921  19787  27909 --:--:-- --:--:-- --:--:-- 47696</span><br><span class="line">&#123;</span><br><span class="line">  &quot;request_id&quot;: &quot;2b9978ef-4010-cb5a-38b5-01fdfb4ea5d5&quot;,</span><br><span class="line">  &quot;lease_id&quot;: &quot;&quot;,</span><br><span class="line">  &quot;renewable&quot;: false,</span><br><span class="line">  &quot;lease_duration&quot;: 0,</span><br><span class="line">  &quot;data&quot;: null,</span><br><span class="line">  &quot;wrap_info&quot;: null,</span><br><span class="line">  &quot;warnings&quot;: null,</span><br><span class="line">  &quot;auth&quot;: &#123;</span><br><span class="line">    &quot;client_token&quot;: &quot;s.ElCkHSzi20xOlZj0CfoDuGyv&quot;,</span><br><span class="line">    &quot;accessor&quot;: &quot;mCzG5MoxhCUSVdSNRNfEhdBS&quot;,</span><br><span class="line">    &quot;policies&quot;: [</span><br><span class="line">      &quot;default&quot;,</span><br><span class="line">      &quot;devwebapp&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;token_policies&quot;: [</span><br><span class="line">      &quot;default&quot;,</span><br><span class="line">      &quot;devwebapp&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;metadata&quot;: &#123;</span><br><span class="line">      &quot;role&quot;: &quot;devweb-app&quot;,</span><br><span class="line">      &quot;service_account_name&quot;: &quot;test-cloud&quot;,</span><br><span class="line">      &quot;service_account_namespace&quot;: &quot;test&quot;,</span><br><span class="line">      &quot;service_account_secret_name&quot;: &quot;test-cloud&quot;,</span><br><span class="line">      &quot;service_account_uid&quot;: &quot;9d41463d-a257-4dc7-bdd0-5ebda89b8a96&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;lease_duration&quot;: 86400,</span><br><span class="line">    &quot;renewable&quot;: true,</span><br><span class="line">    &quot;entity_id&quot;: &quot;7ab08e2f-f956-d2c6-c13e-3ec06e4a2cf3&quot;,</span><br><span class="line">    &quot;token_type&quot;: &quot;service&quot;,</span><br><span class="line">    &quot;orphan&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到测试成功，结果返回了我们需要的 vault client_token ，kubernetes 用这个 token 去读取存在 vault 里面的 credentials</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:~# curl --header &quot;X-Vault-Token: s.ElCkHSzi20xOlZj0CfoDuGyv&quot; http://192.168.64.3:8200/v1/secret/devwebapp/config | jq</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  % </span><span class="language-bash">Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   205  100   205    0     0   200k      0 --:--:-- --:--:-- --:--:--  200k</span><br><span class="line">&#123;</span><br><span class="line">  &quot;request_id&quot;: &quot;c465525a-4af5-50d2-6a66-67ffb8a48629&quot;,</span><br><span class="line">  &quot;lease_id&quot;: &quot;&quot;,</span><br><span class="line">  &quot;renewable&quot;: false,</span><br><span class="line">  &quot;lease_duration&quot;: 2764800,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;password&quot;: &quot;salsa&quot;,</span><br><span class="line">    &quot;username&quot;: &quot;giraffe&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;wrap_info&quot;: null,</span><br><span class="line">  &quot;warnings&quot;: null,</span><br><span class="line">  &quot;auth&quot;: null</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><ul><li><p>cert 格式不对<br>这个时候， login 返回error 是 {“errors”:[“permission denied”]}，实际上可能是证书格式不对</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">vault read auth/kubernetes/config</span><br><span class="line"></span><br><span class="line">Key                       Value</span><br><span class="line">---                       -----</span><br><span class="line">disable_iss_validation    true</span><br><span class="line">disable_local_ca_jwt      true</span><br><span class="line">issuer                    n/a</span><br><span class="line">kubernetes_ca_cert        -----BEGIN CERTIFICATE----- MIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl cm5ldGVzMB4XDTIxMDUxMzAxMzAxOFoXDTMxMDUxMTAxMzAxOFowFTETMBEGA1UE AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKjq 3U72Z95kACf7ZbWYN2ktCxQVzcgJiVsD9UP2vm9c0hsI+eQWxodEf3+T6XVMCJce YgrYpLFyM1Mv7W/ZJ5F6UAGaPG4jOrF4CUgnYRV3j39wRjuvguOaf3lSMVFkAkOF GAN2eEO+OVaIeH7IxIbQ+vzC72V3WNTD0RC3OQoJIIQ2nLebcxkbksSTpDgARg+O j34IbHyUAUw3+msaCsKtqF+Tg6cLWGOu+iNekfL27rGJotXD3NCInE2aFX9Ipbmd BjnsvauwcCuBDKkSxxr46kcd7NZ2SFcvokkkuGl/c8AVdlL0TeDOrl8AOz/eUiQj 6ihQ7s07SUdNU3MefIkCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB /wQFMAMBAf8wHQYDVR0OBBYEFFIG5EyHEyWO9GE2Gm1D7nRY7iXFMA0GCSqGSIb3 DQEBCwUAA4IBAQCFcFHMgDAQ3GMfrLX0EudpyeDqJ/+Mj6C5xHet/bxQopMyCbmC ZVVXx2jpRaMSo81U/eDE0hfUSD3JGVUeM6aajivsGrGjqjuF0t/5hUxPJT74lIbc 5OQNXyYYuPeRyRw7Cnx8YpdJh4NJvWI+LBWSOSaDyFjf5yMpWQvT3bfWV4PGvi/0 YHxglWM3Jfpn7JBF6OJPs4P+6E0FPmS88d5ry6znmrAg9/PCOefZ1r93EAIwP1P4 EhWsyF9xemSyTIeDA740X7ZFcCEugkS6mOoswWtXPsL0JURlkx0kRR5HAYcQ01N1 Cv0epL7mgWJpxcwnil9pWXVDRgWTXvFP5aaD -----END CERTIFICATE-----</span><br><span class="line">kubernetes_host           https://192.168.1.119:6443</span><br><span class="line">pem_keys                  []</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">证书应该是多行</span></span><br><span class="line">kubectl config view --raw --minify codeatten --output=&#x27;jsonpath=&#123;.clusters[].cluster.certificate-authority-data&#125;&#x27; | base64 --dec</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl</span><br><span class="line">cm5ldGVzMB4XDTIxMDUxMzAxMzAxOFoXDTMxMDUxMTAxMzAxOFowFTETMBEGA1UE</span><br><span class="line">AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKjq</span><br><span class="line">3U72Z95kACf7ZbWYN2ktCxQVzcgJiVsD9UP2vm9c0hsI+eQWxodEf3+T6XVMCJce</span><br><span class="line">YgrYpLFyM1Mv7W/ZJ5F6UAGaPG4jOrF4CUgnYRV3j39wRjuvguOaf3lSMVFkAkOF</span><br><span class="line">GAN2eEO+OVaIeH7IxIbQ+vzC72V3WNTD0RC3OQoJIIQ2nLebcxkbksSTpDgARg+O</span><br><span class="line">j34IbHyUAUw3+msaCsKtqF+Tg6cLWGOu+iNekfL27rGJotXD3NCInE2aFX9Ipbmd</span><br><span class="line">BjnsvauwcCuBDKkSxxr46kcd7NZ2SFcvokkkuGl/c8AVdlL0TeDOrl8AOz/eUiQj</span><br><span class="line">6ihQ7s07SUdNU3MefIkCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB</span><br><span class="line">/wQFMAMBAf8wHQYDVR0OBBYEFFIG5EyHEyWO9GE2Gm1D7nRY7iXFMA0GCSqGSIb3</span><br><span class="line">DQEBCwUAA4IBAQCFcFHMgDAQ3GMfrLX0EudpyeDqJ/+Mj6C5xHet/bxQopMyCbmC</span><br><span class="line">ZVVXx2jpRaMSo81U/eDE0hfUSD3JGVUeM6aajivsGrGjqjuF0t/5hUxPJT74lIbc</span><br><span class="line">5OQNXyYYuPeRyRw7Cnx8YpdJh4NJvWI+LBWSOSaDyFjf5yMpWQvT3bfWV4PGvi/0</span><br><span class="line">YHxglWM3Jfpn7JBF6OJPs4P+6E0FPmS88d5ry6znmrAg9/PCOefZ1r93EAIwP1P4</span><br><span class="line">EhWsyF9xemSyTIeDA740X7ZFcCEugkS6mOoswWtXPsL0JURlkx0kRR5HAYcQ01N1</span><br><span class="line">Cv0epL7mgWJpxcwnil9pWXVDRgWTXvFP5aaD</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新配置后</span></span><br><span class="line">vault read auth/kubernetes/config</span><br><span class="line"></span><br><span class="line">Key                       Value</span><br><span class="line">---                       -----</span><br><span class="line">disable_iss_validation    true</span><br><span class="line">disable_local_ca_jwt      true</span><br><span class="line">issuer                    n/a</span><br><span class="line">kubernetes_ca_cert        -----BEGIN CERTIFICATE-----</span><br><span class="line">MIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl</span><br><span class="line">cm5ldGVzMB4XDTIxMDUxMzAxMzAxOFoXDTMxMDUxMTAxMzAxOFowFTETMBEGA1UE</span><br><span class="line">AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKjq</span><br><span class="line">3U72Z95kACf7ZbWYN2ktCxQVzcgJiVsD9UP2vm9c0hsI+eQWxodEf3+T6XVMCJce</span><br><span class="line">YgrYpLFyM1Mv7W/ZJ5F6UAGaPG4jOrF4CUgnYRV3j39wRjuvguOaf3lSMVFkAkOF</span><br><span class="line">GAN2eEO+OVaIeH7IxIbQ+vzC72V3WNTD0RC3OQoJIIQ2nLebcxkbksSTpDgARg+O</span><br><span class="line">j34IbHyUAUw3+msaCsKtqF+Tg6cLWGOu+iNekfL27rGJotXD3NCInE2aFX9Ipbmd</span><br><span class="line">BjnsvauwcCuBDKkSxxr46kcd7NZ2SFcvokkkuGl/c8AVdlL0TeDOrl8AOz/eUiQj</span><br><span class="line">6ihQ7s07SUdNU3MefIkCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB</span><br><span class="line">/wQFMAMBAf8wHQYDVR0OBBYEFFIG5EyHEyWO9GE2Gm1D7nRY7iXFMA0GCSqGSIb3</span><br><span class="line">DQEBCwUAA4IBAQCFcFHMgDAQ3GMfrLX0EudpyeDqJ/+Mj6C5xHet/bxQopMyCbmC</span><br><span class="line">ZVVXx2jpRaMSo81U/eDE0hfUSD3JGVUeM6aajivsGrGjqjuF0t/5hUxPJT74lIbc</span><br><span class="line">5OQNXyYYuPeRyRw7Cnx8YpdJh4NJvWI+LBWSOSaDyFjf5yMpWQvT3bfWV4PGvi/0</span><br><span class="line">YHxglWM3Jfpn7JBF6OJPs4P+6E0FPmS88d5ry6znmrAg9/PCOefZ1r93EAIwP1P4</span><br><span class="line">EhWsyF9xemSyTIeDA740X7ZFcCEugkS6mOoswWtXPsL0JURlkx0kRR5HAYcQ01N1</span><br><span class="line">Cv0epL7mgWJpxcwnil9pWXVDRgWTXvFP5aaD</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">kubernetes_host           https://192.168.1.119:6443</span><br><span class="line">pem_keys                  []</span><br></pre></td></tr></table></figure></li><li><p>kubernetes 里面的 service account 缺少权限， 导致 {“errors”:[“permission denied”]}</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">role-tokenreview-binding</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:auth-delegator</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">vault-auth</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br></pre></td></tr></table></figure></li><li><p>{“errors”:[“claim &quot;iss&quot; is invalid”]} <a href="https://discuss.hashicorp.com/t/please-help-me-debug-claim-iss-is-invalid/27815/2">参考问题</a><br>这个是因为没有配置 issuer, 如果你的 kubernetes 高于 1.21.1 你需要设置 issuer 在 vault auth with kubernetes 的时候， 如何得到 issuer 地址，请参考这个<br><a href="https://www.vaultproject.io/docs/auth/kubernetes#discovering-the-service-account-issuer">Discovering the service account issuer</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hashicorp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vault pki 实践</title>
      <link href="/post/pki/"/>
      <url>/post/pki/</url>
      
        <content type="html"><![CDATA[<p>传统方式的购买 TLS 证书，流程繁琐， 采购周期长。 vault 的优点在于 Vault PKI allows users to dynamically generate X.509 certificates quickly and on demand. Vault PKI can streamline distributing TLS certificates and allows users to create PKI certificates with a single command. Vault PKI reduces overhead around the usual manual process of generating a private key and CSR, submitting to a CA, and waiting for a verification and signing process to complete, while additionally providing an authentication and authorization mechanism to validate as well.</p><span id="more"></span><h1 id="为什么需要-TLS"><a href="#为什么需要-TLS" class="headerlink" title="为什么需要 TLS"></a>为什么需要 TLS</h1><p>为了避免被中间人劫持:</p><ul><li>安全传输公钥: 权威机构的公钥不需要传输，因为权威机构会和主流的浏览器或操作系统合作，将他们的公钥内置在浏览器或操作系统环境中。客户端收到证书之后，只需要从证书中找到权威机构的信息，并从本地环境中找到权威机构的公钥，就能正确解密A公钥。</li><li>保证客户端收到的证书是服务器下发的证书，没有被中间人篡改过。<br>更多详细信息, 可以参考<a href="https://zhuanlan.zhihu.com/p/25976060">文章一</a>, <a href="https://zhuanlan.zhihu.com/p/89905893">文章二</a> 或者自行 Google</li></ul><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><p>当我们访问的 Google 的时候，我们的电脑内置了权威机构的根证书 GTS Root。由此根证书，我们可以验证谷歌站点发过来的 ca chain 真实性。<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211126095726.png"></p><h1 id="vault-pki"><a href="#vault-pki" class="headerlink" title="vault pki"></a>vault pki</h1><p>参考:</p><ul><li><a href="https://learn.hashicorp.com/tutorials/vault/pki-engine">官网教程</a></li><li><a href="https://strimzi.io/blog/2018/11/16/using-vault-with-strimzi/">CA chain</a></li><li><a href="https://daimajiaoliu.com/daima/481c508cb9003fc">nginx 验证</a></li></ul><p>搭建 vault 可以参考我的另外一篇 post <a href="https://feiyang233.club/post/vault/">vault 实践</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Creating the root CA:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">First, <span class="built_in">enable</span> the pki secrets engine at the pki path:</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vault secrets <span class="built_in">enable</span> pki</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Tune the pki secrets engine to issue certificates with a maximum time-to-live (TTL)</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  of 87600 hours (10 years):</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vault secrets tune -max-lease-ttl=87600h pki</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Generate the root CA, extracting the root CA<span class="string">&#x27;s certificate to root.crt; the secret</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">  key is not exported!</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">vault write -field=certificate pki/root/generate/internal common_name=&quot;feiyang.com&quot; \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">       ttl=87600h &gt; root.crt</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">This generates a new self-signed CA certificate and private key. Vault will automatically</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">  revoke the generated root at the end of its lease period (TTL); the CA certificate will</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">    sign its own Certificate Revocation List (CRL).</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Configure the CA and CRL URLs:</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">vault write pki/config/urls \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">     issuing_certificates=&quot;$VAULT_ADDR/v1/pki/ca&quot; \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">     crl_distribution_points=&quot;$VAULT_ADDR/v1/pki/crl&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Creating the intermediate CA:</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">First, enable the pki secrets engine at the pki_int path:</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">vault secrets enable -path=pki_int pki</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Tune the pki_int secrets engine to issue certificates with a maximum time-to-live (TTL)</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">  of 43800 hours (5 years):</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">vault secrets tune -max-lease-ttl=43800h pki_int</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Execute the following command to generate an intermediate and save the CSR as</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">  pki_intermediate.csr:</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">vault write -format=json pki_int/intermediate/generate/exported \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">        common_name=&quot;feiyang.com Intermediate Authority&quot; ttl=&quot;43800h&quot; format=&quot;pem&quot; &gt; pki_intermediate</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Extract the private key &amp; certificate signing request from the previous command&#x27;</span>s output:</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jq -r <span class="string">&#x27;.data.private_key&#x27;</span> &lt; pki_intermediate &gt; intermediate.key.pem</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jq -r <span class="string">&#x27;.data.csr&#x27;</span> &lt; pki_intermediate &gt; pki_intermediate.csr</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Sign the intermediate certificate with the root certificate and save the generated</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  certificate as intermediate.cert.pem:</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vault write -format=json pki/root/sign-intermediate csr=@pki_intermediate.csr \</span></span><br><span class="line"><span class="language-bash">        format=<span class="string">&quot;pem&quot;</span> \</span></span><br><span class="line"><span class="language-bash">        | jq -r <span class="string">&#x27;.data.certificate&#x27;</span> &gt; intermediate.cert.pem</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Once the CSR is signed and the root CA returns a certificate, it can be imported back</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  into Vault:</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vault write pki_int/intermediate/set-signed certificate=@intermediate.cert.pem</span></span><br></pre></td></tr></table></figure><p>然后就是拼接成 ca chain （颁发的证书在前，CA证书在后）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> intermediate.cert.pem &gt; intermediate.chain.pem</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> root.crt &gt;&gt; intermediate.chain.pem</span></span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:/etc/vault.d/pki_test# ls</span><br><span class="line">feiyang.txt            intermediate.chain.pem  pki_intermediate      root.crt</span><br><span class="line">intermediate.cert.pem  intermediate.key.pem    pki_intermediate.csr</span><br></pre></td></tr></table></figure><p>为 client 创建一个 role， client 端可以用来申请证书。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vault write pki_int/roles/feiyang-dot-com \</span><br><span class="line">     allowed_domains=&quot;feiyang.com&quot; \</span><br><span class="line">     allow_subdomains=true \</span><br><span class="line">     max_ttl=&quot;720h&quot;</span><br><span class="line">     </span><br><span class="line">vault write pki_int/issue/feiyang-dot-com common_name=&quot;test.feiyang.com&quot; ttl=&quot;24h&quot; &gt;&gt;feiyang.txt</span><br></pre></td></tr></table></figure><p>我们来看一下， 返回的 test.feiyang.com 有什么</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/etc/vault.d/pki_test# cat feiyang.txt</span><br><span class="line">Key                 Value</span><br><span class="line">---                 -----</span><br><span class="line">ca_chain            [-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDrDCCApSgAwIBAgIUNhNKMD9l+/MExLQd3zhvJ6BGDNQwDQYJKoZIhvcNAQEL</span><br><span class="line">BQAwFjEUMBIGA1UEAxMLZmVpeWFuZy5jb20wHhcNMjExMTIzMDIyNzAyWhcNMjEx</span><br><span class="line">MjI1MDIyNzMyWjAtMSswKQYDVQQDEyJmZWl5YW5nLmNvbSBJbnRlcm1lZGlhdGUg</span><br><span class="line">QXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6fVj91gg</span><br><span class="line">QY1UpNnm387tn9lMirtwhVxEexXPJHL00St3J+io7gbTkw6DNZE5wwsoILqB4jKe</span><br><span class="line">rGsWsk2zIZlebISBzPVhIdLqeVyTW0/hUtLc4KoHgcrAtI8qwaqtGMAOmLWBLHdZ</span><br><span class="line">Gb6j2uiuf6773YPkNT0zaemD/t3JndFFCzZne3xUsOkPUrODmtHUAENHPAxuDQhP</span><br><span class="line">DIYNDENi9KRvh5CD778gXFYgoh+MuWHx8+vcy8IJi/ykfR9yE+P2beP/N/11Jm02</span><br><span class="line">uALJJ0NeQ/nGDaktR4Q5SgkmLY8rwgWRWQmJBR7welSY/ZjPfjfdlmeGdHecYPK9</span><br><span class="line">acGBKk/81lryOQIDAQABo4HaMIHXMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E</span><br><span class="line">BTADAQH/MB0GA1UdDgQWBBRIhaij4GVicVWQAcZvTOxdPg4F5jAfBgNVHSMEGDAW</span><br><span class="line">gBSPMN9+BzUlsMkk8Hv+GVDS0nD3gjA+BggrBgEFBQcBAQQyMDAwLgYIKwYBBQUH</span><br><span class="line">MAKGImh0dHA6Ly8xOTIuMTY4LjY0LjM6ODIwMC92MS9wa2kvY2EwNAYDVR0fBC0w</span><br><span class="line">KzApoCegJYYjaHR0cDovLzE5Mi4xNjguNjQuMzo4MjAwL3YxL3BraS9jcmwwDQYJ</span><br><span class="line">KoZIhvcNAQELBQADggEBAEVNSisWlg+TdPct9VXKJ6cLsHdWNzIfIXk3lFNzcd1J</span><br><span class="line">zWuYEtBYpAvdLFAy3KzmmepTP/jqKN6+nw4JDOMzv/kaRx0Fyoq/uvBu3GILH3NB</span><br><span class="line">ZjMWkOCuvEdFozKj9qTj4GkL9wFzUfEra0w6x+2tr1qodCtcjxxHUv9/jr0slFle</span><br><span class="line">e/zOsLpNd/q+ozWNmt2KEN3STCugIoMhlvAQESUtiESbphMoqPFVw1cc5SX8LI78</span><br><span class="line">cQMgEyT67wiH9KHsJfcJQexzQCQUJcebXbO9HvUTnP94kdVZIN3uDot5OiDWJPqg</span><br><span class="line">M8uwej97SAyjjnjGR8bkO+Ct1SuSDV5URP2E/9possg=</span><br><span class="line">-----END CERTIFICATE-----]</span><br><span class="line">certificate         -----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDZjCCAk6gAwIBAgIUQu0BTkmbJHjwUGiXDjLOX47ki18wDQYJKoZIhvcNAQEL</span><br><span class="line">BQAwLTErMCkGA1UEAxMiZmVpeWFuZy5jb20gSW50ZXJtZWRpYXRlIEF1dGhvcml0</span><br><span class="line">eTAeFw0yMTExMjUxNjE0MzBaFw0yMTExMjYxNjE1MDBaMBsxGTAXBgNVBAMTEHRl</span><br><span class="line">c3QuZmVpeWFuZy5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCn</span><br><span class="line">cVsD17cydZz722CwpIS6bPjGLxMxnl2xk2yfGdhQZc2z/GEtyQd028n6PwPoxJ9U</span><br><span class="line">6dwGZcyzS/iHTZhmThv6hvy2QZgeIbWB8n58Cnf7ExWmwmplUVQd549NP9RwFtuN</span><br><span class="line">tBKZjxpVyPiwp3dVoBuA+3rVBo4z5Cfz1HQ0b53j5Vb9AjNX8VrDFWOpGOF2LWPg</span><br><span class="line">nZOWLQaCMMOd7iuXjPKLJtO2VDbBGBYOx0YXhyr5itQDhM8UKgEVU1kJZgna7CWu</span><br><span class="line">CfBdQh+new+YgsPTQx4zkca472Uyb9rykTxzRfnly0b5WkhwDoyvCMPZtFerf3T7</span><br><span class="line">LjJhqnVWcCgA1R0sb0/HAgMBAAGjgY8wgYwwDgYDVR0PAQH/BAQDAgOoMB0GA1Ud</span><br><span class="line">JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQUSjt1XbgoJdJceVB+</span><br><span class="line">VP5bMuGFEnAwHwYDVR0jBBgwFoAUSIWoo+BlYnFVkAHGb0zsXT4OBeYwGwYDVR0R</span><br><span class="line">BBQwEoIQdGVzdC5mZWl5YW5nLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAdTP2kqpS</span><br><span class="line">P1qTmt/ILAuJ5wz6Fe+78v3uv5PjAGz4CJ4gcdqVXqVxn0a6PPi3VuCg2y50h/zC</span><br><span class="line">a/T7OWC/Qcu3No0Puad2T2osVbrH/pf/WvmieMnwPcc+8Ay8pgEDO1iP8R7m/YB4</span><br><span class="line">fnt1x2ePkeHRp984QnCt19a8nVNTnD5bsGR4dIcchgz0xDyGlro7rDY8MppBJZNy</span><br><span class="line">24Dg6BJOo+GTFwO3+lvoB4RrlVQpr74a5y4PJJnRdwq5ov/1qMd5E1MkzJAdPPhs</span><br><span class="line">xi5+oaa7Ja9hpYk9iZUcdZrePE31WTkqnNZvkC+DZGQ3eZbdO/uK2fRYvX4tjOyX</span><br><span class="line">16kYe2YkPN9KzA==</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">expiration          1637943300</span><br><span class="line">issuing_ca          -----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDrDCCApSgAwIBAgIUNhNKMD9l+/MExLQd3zhvJ6BGDNQwDQYJKoZIhvcNAQEL</span><br><span class="line">BQAwFjEUMBIGA1UEAxMLZmVpeWFuZy5jb20wHhcNMjExMTIzMDIyNzAyWhcNMjEx</span><br><span class="line">MjI1MDIyNzMyWjAtMSswKQYDVQQDEyJmZWl5YW5nLmNvbSBJbnRlcm1lZGlhdGUg</span><br><span class="line">QXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6fVj91gg</span><br><span class="line">QY1UpNnm387tn9lMirtwhVxEexXPJHL00St3J+io7gbTkw6DNZE5wwsoILqB4jKe</span><br><span class="line">rGsWsk2zIZlebISBzPVhIdLqeVyTW0/hUtLc4KoHgcrAtI8qwaqtGMAOmLWBLHdZ</span><br><span class="line">Gb6j2uiuf6773YPkNT0zaemD/t3JndFFCzZne3xUsOkPUrODmtHUAENHPAxuDQhP</span><br><span class="line">DIYNDENi9KRvh5CD778gXFYgoh+MuWHx8+vcy8IJi/ykfR9yE+P2beP/N/11Jm02</span><br><span class="line">uALJJ0NeQ/nGDaktR4Q5SgkmLY8rwgWRWQmJBR7welSY/ZjPfjfdlmeGdHecYPK9</span><br><span class="line">acGBKk/81lryOQIDAQABo4HaMIHXMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E</span><br><span class="line">BTADAQH/MB0GA1UdDgQWBBRIhaij4GVicVWQAcZvTOxdPg4F5jAfBgNVHSMEGDAW</span><br><span class="line">gBSPMN9+BzUlsMkk8Hv+GVDS0nD3gjA+BggrBgEFBQcBAQQyMDAwLgYIKwYBBQUH</span><br><span class="line">MAKGImh0dHA6Ly8xOTIuMTY4LjY0LjM6ODIwMC92MS9wa2kvY2EwNAYDVR0fBC0w</span><br><span class="line">KzApoCegJYYjaHR0cDovLzE5Mi4xNjguNjQuMzo4MjAwL3YxL3BraS9jcmwwDQYJ</span><br><span class="line">KoZIhvcNAQELBQADggEBAEVNSisWlg+TdPct9VXKJ6cLsHdWNzIfIXk3lFNzcd1J</span><br><span class="line">zWuYEtBYpAvdLFAy3KzmmepTP/jqKN6+nw4JDOMzv/kaRx0Fyoq/uvBu3GILH3NB</span><br><span class="line">ZjMWkOCuvEdFozKj9qTj4GkL9wFzUfEra0w6x+2tr1qodCtcjxxHUv9/jr0slFle</span><br><span class="line">e/zOsLpNd/q+ozWNmt2KEN3STCugIoMhlvAQESUtiESbphMoqPFVw1cc5SX8LI78</span><br><span class="line">cQMgEyT67wiH9KHsJfcJQexzQCQUJcebXbO9HvUTnP94kdVZIN3uDot5OiDWJPqg</span><br><span class="line">M8uwej97SAyjjnjGR8bkO+Ct1SuSDV5URP2E/9possg=</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">private_key         -----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEpAIBAAKCAQEAp3FbA9e3MnWc+9tgsKSEumz4xi8TMZ5dsZNsnxnYUGXNs/xh</span><br><span class="line">LckHdNvJ+j8D6MSfVOncBmXMs0v4h02YZk4b+ob8tkGYHiG1gfJ+fAp3+xMVpsJq</span><br><span class="line">ZVFUHeePTT/UcBbbjbQSmY8aVcj4sKd3VaAbgPt61QaOM+Qn89R0NG+d4+VW/QIz</span><br><span class="line">V/FawxVjqRjhdi1j4J2Tli0GgjDDne4rl4zyiybTtlQ2wRgWDsdGF4cq+YrUA4TP</span><br><span class="line">FCoBFVNZCWYJ2uwlrgnwXUIfp3sPmILD00MeM5HGuO9lMm/a8pE8c0X55ctG+VpI</span><br><span class="line">cA6MrwjD2bRXq390+y4yYap1VnAoANUdLG9PxwIDAQABAoIBAB5H9bnALTVG59j0</span><br><span class="line">V4wadJZyVpsgsEvs4+zVSHONbP09K/I81iY9kMelZ+WFt+NEi7wDfvL5Pge+2Xc+</span><br><span class="line">pSz7OzwXZWRggG4Skoypmg48pm4ViXja9/rStm+iDNxfir+qopIB2stCgfS5n5/y</span><br><span class="line">6TXm+pJc6F3WDal8vWzvIwTImrk32WgNa3TxA/KtkawbhiAwOsvT4S5SlQmsgpFK</span><br><span class="line">EtC+lmbx9aZTeoAcor/XMz9hbk0pB3r9VK4Z4MxOz5WrNcb2wPZ81EuVVBBdEYCI</span><br><span class="line">auaNTnLl8r5w/VMSTi2DvSuZ9SC6yGc4Gv8Y3GvsHpxujAQlls3kqJQtPAPs4Cwg</span><br><span class="line">hNS8JyECgYEAwDrhkaW7AUhrhQ5655Vv4/EF5sFNIPp8A0e7jzq7iDSmbvdG1EGU</span><br><span class="line">eaUYqj7zY6USRf2B2cnTYo7WQJedshK6/mRErFv+prsNUT0kyKIgEKgLWPMZwzAQ</span><br><span class="line">6RI9uDRiRYNbcLlU8Wukxt1A+9JlddVFfwI0L98J9v6TkgRXL8ZTKM0CgYEA3v1s</span><br><span class="line">J6ZdjjBqA1+qzSEkmHjSk9CPTNuQ4/sIciOXdcu8r+g9fbj88I4ZrT4q8L7Xqojj</span><br><span class="line">bgB/mJpebRrkLOGU8iBCqCHjJSqciBBU1c2v8quoLOD4Mo2naBLqI2ge30RJGxEY</span><br><span class="line">Yt8Bacmlr3q2SsDZ6GtLQf7UVCfN+3u+Gd4CquMCgYBYFeMtSYNSyCu00fjRy/F0</span><br><span class="line">wwpQPj2oof9XxXQV4vTyKiYl7RvAwbhWsaeGw8fl3ktsVQk+kjRSEl/tQ0yYv+p+</span><br><span class="line">DdZGIPWk00v78Qe9BEWrPEXO4b7paUomcxxjH2X0soehNNvOsOPV2KchfbzObQcm</span><br><span class="line">dw0Q7qRzUR6wJ1sIYlnS9QKBgQDPCftOgSAiMf9sbHnYhapFywCxb5ZtpPtNQbog</span><br><span class="line">x70MCQODTB0zyvtGmplqiesype72Dq0jaGEQHlwH70zmAvjZKmzZUMVmr76wcoFi</span><br><span class="line">Fd0Ecq7uJF8uCOnjLpSoFTd80xkRgXjj6+yS/T/RwxzYIWDxdBVnDCS2klKk6cqi</span><br><span class="line">l8hgQwKBgQCCG+QMKA6o6gtYnxdi6S3EF3Mo0b9MB3r4OFRFHN7Sk1ICxWB5oy94</span><br><span class="line">YSER0HMxcl+N6COfr4QiA46Me0ixEJ/CXnE9ey7zrvojchLbtIZrZPenhAiFxiiC</span><br><span class="line">/wDATARa8QuQ2HrBt7G/zzCujWQilbGcWWqK/K/4ESA40Ib4N05grQ==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br><span class="line">private_key_type    rsa</span><br><span class="line">serial_number       42:ed:01:4e:49:9b:24:78:f0:50:68:97:0e:32:ce:5f:8e:e4:8b:5f</span><br></pre></td></tr></table></figure><h1 id="verify-in-nginx"><a href="#verify-in-nginx" class="headerlink" title="verify in nginx"></a>verify in nginx</h1><p>安装 Nginx 的过程就省略了，只看设置</p><h2 id="nginx-server"><a href="#nginx-server" class="headerlink" title="nginx server"></a>nginx server</h2><p>这里的 server.crt 就是 ca chain， 把 feiyang.txt 里面的 certificate 和 issuing_ca 拼接起来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">        listen       443 ssl http2;</span><br><span class="line">        listen       [::]:443 ssl http2;</span><br><span class="line">        server_name  test.feiyang.com;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">        ssl_session_cache shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  10m;</span><br><span class="line">        ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        </span><br><span class="line">[root@centos7 nginx]# cat /etc/pki/nginx/server.crt</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDZjCCAk6gAwIBAgIUQu0BTkmbJHjwUGiXDjLOX47ki18wDQYJKoZIhvcNAQEL</span><br><span class="line">BQAwLTErMCkGA1UEAxMiZmVpeWFuZy5jb20gSW50ZXJtZWRpYXRlIEF1dGhvcml0</span><br><span class="line">eTAeFw0yMTExMjUxNjE0MzBaFw0yMTExMjYxNjE1MDBaMBsxGTAXBgNVBAMTEHRl</span><br><span class="line">c3QuZmVpeWFuZy5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCn</span><br><span class="line">cVsD17cydZz722CwpIS6bPjGLxMxnl2xk2yfGdhQZc2z/GEtyQd028n6PwPoxJ9U</span><br><span class="line">6dwGZcyzS/iHTZhmThv6hvy2QZgeIbWB8n58Cnf7ExWmwmplUVQd549NP9RwFtuN</span><br><span class="line">tBKZjxpVyPiwp3dVoBuA+3rVBo4z5Cfz1HQ0b53j5Vb9AjNX8VrDFWOpGOF2LWPg</span><br><span class="line">nZOWLQaCMMOd7iuXjPKLJtO2VDbBGBYOx0YXhyr5itQDhM8UKgEVU1kJZgna7CWu</span><br><span class="line">CfBdQh+new+YgsPTQx4zkca472Uyb9rykTxzRfnly0b5WkhwDoyvCMPZtFerf3T7</span><br><span class="line">LjJhqnVWcCgA1R0sb0/HAgMBAAGjgY8wgYwwDgYDVR0PAQH/BAQDAgOoMB0GA1Ud</span><br><span class="line">JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQUSjt1XbgoJdJceVB+</span><br><span class="line">VP5bMuGFEnAwHwYDVR0jBBgwFoAUSIWoo+BlYnFVkAHGb0zsXT4OBeYwGwYDVR0R</span><br><span class="line">BBQwEoIQdGVzdC5mZWl5YW5nLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAdTP2kqpS</span><br><span class="line">P1qTmt/ILAuJ5wz6Fe+78v3uv5PjAGz4CJ4gcdqVXqVxn0a6PPi3VuCg2y50h/zC</span><br><span class="line">a/T7OWC/Qcu3No0Puad2T2osVbrH/pf/WvmieMnwPcc+8Ay8pgEDO1iP8R7m/YB4</span><br><span class="line">fnt1x2ePkeHRp984QnCt19a8nVNTnD5bsGR4dIcchgz0xDyGlro7rDY8MppBJZNy</span><br><span class="line">24Dg6BJOo+GTFwO3+lvoB4RrlVQpr74a5y4PJJnRdwq5ov/1qMd5E1MkzJAdPPhs</span><br><span class="line">xi5+oaa7Ja9hpYk9iZUcdZrePE31WTkqnNZvkC+DZGQ3eZbdO/uK2fRYvX4tjOyX</span><br><span class="line">16kYe2YkPN9KzA==</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDrDCCApSgAwIBAgIUNhNKMD9l+/MExLQd3zhvJ6BGDNQwDQYJKoZIhvcNAQEL</span><br><span class="line">BQAwFjEUMBIGA1UEAxMLZmVpeWFuZy5jb20wHhcNMjExMTIzMDIyNzAyWhcNMjEx</span><br><span class="line">MjI1MDIyNzMyWjAtMSswKQYDVQQDEyJmZWl5YW5nLmNvbSBJbnRlcm1lZGlhdGUg</span><br><span class="line">QXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6fVj91gg</span><br><span class="line">QY1UpNnm387tn9lMirtwhVxEexXPJHL00St3J+io7gbTkw6DNZE5wwsoILqB4jKe</span><br><span class="line">rGsWsk2zIZlebISBzPVhIdLqeVyTW0/hUtLc4KoHgcrAtI8qwaqtGMAOmLWBLHdZ</span><br><span class="line">Gb6j2uiuf6773YPkNT0zaemD/t3JndFFCzZne3xUsOkPUrODmtHUAENHPAxuDQhP</span><br><span class="line">DIYNDENi9KRvh5CD778gXFYgoh+MuWHx8+vcy8IJi/ykfR9yE+P2beP/N/11Jm02</span><br><span class="line">uALJJ0NeQ/nGDaktR4Q5SgkmLY8rwgWRWQmJBR7welSY/ZjPfjfdlmeGdHecYPK9</span><br><span class="line">acGBKk/81lryOQIDAQABo4HaMIHXMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E</span><br><span class="line">BTADAQH/MB0GA1UdDgQWBBRIhaij4GVicVWQAcZvTOxdPg4F5jAfBgNVHSMEGDAW</span><br><span class="line">gBSPMN9+BzUlsMkk8Hv+GVDS0nD3gjA+BggrBgEFBQcBAQQyMDAwLgYIKwYBBQUH</span><br><span class="line">MAKGImh0dHA6Ly8xOTIuMTY4LjY0LjM6ODIwMC92MS9wa2kvY2EwNAYDVR0fBC0w</span><br><span class="line">KzApoCegJYYjaHR0cDovLzE5Mi4xNjguNjQuMzo4MjAwL3YxL3BraS9jcmwwDQYJ</span><br><span class="line">KoZIhvcNAQELBQADggEBAEVNSisWlg+TdPct9VXKJ6cLsHdWNzIfIXk3lFNzcd1J</span><br><span class="line">zWuYEtBYpAvdLFAy3KzmmepTP/jqKN6+nw4JDOMzv/kaRx0Fyoq/uvBu3GILH3NB</span><br><span class="line">ZjMWkOCuvEdFozKj9qTj4GkL9wFzUfEra0w6x+2tr1qodCtcjxxHUv9/jr0slFle</span><br><span class="line">e/zOsLpNd/q+ozWNmt2KEN3STCugIoMhlvAQESUtiESbphMoqPFVw1cc5SX8LI78</span><br><span class="line">cQMgEyT67wiH9KHsJfcJQexzQCQUJcebXbO9HvUTnP94kdVZIN3uDot5OiDWJPqg</span><br><span class="line">M8uwej97SAyjjnjGR8bkO+Ct1SuSDV5URP2E/9possg=</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line"></span><br><span class="line">[root@centos7 nginx]# cat /etc/pki/nginx/private/server.key</span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEpAIBAAKCAQEAp3FbA9e3MnWc+9tgsKSEumz4xi8TMZ5dsZNsnxnYUGXNs/xh</span><br><span class="line">LckHdNvJ+j8D6MSfVOncBmXMs0v4h02YZk4b+ob8tkGYHiG1gfJ+fAp3+xMVpsJq</span><br><span class="line">ZVFUHeePTT/UcBbbjbQSmY8aVcj4sKd3VaAbgPt61QaOM+Qn89R0NG+d4+VW/QIz</span><br><span class="line">V/FawxVjqRjhdi1j4J2Tli0GgjDDne4rl4zyiybTtlQ2wRgWDsdGF4cq+YrUA4TP</span><br><span class="line">FCoBFVNZCWYJ2uwlrgnwXUIfp3sPmILD00MeM5HGuO9lMm/a8pE8c0X55ctG+VpI</span><br><span class="line">cA6MrwjD2bRXq390+y4yYap1VnAoANUdLG9PxwIDAQABAoIBAB5H9bnALTVG59j0</span><br><span class="line">V4wadJZyVpsgsEvs4+zVSHONbP09K/I81iY9kMelZ+WFt+NEi7wDfvL5Pge+2Xc+</span><br><span class="line">pSz7OzwXZWRggG4Skoypmg48pm4ViXja9/rStm+iDNxfir+qopIB2stCgfS5n5/y</span><br><span class="line">6TXm+pJc6F3WDal8vWzvIwTImrk32WgNa3TxA/KtkawbhiAwOsvT4S5SlQmsgpFK</span><br><span class="line">EtC+lmbx9aZTeoAcor/XMz9hbk0pB3r9VK4Z4MxOz5WrNcb2wPZ81EuVVBBdEYCI</span><br><span class="line">auaNTnLl8r5w/VMSTi2DvSuZ9SC6yGc4Gv8Y3GvsHpxujAQlls3kqJQtPAPs4Cwg</span><br><span class="line">hNS8JyECgYEAwDrhkaW7AUhrhQ5655Vv4/EF5sFNIPp8A0e7jzq7iDSmbvdG1EGU</span><br><span class="line">eaUYqj7zY6USRf2B2cnTYo7WQJedshK6/mRErFv+prsNUT0kyKIgEKgLWPMZwzAQ</span><br><span class="line">6RI9uDRiRYNbcLlU8Wukxt1A+9JlddVFfwI0L98J9v6TkgRXL8ZTKM0CgYEA3v1s</span><br><span class="line">J6ZdjjBqA1+qzSEkmHjSk9CPTNuQ4/sIciOXdcu8r+g9fbj88I4ZrT4q8L7Xqojj</span><br><span class="line">bgB/mJpebRrkLOGU8iBCqCHjJSqciBBU1c2v8quoLOD4Mo2naBLqI2ge30RJGxEY</span><br><span class="line">Yt8Bacmlr3q2SsDZ6GtLQf7UVCfN+3u+Gd4CquMCgYBYFeMtSYNSyCu00fjRy/F0</span><br><span class="line">wwpQPj2oof9XxXQV4vTyKiYl7RvAwbhWsaeGw8fl3ktsVQk+kjRSEl/tQ0yYv+p+</span><br><span class="line">DdZGIPWk00v78Qe9BEWrPEXO4b7paUomcxxjH2X0soehNNvOsOPV2KchfbzObQcm</span><br><span class="line">dw0Q7qRzUR6wJ1sIYlnS9QKBgQDPCftOgSAiMf9sbHnYhapFywCxb5ZtpPtNQbog</span><br><span class="line">x70MCQODTB0zyvtGmplqiesype72Dq0jaGEQHlwH70zmAvjZKmzZUMVmr76wcoFi</span><br><span class="line">Fd0Ecq7uJF8uCOnjLpSoFTd80xkRgXjj6+yS/T/RwxzYIWDxdBVnDCS2klKk6cqi</span><br><span class="line">l8hgQwKBgQCCG+QMKA6o6gtYnxdi6S3EF3Mo0b9MB3r4OFRFHN7Sk1ICxWB5oy94</span><br><span class="line">YSER0HMxcl+N6COfr4QiA46Me0ixEJ/CXnE9ey7zrvojchLbtIZrZPenhAiFxiiC</span><br><span class="line">/wDATARa8QuQ2HrBt7G/zzCujWQilbGcWWqK/K/4ESA40Ib4N05grQ==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><h2 id="ubuntu20-verify"><a href="#ubuntu20-verify" class="headerlink" title="ubuntu20 verify"></a>ubuntu20 verify</h2><p>需要先把根证书 root.crt 导入 ubuntu20, 这里我们 copy &amp; paste <a href="https://unix.stackexchange.com/questions/90450/adding-a-self-signed-certificate-to-the-trusted-list">Adding a self-signed certificate to the “trusted list”</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo <span class="built_in">cp</span> root.crt /usr/local/share/ca-certificates/</span></span><br><span class="line">vim /usr/local/share/ca-certificates/feiyang.crt</span><br><span class="line">sudo update-ca-certificates</span><br><span class="line"></span><br><span class="line">echo &quot;192.168.64.4 test.feiyang.com&quot; &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><p>添加好证书后，我们就可以用 curl 测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu20:/usr/local/share/ca-certificates# curl -v https://test.feiyang.com</span><br><span class="line"></span><br><span class="line">*   Trying 192.168.64.4:443...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to test.feiyang.com (192.168.64.4) port 443 (#0)</span><br><span class="line">* ALPN, offering h2</span><br><span class="line">* ALPN, offering http/1.1</span><br><span class="line">* successfully set certificate verify locations:</span><br><span class="line">*   CAfile: /etc/ssl/certs/ca-certificates.crt</span><br><span class="line">  CApath: /etc/ssl/certs</span><br><span class="line">* TLSv1.3 (OUT), TLS handshake, Client hello (1):</span><br><span class="line">* TLSv1.3 (IN), TLS handshake, Server hello (2):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Certificate (11):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server key exchange (12):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server finished (14):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):</span><br><span class="line">* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Finished (20):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Finished (20):</span><br><span class="line">* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">* ALPN, server accepted to use h2</span><br><span class="line">* Server certificate:</span><br><span class="line">*  subject: CN=test.feiyang.com</span><br><span class="line">*  start date: Nov 25 16:14:30 2021 GMT</span><br><span class="line">*  expire date: Nov 26 16:15:00 2021 GMT</span><br><span class="line">*  subjectAltName: host &quot;test.feiyang.com&quot; matched cert&#x27;s &quot;test.feiyang.com&quot;</span><br><span class="line">*  issuer: CN=feiyang.com Intermediate Authority</span><br><span class="line">*  SSL certificate verify ok.</span><br><span class="line">* Using HTTP2, server supports multi-use</span><br><span class="line">* Connection state changed (HTTP/2 confirmed)</span><br><span class="line">* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0</span><br><span class="line">* Using Stream ID: 1 (easy handle 0x563b3aa8be10)</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">GET / HTTP/2</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">Host: test.feiyang.com</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">user-agent: curl/7.68.0</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">accept: */*</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">* Connection state changed (MAX_CONCURRENT_STREAMS == 128)!</span></span><br><span class="line">&lt; HTTP/2 200</span><br><span class="line">&lt; server: nginx/1.20.1</span><br><span class="line">&lt; date: Fri, 26 Nov 2021 02:48:04 GMT</span><br><span class="line">&lt; content-type: text/html</span><br><span class="line">&lt; content-length: 4833</span><br><span class="line">&lt; last-modified: Fri, 16 May 2014 15:12:48 GMT</span><br><span class="line">&lt; etag: &quot;53762af0-12e1&quot;</span><br><span class="line">&lt; accept-ranges: bytes</span><br></pre></td></tr></table></figure><h2 id="ubuntu18-firefox"><a href="#ubuntu18-firefox" class="headerlink" title="ubuntu18 firefox"></a>ubuntu18 firefox</h2><p>我们把证书导入到另外一台 Ubuntu 桌面版，浏览器 firefox 里面。参考 <a href="https://javorszky.co.uk/2019/11/06/get-firefox-to-trust-your-self-signed-certificates/">Get Firefox to trust your self signed certificates</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;192.168.64.4 test.feiyang.com&quot; &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211126105131.png"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211126105137.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211126105144.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211126105150.jpg"></p><h1 id="vault-revoke"><a href="#vault-revoke" class="headerlink" title="vault revoke"></a>vault revoke</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/etc/vault.d/pki_test# vault write pki_int/revoke serial_number=42:ed:01:4e:49:9b:24:78:f0:50:68:97:0e:32:ce:5f:8e:e4:8b:5f</span><br><span class="line">Key                        Value</span><br><span class="line">---                        -----</span><br><span class="line">revocation_time            1637895959</span><br><span class="line">revocation_time_rfc3339    2021-11-26T03:05:59.165880864Z</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hashicorp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好物分享</title>
      <link href="/post/recommend/"/>
      <url>/post/recommend/</url>
      
        <content type="html"><![CDATA[<p>分享生活中的好物，用金钱真的能买到快乐，哈哈哈哈哈哈哈哈哈</p><span id="more"></span> <h1 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h1><p>iPhone 13 Pro 自适应刷新，真香。搭配 iWatch 戴着口罩也能解锁。</p><h2 id="App"><a href="#App" class="headerlink" title="App"></a>App</h2><p>分享我觉得物有所值的 Apps</p><h3 id="dictionary-com"><a href="#dictionary-com" class="headerlink" title="dictionary.com"></a>dictionary.com</h3><ul><li><a href="https://itunes.apple.com/us/app/dictionary-com-english-words/id308750436">dictionary.com</a></li><li>这个词典有一个很好的优势，对于那些有多个发音的词语。 这里区分的很好。比如 record 作动词的时候是一个发音，做名词的时候有是另外一个发音。</li><li>这个词典非常好，能解决那些同一个单词，不同读音，不同含义的问题。 APP 免广告 + 离线词典 8.85 USD</li></ul><h3 id="账本鸭"><a href="#账本鸭" class="headerlink" title="账本鸭"></a>账本鸭</h3><ul><li><a href="https://apps.apple.com/cn/app/daak-budget-bookkeeping/id1505160194">App Store Preview</a></li><li>国人开发的记账 app，记录日常生活的开销。页面整洁，方便实用，统计的功能也很实用。30 元人民币一次性付费后，解锁无广告，<br>可以存数据在 iCloud 备份。市面上很多免费的 bookkeeping app，虽然说是免费，但里面的广告，还有内置的购物商场太臃肿。 如果你只需要一款简简单单记账<br>的软件，这一块非常值得一试。试用完满意，再付费解锁无广告，云端数据存储。</li></ul><p>App 内购买项目:</p><ul><li>永久购买 ¥30.00</li><li>半年会员 ¥12.00</li><li>年度会员  ¥18.00</li></ul><p>自己亲身使用的一些小 tips：</p><ul><li>在记账时，交易账户可以自定义添加，修改。比如这里我就添加了新加坡的 DBS, UOB 银行, GrabPay<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010114341.jpg"> </li><li>账本: 默认的日常账本, 这个是按月统计的, 按年统计, 符合我们日常记账的习惯。那什么时候再额外创建一个账本呢？ 比如我们出去旅游的时候，费用就不计算在日常开销里面， 就可以创建一个国庆出游账本，时间为 10-1 到 10-7<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010114411.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010114405.jpg"> </li><li>这里是以日历的模式查看记账的历史记录，可以点击任意一天，然后点击左下角的记账。<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010114355.jpg"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20211010114401.jpg"></li></ul><h3 id="Learn-American-English-Podcast"><a href="#Learn-American-English-Podcast" class="headerlink" title="Learn American English Podcast"></a>Learn American English Podcast</h3><ul><li><a href="https://apps.apple.com/cn/app/learn-american-english-podcast/id893509851">Learn American English Podcast </a> </li><li>国内的朋友们慎重购买 30 元无广告。 因为我担心国内的速度，下载 VOA 的音频延迟大，速度很慢。每天坚持听，跟读，是一个练习英文的好方法。<br>这个 APP 还支持离线下载，标记当前朗读的文字段落。内置查词功能（虽说是调用谷歌翻译，国内的小伙伴也许需要翻墙）</li></ul><h3 id="墨墨背单词"><a href="#墨墨背单词" class="headerlink" title="墨墨背单词"></a>墨墨背单词</h3><ul><li><a href="https://apps.apple.com/cn/app/%E5%A2%A8%E5%A2%A8%E8%83%8C%E5%8D%95%E8%AF%8D-%E5%9B%9B%E5%85%AD%E7%BA%A7%E8%80%83%E7%A0%94%E7%AD%89%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%AE%B0%E5%BF%86/id888483369">墨墨背单词</a></li><li>背单词才是英语的根本，很多名词还得慢慢学习。</li></ul><h3 id="Currency-Converter-SG"><a href="#Currency-Converter-SG" class="headerlink" title="Currency Converter (SG)"></a>Currency Converter (SG)</h3><ul><li><a href="https://apps.apple.com/sg/app/currency-converter-sg/id1407904709">Currency Converter (SG) </a></li><li>查看货币之间汇率的一款免费软件，虽然有广告，但广告在最底部，不影响日常使用。</li></ul><h1 id="电脑"><a href="#电脑" class="headerlink" title="电脑"></a>电脑</h1><p>MacBook Pro 屏幕是真的棒</p><h2 id="APP"><a href="#APP" class="headerlink" title="APP"></a>APP</h2><h3 id="1password"><a href="#1password" class="headerlink" title="1password"></a>1password</h3><p>我目前使用的跨平台密码管理工具，真的太好用了，Windows， MacBook Pro，手机， Chrome浏览器，统统同步，物有所值。 家庭版会员，人均每个月 1 美元。 <a href="https://1password.com/">https://1password.com/</a></p><h3 id="Notion"><a href="#Notion" class="headerlink" title="Notion"></a>Notion</h3><p>免费的笔记软件 <a href="https://www.notion.so/">https://www.notion.so/</a></p><h3 id="iShot"><a href="#iShot" class="headerlink" title="iShot"></a>iShot</h3><p>better365 他们家的产品都还不错，最近用了一款截图软件 iShot，功能很多，还可以截长图，录屏。免费版其实截图就完全够用 <a href="https://www.better365.cn/ishot.html">https://www.better365.cn/ishot.html</a>  </p><h3 id="BetterDisplay"><a href="#BetterDisplay" class="headerlink" title="BetterDisplay"></a>BetterDisplay</h3><p><a href="https://github.com/waydabber/BetterDisplay#readme">https://github.com/waydabber/BetterDisplay#readme</a> 这款修改显示器分辨率的软件是真心不错，我是因为 2K 显示器字体太小了，用这款显示器修改分辨率。<br>最近作者又加了新功能，不需要 创建 dummy 投影的方式来更改分辨率了，直接原生支持修改显示器分辨率，默认分辨率。还支持控制显示器的亮度和声音大小，真心建议 15 美元买 Pro 版本，如果你是 2K 显示器，强烈推荐你试一试。<br>关于显示器亮度： 软件上默认最大亮度是你的显示器按键设置的当前值，比如我的显示器按键设置当前值为60%，用 BetterDisplay 控制亮度时，最大值就是60%，我可调整的区间为0-60%，而不能增加到60%以上<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/iShot_2022-06-19_23.30.02.png"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/iShot_2022-06-19_23.31.37.png"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202206192344125.png"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tmate 终端共享</title>
      <link href="/post/tmate/"/>
      <url>/post/tmate/</url>
      
        <content type="html"><![CDATA[<p>如何将你的 terminal 共享给他人，一起协同工作，结对编程呢？ 在这里安利 <a href="https://tmate.io/">tmate Instant terminal sharing</a></p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://tmate.io/">官网</a>上有详细的，各种操作系统的安装教程, 同时也安利一篇参考的文章 <a href="https://www.cnblogs.com/idorax/p/12380758.html">终端共享神器tmate简明教程</a></p><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><p>前提是先安装好 <a href="https://brew.sh/">brew</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install tmate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查版本，最新的 V2.4.0</span></span><br><span class="line">FEIYANG@MAC ~ % tmate -V</span><br><span class="line">tmate 2.4.0</span><br></pre></td></tr></table></figure><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><p>Ubuntu 上面通过 apt 安装的是 tmate 2.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install -y tmate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装最新版本</span></span><br><span class="line">curl -L https://github.com/tmate-io/tmate/releases/download/2.4.0/tmate-2.4.0-static-linux-amd64.tar.xz|tar xJv</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> tmate-2.4.0-static-linux-amd64/tmate /usr/bin/tmate</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>首先要确保自己有 SSH key， 如果没有，必须先生成一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><h2 id="结对编程"><a href="#结对编程" class="headerlink" title="结对编程"></a>结对编程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># run tmate</span></span><br><span class="line">tmate</span><br><span class="line"></span><br><span class="line">Tip: <span class="keyword">if</span> you wish to use tmate only <span class="keyword">for</span> remote access, run: tmate -F                                                                                                           [0/0]</span><br><span class="line">To see the following messages again, run <span class="keyword">in</span> a tmate session: tmate show-messages</span><br><span class="line">Press &lt;q&gt; or &lt;ctrl-c&gt; to <span class="built_in">continue</span></span><br><span class="line">---------------------------------------------------------------------</span><br><span class="line">Connecting to ssh.tmate.io...</span><br><span class="line">Note: clear your terminal before sharing <span class="built_in">readonly</span> access</span><br><span class="line">web session <span class="built_in">read</span> only: https://tmate.io/t/ro-86Kbnayp3sU5zm8HZcNUGKxB4</span><br><span class="line">ssh session <span class="built_in">read</span> only: ssh ro-86Kbnayp3sU5zm8HZcNUGKxB4@sgp1.tmate.io</span><br><span class="line">web session: https://tmate.io/t/ZkWhcPLmKA7wDhc7PzUgNCBHs</span><br><span class="line">ssh session: ssh ZkWhcPLmKA7wDhc7PzUgNCBHs@sgp1.tmate.io</span><br><span class="line"><span class="comment"># 以上是四种连接方式 ssh、ssh-ro、web和web-ro。其中，ssh、web支持读写访问，ssh-ro、web-ro支持只读访问。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分享只读</span></span><br><span class="line">ssh ro-86Kbnayp3sU5zm8HZcNUGKxB4@sgp1.tmate.io</span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:~<span class="comment"># w</span></span><br><span class="line"> 16:07:02 up  4:00,  1 user,  load average: 0.00, 0.01, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">feiyang  pts/0    192.168.1.125    12:08    0.00s  0.07s  0.01s sshd: feiyang]</span><br><span class="line">root@ubuntu18-108:~<span class="comment"># ls</span></span><br><span class="line">go  snap  tmate-2.4.0-static-linux-amd64</span><br><span class="line">root@ubuntu18-108:~<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">logout</span>[lost server]</span><br><span class="line">Connection to sgp1.tmate.io closed by remote host.</span><br><span class="line">Connection to sgp1.tmate.io closed.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分享读写</span></span><br><span class="line">ssh session: ssh ZkWhcPLmKA7wDhc7PzUgNCBHs@sgp1.tmate.io</span><br></pre></td></tr></table></figure><p>如果还想查看 To see the following messages again, run in a tmate session: tmate show-messages</p><h2 id="remote-access"><a href="#remote-access" class="headerlink" title="remote access"></a>remote access</h2><p>Tip: if you wish to use tmate only for remote access, run: <code>tmate -F</code><br>如果你想将一台只有内网的机器暴露出来，像 SSH 登录公网 IP  的机器一样, 那你需要 Remote access</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tmate -F</span><br><span class="line"></span><br><span class="line">To connect to the session locally, run: tmate -S /tmp/tmate-0/nhlGjc attach</span><br><span class="line">Connecting to ssh.tmate.io...</span><br><span class="line">web session <span class="built_in">read</span> only: https://tmate.io/t/ro-FNTFCyhhMuE6Vtstm6MZ5gLnR</span><br><span class="line">ssh session <span class="built_in">read</span> only: ssh ro-FNTFCyhhMuE6Vtstm6MZ5gLnR@sgp1.tmate.io</span><br><span class="line">web session: https://tmate.io/t/sEJnrJCjsx87J2PgUyUgbdPY2</span><br><span class="line">ssh session: ssh sEJnrJCjsx87J2PgUyUgbdPY2@sgp1.tmate.io</span><br></pre></td></tr></table></figure><h1 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h1><p>因为每次产生的登录地址都是随机的, 一定程度保证了安全性. 但是想做到万无一失, 特别是使用 remote access 的时候, 长期暴露远程登录的时候, 访问控制是非常有必要的.</p><ul><li>将你所信任的人 B 的公钥加入到 A 你的~&#x2F;.ssh&#x2F;authorized_keys文件中，</li><li>启动tmate使用如下命令：当启用 public key 访问控制的时候，web 连接方式就无法使用了。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tmate -a ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># A 添加了 public key 的才能成功访问</span></span><br><span class="line">ssh 8yjGDpk3Vh79xm9rM2QMbKPZj@sgp1.tmate.io</span><br></pre></td></tr></table></figure>如果 C 没有保存公钥到 A 的~&#x2F;.ssh&#x2F;authorized_keys文件中，访问就会被拒绝<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh 8yjGDpk3Vh79xm9rM2QMbKPZj@sgp1.tmate.io</span><br><span class="line">The authenticity of host <span class="string">&#x27;sgp1.tmate.io (188.166.207.127)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:Hthk2T/M/Ivqfk1YYUn5ijC2Att3+UPzD7Rn72P5VWs.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>sgp1.tmate.io,188.166.207.127<span class="string">&#x27; (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">8yjGDpk3Vh79xm9rM2QMbKPZj@sgp1.tmate.io: Permission denied (publickey).</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>draw.io 画图教程</title>
      <link href="/post/drawio/"/>
      <url>/post/drawio/</url>
      
        <content type="html"><![CDATA[<p>工欲善其事，必先利其器。</p><span id="more"></span><p><a href="https://app.diagrams.net/">draw.io</a>  是一款免费的网页版画图工具，简单好用。  官方网站是 <a href="https://drawio-app.com/">https://drawio-app.com/</a></p><h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><p>网上搜索一下，也有很多教程，只需要花 5 分钟就可以浏览完</p><ul><li><a href="https://zhuanlan.zhihu.com/p/129659662">draw.io 新手使用教程</a> </li><li><a href="https://juejin.cn/post/6844903589383520264">使用draw.io绘制简洁大方的流程图</a></li></ul><h1 id="连接线"><a href="#连接线" class="headerlink" title="连接线"></a>连接线</h1><ul><li><a href="https://drawio.freshdesk.com/support/solutions/articles/16000054438-create-a-connector-with-bidirectional-arrows">如何画双箭头</a></li><li><a href="https://drawio-app.com/waypoints-in-draw-io-building-a-path-for-your-connectors/">增加转折点</a> 有时候我们希望连接线在某一点固定，我们需要增加一个铆钉点。 操作是，鼠标移动到连线上需要固定的那个点，点击右键，add waypoint</li></ul><h1 id="group"><a href="#group" class="headerlink" title="group"></a>group</h1><ul><li><a href="https://drawio.freshdesk.com/support/solutions/articles/16000042523-group-and-ungroup-shapes-and-connectors">将组件打包为一个整体</a>。 有时候组件太多了，一不小心就点错了，或者我们需要集体移动，改变大小。 这个时候，我们可以先将需要的组件选中，然后在右边的 Arrange 下面的 group</li></ul><p><img src="/img/misc/0.png"> </p><h1 id="layers"><a href="#layers" class="headerlink" title="layers"></a>layers</h1><ul><li><a href="https://www.diagrams.net/doc/layers">Work with layers in diagrams.net</a></li><li>当有许多组件的时候，而且重叠部分比较多，（有点套娃的样子）这个时候不好编辑，那么就需要分层了。</li><li>上面的图片只显示了 Backgroud 层， 下图只显示了 frame 层。</li></ul><p><img src="/img/misc/1.png"> </p><h1 id="export"><a href="#export" class="headerlink" title="export"></a>export</h1><p><a href="https://www.diagrams.net/doc/faq/export-diagram">导出图片时的区别</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes 实验环境搭建</title>
      <link href="/post/k8s/"/>
      <url>/post/k8s/</url>
      
        <content type="html"><![CDATA[<p>都 2021 年了，我终于把 kubernetes 实验测试环境搭建好了，泪目</p><span id="more"></span><p>2019 年的时候，我也曾经尝试学习，搭建 kubernetes 集群，结果当时自己的电脑性能太差了。一台  mac 模拟出三台虚拟机，性能上根本无法满足要求，甚至偶尔死机。还有当时自己 naive， 也不会善用<a href="https://feiyang233.club/post/vm/#%E5%AD%A6%E4%BC%9A%E5%BF%AB%E7%85%A7-snapshot">快照</a>, 每次搞崩溃了环境，又重头再来，费时费力。</p><p>如今，时代变了。兵强马壮，家里有三台笔记本，一台台式机，机荒的日子已经一去不复返了。重现当年好学的荣光，我辈义不容辞，冲。</p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>本文记录了，在三台 Ubuntu 虚拟机上搭建一个 kubernetes 集群的全部过程，以及分享菜鸡我踩过的坑。</p><p>实验的环境如下， 都是 Ubuntu desktop 桌面版的，我也建议用桌面版。 原因：比如 kubernetes Dashboard 只能从 localhost 本地访问，桌面版自带 Firefox 浏览器，就可以直接在虚拟机界面里面直接操作， 少一步转发。</p><table><thead><tr><th>Name</th><th>Operating system</th><th>Kernel</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>ubuntu18-119</td><td>Ubuntu 18.04.5 LTS</td><td>5.4.0</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.119</td></tr><tr><td>ubuntu18-120</td><td>Ubuntu 18.04.5 LTS</td><td>5.4.0</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.120</td></tr><tr><td>ubuntu18-121</td><td>Ubuntu 18.04.5 LTS</td><td>5.4.0</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.121</td></tr></tbody></table><p>这三台虚拟机，分别跑在三台笔记本电脑上。这样做的好处是，桥接模式不需要 NAT 端口映射，在我家的局域网里面尽情的玩耍。<br>当然如果你的电脑性能超级好，一台物理机跑三台虚拟机也是没有问题的。</p><p>实验环境的搭建，可以参考我的另外一篇博客 <a href="https://feiyang233.club/post/vm/">https://feiyang233.club/post/vm/</a></p><h1 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h1><p>分享两个不错的参考文档：</p><ul><li><a href="https://mp.weixin.qq.com/s/dMygLTxvdUEieQsaQ2RGLA">部署v1.20版的Kubernetes集群</a> 这个很不错</li><li><a href="https://www.escapelife.site/posts/180e93f1.html">无坑部署最小化K8S集群</a> 设置相对繁琐了一些</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在每一台机器上面做相同的准备工作。</p><h3 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h3><ul><li><p>每台机器 2 GB 或更多的 RAM </p></li><li><p>2 CPU 核或更多</p></li><li><p>集群中的所有机器的网络彼此均能相互连接</p></li><li><p>节点之中不可以有重复的主机名、MAC 地址或 product_uuid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你可以使用命令 ip <span class="built_in">link</span> 或 ifconfig -a 来获取网络接口的 MAC 地址</span><br><span class="line">可以使用 sudo <span class="built_in">cat</span> /sys/class/dmi/id/product_uuid 命令对 product_uuid 校验</span><br></pre></td></tr></table></figure></li><li><p>禁用交换分区。 删除文件 &#x2F;etc&#x2F;fstab 中 swapfile 一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/fstab: static file system information.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span></span><br><span class="line"><span class="comment"># device; this may be used with UUID= as a more robust way to name devices</span></span><br><span class="line"><span class="comment"># that works even if disks are added and removed. See fstab(5).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span></span><br><span class="line"><span class="comment"># / was on /dev/sda1 during installation</span></span><br><span class="line">UUID=2bd16ba3-1087-4d5e-9d1b-f1527f62a3ce /               ext4    errors=remount-ro 0       1</span><br><span class="line"><span class="comment"># /swapfile                                 none            swap    sw              0       0</span></span><br><span class="line">/dev/fd0        /media/floppy0  auto    rw,user,noauto,<span class="built_in">exec</span>,utf8 0       0</span><br></pre></td></tr></table></figure></li><li><p>允许 iptables 检查桥接流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-121:~<span class="comment"># lsmod | grep br_netfilter</span></span><br><span class="line">br_netfilter           28672  0</span><br><span class="line">bridge                176128  1 br_netfilter</span><br><span class="line">root@ubuntu18-121:~<span class="comment"># sudo modprobe br_netfilter</span></span><br></pre></td></tr></table></figure></li><li><p>禁用默认的防火墙服务, Ubuntu和Debian等Linux发行版默认使用ufw（Uncomplicated FireWall）作为前端来简化 iptables的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line">ufw status</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h3><p>参考官网文档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br><span class="line"></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h3 id="Container-runtimes"><a href="#Container-runtimes" class="headerlink" title="Container runtimes"></a>Container runtimes</h3><p>配置 Docker 守护程序，尤其是使用 systemd 来管理容器的 cgroup。<br>参考： <a href="https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker">https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;100m&quot;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="设置集群"><a href="#设置集群" class="headerlink" title="设置集群"></a>设置集群</h2><p>在三台机器上面安装 kubelet kubeadm kubectl，我当时安装的版本是 v1.21.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install -y apt-transport-https gnupg2 curl</span><br><span class="line"></span><br><span class="line">curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://apt.kubernetes.io/ kubernetes-xenial main&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/apt/sources.list.d/kubernetes.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="comment">#  运行如下命令单独获取相关的镜像文件, 加速后面的 init </span></span><br><span class="line">kubeadm config images pull</span><br></pre></td></tr></table></figure><p>到这来就可以先把三台机器关机，然后备份，存快照 snapshot</p><h3 id="master"><a href="#master" class="headerlink" title="master"></a>master</h3><p>初始化master节点，kubeadm init命令支持两种初始化方式，一是通过命令行选项传递关键的部署设定，另一个是基于yaml格式的专用配置文件，后一种允许用户自定义各个部署参数。</p><p>命令中的各选项简单说明如下： </p><ul><li>–pod-network-cidr：Pod网络的地址范围，其值为CIDR格式的网络地址，通常，Flannel网络插件的默认为10.244.0.0&#x2F;16，Project Calico插件的默认值为192.168.0.0&#x2F;16；</li><li>–service-cidr：Service的网络地址范围，其值为CIDR格式的网络地址，默认为10.96.0.0&#x2F;12；通常，<code>仅Flannel一类的网络插件需要手动指定该地址</code>；</li><li>–apiserver-advertise-address：apiserver通告给其他组件的IP地址，一般应该为Master节点的用于集群内部通信的IP地址，0.0.0.0表示节点上所有可用地址；</li><li>–token-ttl：共享令牌（token）的过期时长，默认为24小时，0表示永不过期；为防止不安全存储等原因导致的令牌泄露危及集群安全，建议为其设定过期时长。未设定该选项时，在token过期后，若期望再向集群中加入其它节点，可以使用如下命令重新创建token，并生成节点加入命令。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># node ip 192.168.1.119</span></span><br><span class="line"></span><br><span class="line">sudo kubeadm init \</span><br><span class="line">    --apiserver-advertise-address=192.168.1.119 \</span><br><span class="line">    --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">    --service-cidr=10.245.0.0/16</span><br><span class="line"></span><br><span class="line"><span class="comment"># output ------------------------</span></span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.1.119:6443 --token vldwrp.5p31pom71n355r2k \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:b8a5fd92b8506651a6b7a23d9176eeb4c66c8ff92a5d59ea0a5e084d494ae64f </span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 pods， 发现 coredns 在pending，是因为在等待网络插件的安装</span></span><br><span class="line">kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   coredns-558bd4d5db-76fbb               0/1     Pending   0          64s</span><br><span class="line">kube-system   coredns-558bd4d5db-vpjf4               0/1     Pending   0          64s</span><br><span class="line">kube-system   etcd-ubuntu18-119                      1/1     Running   0          79s</span><br><span class="line">kube-system   kube-apiserver-ubuntu18-119            1/1     Running   0          79s</span><br><span class="line">kube-system   kube-controller-manager-ubuntu18-119   1/1     Running   0          71s</span><br><span class="line">kube-system   kube-proxy-k8xth                       1/1     Running   0          64s</span><br><span class="line">kube-system   kube-scheduler-ubuntu18-119            1/1     Running   0          71s</span><br></pre></td></tr></table></figure><p>还有非常重要的一步是 <code>部署网络插件</code>,  <a href="https://kubernetes.io/zh/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model">插件列表</a> ， 这里我们选择安装 <a href="https://github.com/flannel-io/flannel#flannel">Flannel</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装网络插件</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">Warning: policy/v1beta1 PodSecurityPolicy is deprecated <span class="keyword">in</span> v1.21+, unavailable <span class="keyword">in</span> v1.25+</span><br><span class="line">podsecuritypolicy.policy/psp.flannel.unprivileged created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/flannel created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/flannel created</span><br><span class="line">serviceaccount/flannel created</span><br><span class="line">configmap/kube-flannel-cfg created</span><br><span class="line">daemonset.apps/kube-flannel-ds created</span><br></pre></td></tr></table></figure><p>安装完成，再检查 pods</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n kube-system -l app=flannel</span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-bj57z   1/1     Running   0          17s</span><br><span class="line"></span><br><span class="line"><span class="comment"># pods running</span></span><br><span class="line">kubectl get pods -n kube-system</span><br><span class="line">NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-558bd4d5db-76fbb               1/1     Running   0          10h</span><br><span class="line">coredns-558bd4d5db-vpjf4               1/1     Running   0          10h</span><br><span class="line">etcd-ubuntu18-119                      1/1     Running   0          10h</span><br><span class="line">kube-apiserver-ubuntu18-119            1/1     Running   0          10h</span><br><span class="line">kube-controller-manager-ubuntu18-119   1/1     Running   0          10h</span><br><span class="line">kube-flannel-ds-89pc6                  1/1     Running   0          10h</span><br><span class="line">kube-flannel-ds-bj57z                  1/1     Running   0          10h</span><br><span class="line">kube-flannel-ds-pnw6c                  1/1     Running   0          10h</span><br><span class="line">kube-proxy-k8xth                       1/1     Running   0          10h</span><br><span class="line">kube-proxy-n8fj8                       1/1     Running   0          10h</span><br><span class="line">kube-proxy-wlfmr                       1/1     Running   0          10h</span><br><span class="line">kube-scheduler-ubuntu18-119            1/1     Running   0          10h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时还只有一个 node</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">NAME           STATUS   ROLES                  AGE     VERSION</span><br><span class="line">ubuntu18-119   Ready    control-plane,master   3m29s   v1.21.1</span><br></pre></td></tr></table></figure><p>以上终于完成了主要节点的设置，接下来是其余 2 个节点的加入。</p><h3 id="node1"><a href="#node1" class="headerlink" title="node1"></a>node1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.1.119:6443 --token vldwrp.5p31pom71n355r2k \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:b8a5fd92b8506651a6b7a23d9176eeb4c66c8ff92a5d59ea0a5e084d494ae64f </span><br><span class="line"></span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[preflight] Reading configuration from the cluster...</span><br><span class="line">[preflight] FYI: You can look at this config file with <span class="string">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span></span><br><span class="line">[kubelet-start] Writing kubelet configuration to file <span class="string">&quot;/var/lib/kubelet/config.yaml&quot;</span></span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file <span class="string">&quot;/var/lib/kubelet/kubeadm-flags.env&quot;</span></span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[kubelet-start] Waiting <span class="keyword">for</span> the kubelet to perform the TLS Bootstrap...</span><br><span class="line"></span><br><span class="line">This node has joined the cluster:</span><br><span class="line">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class="line">* The Kubelet was informed of the new secure connection details.</span><br><span class="line"></span><br><span class="line">Run <span class="string">&#x27;kubectl get nodes&#x27;</span> on the control-plane to see this node <span class="built_in">join</span> the cluster.</span><br></pre></td></tr></table></figure><h3 id="node2"><a href="#node2" class="headerlink" title="node2"></a>node2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.1.119:6443 --token vldwrp.5p31pom71n355r2k \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:b8a5fd92b8506651a6b7a23d9176eeb4c66c8ff92a5d59ea0a5e084d494ae64f </span><br><span class="line"></span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[preflight] Reading configuration from the cluster...</span><br><span class="line">[preflight] FYI: You can look at this config file with <span class="string">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span></span><br><span class="line">[kubelet-start] Writing kubelet configuration to file <span class="string">&quot;/var/lib/kubelet/config.yaml&quot;</span></span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file <span class="string">&quot;/var/lib/kubelet/kubeadm-flags.env&quot;</span></span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[kubelet-start] Waiting <span class="keyword">for</span> the kubelet to perform the TLS Bootstrap...</span><br><span class="line"></span><br><span class="line">This node has joined the cluster:</span><br><span class="line">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class="line">* The Kubelet was informed of the new secure connection details.</span><br><span class="line"></span><br><span class="line">Run <span class="string">&#x27;kubectl get nodes&#x27;</span> on the control-plane to see this node <span class="built_in">join</span> the cluster.</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>当 2 个节点成功加入集群后，我们可以在 master 节点检查 nodes 情况, 3 个 nodes 的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes -o wide</span><br><span class="line"></span><br><span class="line">NAME           STATUS   ROLES                  AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION     CONTAINER-RUNTIME</span><br><span class="line">ubuntu18-119   Ready    control-plane,master   10h   v1.21.1   192.168.1.119   &lt;none&gt;        Ubuntu 18.04.5 LTS   5.4.0-72-generic   docker://20.10.6</span><br><span class="line">ubuntu18-120   Ready    &lt;none&gt;                 10h   v1.21.1   192.168.1.120   &lt;none&gt;        Ubuntu 18.04.5 LTS   5.4.0-42-generic   docker://20.10.6</span><br><span class="line">ubuntu18-121   Ready    &lt;none&gt;                 10h   v1.21.1   192.168.1.121   &lt;none&gt;        Ubuntu 18.04.5 LTS   5.4.0-42-generic   docker://20.10.6</span><br></pre></td></tr></table></figure><p>到此为止，一个master，并附带有三个node的kubernetes集群基础设施已经部署完成，用户随后即可测试其核心功能。例如，下面的命令可将demoapp以Pod的形式编排运行于集群之上，并通过在集群外部进行访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 在  master 上运行</span></span><br><span class="line">kubectl create deployment demoapp --image=ikubernetes/demoapp:v1.0</span><br><span class="line"></span><br><span class="line">kubectl scale deployment/demoapp --replicas=6</span><br><span class="line"></span><br><span class="line">kubectl create service nodeport demoapp --tcp=80:80</span><br><span class="line"></span><br><span class="line"><span class="comment">## 而后，使用如下命令了解Service对象demoapp使用的NodePort，以便于在集群外部进行访问：</span></span><br><span class="line">kubectl get svc -l app=demoapp </span><br><span class="line">NAME      TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">demoapp   NodePort   10.245.33.169   &lt;none&gt;        80:31938/TCP   6s</span><br><span class="line"></span><br><span class="line"><span class="comment">## 检查应用 6 个容器的分布情况, 5 个在 120， 1 个在 121</span></span><br><span class="line">kubectl get pods -o wide</span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE   IP           NODE           NOMINATED NODE   READINESS GATES</span><br><span class="line">demoapp-5f7d8f9847-2s6zd   1/1     Running   0          57s   10.244.2.2   ubuntu18-121   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-2wqdv   1/1     Running   0          57s   10.244.1.4   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-8p7wd   1/1     Running   0          57s   10.244.1.3   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-jrmzj   1/1     Running   0          81s   10.244.1.2   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-mjk7x   1/1     Running   0          57s   10.244.1.5   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-xch2b   1/1     Running   0          57s   10.244.1.6   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 service。一个 Service 由一组 backend Pod 组成。这些 Pod 通过 endpoints 暴露出来</span></span><br><span class="line"><span class="comment">#  注意 Service IP 完全是虚拟的，它从来没有走过网络，如果对它如何工作的原理感到好奇， 可以进一步阅读服务代理的内容</span></span><br><span class="line">kubectl describe svc demoapp</span><br><span class="line">Name:                     demoapp</span><br><span class="line">Namespace:                default</span><br><span class="line">Labels:                   app=demoapp</span><br><span class="line">Annotations:              &lt;none&gt;</span><br><span class="line">Selector:                 app=demoapp</span><br><span class="line">Type:                     NodePort</span><br><span class="line">IP Family Policy:         SingleStack</span><br><span class="line">IP Families:              IPv4</span><br><span class="line">IP:                       10.245.33.169</span><br><span class="line">IPs:                      10.245.33.169</span><br><span class="line">Port:                     80-80  80/TCP</span><br><span class="line">TargetPort:               80/TCP</span><br><span class="line">NodePort:                 80-80  31938/TCP</span><br><span class="line">Endpoints:                10.244.1.44:80,10.244.1.45:80,10.244.1.46:80 + 3 more...</span><br><span class="line">Session Affinity:         None</span><br><span class="line">External Traffic Policy:  Cluster</span><br><span class="line">Events:                   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 访问 access service port</span></span><br><span class="line"><span class="comment"># master test</span></span><br><span class="line">curl http://10.245.33.169 </span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-pps49, ServerIP: 10.244.1.49!</span><br><span class="line"></span><br><span class="line"><span class="comment"># node1 test</span></span><br><span class="line">curl http://10.245.33.169 </span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-p7vdc, ServerIP: 10.244.1.48!</span><br><span class="line"></span><br><span class="line"><span class="comment"># node2 test</span></span><br><span class="line">curl http://10.245.33.169 </span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-2z5g4, ServerIP: 10.244.1.44!</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在 master 上面，测试 API 注意 node 端口是 31938</span></span><br><span class="line">curl http://192.168.1.119:31938</span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-2s6zd, ServerIP: 10.244.2.2!</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在 node1 上面，测试 API 注意 node 端口是 31938</span></span><br><span class="line">curl http://192.168.1.120:31938</span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.1.1, ServerName: demoapp-5f7d8f9847-2wqdv, ServerIP: 10.244.1.4!</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在 node2 上面，测试 API 注意 node 端口是 31938</span></span><br><span class="line">curl http://192.168.1.121:31938</span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.2.0, ServerName: demoapp-5f7d8f9847-xch2b, ServerIP: 10.244.1.6!</span><br></pre></td></tr></table></figure><p>demoapp是一个web应用，k8s 内部可以通过 service_ip + port “<a href="http://10.245.33.169/">http://10.245.33.169:80</a>“ 访问。 集群外部可以通过 “<a href="http://nodeip:31938/">http://NodeIP:31938</a>“ 这个URL访问demoapp上的应用，例如于集群外通过浏览器访问”<a href="http://192.168.1.119:31938/">http://192.168.1.119:31938</a>“ 。 当然用 Nginx 做一层代理也是可以的， 或者云上的话，就是 load balancer</p><blockquote><p> 注意 Service IP 10.245.33.169 完全是虚拟的，它从来没有走过网络，如果对它如何工作的原理感到好奇， 可以进一步阅读 <a href="https://kubernetes.io/zh/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies">服务代理</a> 的内容。</p></blockquote><h3 id="service-forward"><a href="#service-forward" class="headerlink" title="service forward"></a>service forward</h3><ul><li>service virtual ip： 10.245.33.169  port:80 </li><li>node_ip: 192.168.1.x   port:31938</li></ul><p>请先看一下这篇文章 <a href="https://www.cnblogs.com/charlieroro/p/9588019.html">理解kubernetes环境的iptables</a> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># nat 表里面的转发规则 ，关于 destination 是 虚拟 ip 的有两条规则</span><br><span class="line">iptables -t nat -L KUBE-SERVICES -n | grep 10.245.33.169 </span><br><span class="line"></span><br><span class="line">KUBE-MARK-MASQ  tcp  -- !10.244.0.0/16        10.245.33.169   /* default/demoapp:80-80 cluster IP */ tcp dpt:80</span><br><span class="line">KUBE-SVC-EGFVCLHG4JMRSQGG  tcp  --  0.0.0.0/0 10.245.33.169   /* default/demoapp:80-80 cluster IP */ tcp dpt:80</span><br><span class="line"></span><br><span class="line"># 6 个 pods ，注意 IP 地址</span><br><span class="line">kubectl get pods -o wide </span><br><span class="line">NAME                      READY STATUS  RESTARTS   AGE     IP            NODE     NOMINATED NODE  READINESS GATES</span><br><span class="line">demoapp-5f7d8f9847-2z5g4  1/1   Running   0      5d17h   10.244.1.44   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-dq6s9  1/1   Running   0      5d17h   10.244.1.47   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-p7vdc  1/1   Running   0      5d17h   10.244.1.48   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-pps49  1/1   Running   0      5d17h   10.244.1.49   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-t6c8k  1/1   Running   0      5d17h   10.244.1.46   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-wjqmm  1/1   Running   0      5d17h   10.244.1.45   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line"></span><br><span class="line"># 每个 pods 都有一条规则， 如果有请求是访问 pods 的</span><br><span class="line">iptables -t nat -L -n  | grep 10.244.1</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.49   0.0.0.0/0  /* default/demoapp:80-80 */</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.47   0.0.0.0/0  /* default/demoapp:80-80 */</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.44   0.0.0.0/0  /* default/demoapp:80-80 */</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.48   0.0.0.0/0  /* default/demoapp:80-80 */</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.46   0.0.0.0/0  /* default/demoapp:80-80 */</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.45   0.0.0.0/0  /* default/demoapp:80-80 */</span><br></pre></td></tr></table></figure><p>从上面可以看到， iptable 最终进入到 KUBE-MARK-MASQ chain 链， 而最终会 mark 标记后的请求由 kube-proxy 处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Chain KUBE-MARK-MASQ (23 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">MARK       all  --  0.0.0.0/0            0.0.0.0/0            MARK or 0x4000</span><br></pre></td></tr></table></figure><h3 id="iptables-proxy"><a href="#iptables-proxy" class="headerlink" title="iptables proxy"></a>iptables proxy</h3><p>检查是哪一种 proxy mode <a href="https://stackoverflow.com/questions/66746018/how-to-find-which-mode-kube-proxy-is-running-in">How to find which mode kube-proxy is running in</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-119:~<span class="comment"># docker logs  k8s_kube-proxy_kube-proxy-k8xth_kube-system_0c7ede9e-3398-42ed-b30d-3e0af106049d_14 </span></span><br><span class="line">I0601 06:59:18.494352  1 node.go:172] Successfully retrieved node IP: 192.168.1.119</span><br><span class="line">I0601 06:59:18.494404  1 server_others.go:140] Detected node IP 192.168.1.119</span><br><span class="line">W0601 06:59:18.494436  1 server_others.go:598] Unknown proxy mode <span class="string">&quot;&quot;</span>, assuming iptables proxy</span><br><span class="line">I0601 06:59:18.617259  1 server_others.go:206] kube-proxy running <span class="keyword">in</span> dual-stack mode, IPv4-primary</span><br><span class="line">I0601 06:59:18.617285  1 server_others.go:212] Using iptables Proxier.</span><br><span class="line">I0601 06:59:18.617295  1 server_others.go:219] creating dualStackProxier <span class="keyword">for</span> iptables.</span><br><span class="line">W0601 06:59:18.617306  1 server_others.go:512] detect-local-mode <span class="built_in">set</span> to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local <span class="keyword">for</span> IPv6</span><br><span class="line">I0601 06:59:18.620918  1 server.go:643] Version: v1.21.1</span><br><span class="line">I0601 06:59:18.623937  1 conntrack.go:100] Set sysctl <span class="string">&#x27;net/netfilter/nf_conntrack_max&#x27;</span> to 131072</span><br><span class="line">I0601 06:59:18.623965  1 conntrack.go:52] Setting nf_conntrack_max to 131072</span><br><span class="line">I0601 06:59:18.624646  1 conntrack.go:83] Setting conntrack hashsize to 32768</span><br><span class="line">I0601 06:59:18.641659  1 conntrack.go:100] Set sysctl <span class="string">&#x27;net/netfilter/nf_conntrack_tcp_timeout_established&#x27;</span> to 86400</span><br><span class="line">I0601 06:59:18.641709  1 conntrack.go:100] Set sysctl <span class="string">&#x27;net/netfilter/nf_conntrack_tcp_timeout_close_wait&#x27;</span> to 3600</span><br><span class="line">I0601 06:59:18.647124  1 config.go:315] Starting service config controller</span><br><span class="line">I0601 06:59:18.648113  1 shared_informer.go:240] Waiting <span class="keyword">for</span> caches to <span class="built_in">sync</span> <span class="keyword">for</span> service config</span><br><span class="line">I0601 06:59:18.648459  1 config.go:224] Starting endpoint slice config controller</span><br></pre></td></tr></table></figure><p>有两幅图很生动，第一幅是从宏观上，第二幅是从微观上 iptable chain 过程<br><img src="/img/misc/3.svg"> </p><p><img src="/img/misc/4.svg"> </p><p>看完第二幅图，以我们自己的实验环境举例子，结果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据 SVC demoapp get KUBE-SVC-EGFVCLHG4JMRSQGG </span></span><br><span class="line">KUBE-SVC-EGFVCLHG4JMRSQGG  tcp  --  0.0.0.0/0    10.245.33.169    /* default/demoapp:80-80 cluster IP */ tcp dpt:80</span><br><span class="line"></span><br><span class="line"><span class="comment"># check KUBE-SVC-EGFVCLHG4JMRSQGG , probability 就是 load balancer</span></span><br><span class="line">iptables -t nat -L KUBE-SVC-EGFVCLHG4JMRSQGG -n</span><br><span class="line">Chain KUBE-SVC-EGFVCLHG4JMRSQGG (2 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">KUBE-SEP-LFNE4UIW5JTX3DLE  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.16666666651</span><br><span class="line">KUBE-SEP-VKI6CD7L7QDWV7PR  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.20000000019</span><br><span class="line">KUBE-SEP-ONGVKLAWWHRT2JYZ  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.25000000000</span><br><span class="line">KUBE-SEP-BWUFDZ7V66HHLROZ  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.33333333349</span><br><span class="line">KUBE-SEP-NQEYALZIWTXZ4WPY  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.50000000000</span><br><span class="line">KUBE-SEP-36MBDHMST2HAATHB  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */</span><br><span class="line"></span><br><span class="line"><span class="comment"># KUBE-SEP-36MBDHMST2HAATHB</span></span><br><span class="line">iptables -t nat -L KUBE-SEP-36MBDHMST2HAATHB  -n</span><br><span class="line">Chain KUBE-SEP-36MBDHMST2HAATHB (1 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.49     0.0.0.0/0     /* default/demoapp:80-80 */</span><br><span class="line">DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0     /* default/demoapp:80-80 */ tcp DNAT [unsupported revision]</span><br></pre></td></tr></table></figure><h2 id="部署-dashboard"><a href="#部署-dashboard" class="headerlink" title="部署 dashboard"></a>部署 dashboard</h2><p>官网： <a href="https://kubernetes.io/zh/docs/tasks/access-application-cluster/web-ui-dashboard/">https://kubernetes.io/zh/docs/tasks/access-application-cluster/web-ui-dashboard/</a><br>github： <a href="https://github.com/kubernetes/dashboard">https://github.com/kubernetes/dashboard</a><br>Dashboard 是基于网页的 Kubernetes 用户界面。 你可以使用 Dashboard 将容器应用部署到 Kubernetes 集群中，也可以对容器应用排错，还能管理集群资源。 你可以使用 Dashboard 获取运行在集群中的应用的概览信息，也可以创建或者修改 Kubernetes 资源 （如 Deployment，Job，DaemonSet 等等）。 例如，你可以对 Deployment 实现弹性伸缩、发起滚动升级、重启 Pod 或者使用向导创建新的应用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To deploy Dashboard, execute following command:</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml</span><br><span class="line"></span><br><span class="line">namespace/kubernetes-dashboard created</span><br><span class="line">serviceaccount/kubernetes-dashboard created</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line">secret/kubernetes-dashboard-certs created</span><br><span class="line">secret/kubernetes-dashboard-csrf created</span><br><span class="line">secret/kubernetes-dashboard-key-holder created</span><br><span class="line">configmap/kubernetes-dashboard-settings created</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">service/dashboard-metrics-scraper created</span><br><span class="line">deployment.apps/dashboard-metrics-scraper created</span><br><span class="line"></span><br><span class="line"><span class="comment"># Creating a Service Account</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | kubectl apply -f -</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ServiceAccount</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: admin-user</span></span><br><span class="line"><span class="string">  namespace: kubernetes-dashboard</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Creating a ClusterRoleBinding</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | kubectl apply -f -</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: ClusterRoleBinding</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: admin-user</span></span><br><span class="line"><span class="string">roleRef:</span></span><br><span class="line"><span class="string">  apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">  kind: ClusterRole</span></span><br><span class="line"><span class="string">  name: cluster-admin</span></span><br><span class="line"><span class="string">subjects:</span></span><br><span class="line"><span class="string">- kind: ServiceAccount</span></span><br><span class="line"><span class="string">  name: admin-user</span></span><br><span class="line"><span class="string">  namespace: kubernetes-dashboard</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Getting a Bearer Token</span></span><br><span class="line">kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath=<span class="string">&quot;&#123;.secrets[0].name&#125;&quot;</span>) -o go-template=<span class="string">&quot;&#123;&#123;.data.token | base64decode&#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># token 应该是很长的一串字符，类似</span></span><br><span class="line">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><h3 id="命令行代理"><a href="#命令行代理" class="headerlink" title="命令行代理"></a>命令行代理</h3><p>还得使用代理才能访问到 Dashboard 的服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl proxy </span><br><span class="line">Starting to serve on 127.0.0.1:8001</span><br></pre></td></tr></table></figure><p>kubectl 会使得 Dashboard 可以通过 <a href="http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/">http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</a> 访问</p><p>打开 master 虚拟机桌面，用 Firefox 浏览器输入网址 <code>http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</code>  并输入上面得到的 Bearer Token 登录<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210513203320.png"></p><p>成功登录以后，就可以看到整个集群的情况和做一些相关的操作了<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210513203325.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210513203445.png"></p><h3 id="nginx-proxy"><a href="#nginx-proxy" class="headerlink" title="nginx proxy"></a>nginx proxy</h3><p>因为 Dashboard 监听在 127.0.0.1:8001，没有暴露服务给 public，这里我们可以用 Nginx 反向代理师兄</p><ul><li>首先安装 Nginx<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我已经关闭了防火墙的</span></span><br></pre></td></tr></table></figure></li><li>设置代理转发，配置文件如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/sites-enabled/k8s-dashboard.conf</span><br><span class="line"></span><br><span class="line">upstream k8s-dashboard &#123;</span><br><span class="line">    server 127.0.0.1:8001;</span><br><span class="line">    keepalive 15;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 192.168.1.119:8080;</span><br><span class="line">    server_name 192.168.1.119;</span><br><span class="line">    access_log /var/log/nginx/k8s-dashboard.access.log;</span><br><span class="line">    error_log /var/log/nginx/k8s-dashboard.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    </span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_buffer_size 64k;</span><br><span class="line">        proxy_buffers   32 32k;</span><br><span class="line">        proxy_busy_buffers_size 128k;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP       <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header Connection <span class="string">&quot;Keep-Alive&quot;</span>;</span><br><span class="line">        proxy_set_header Proxy-Connection <span class="string">&quot;Keep-Alive&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        proxy_pass    http://k8s-dashboard;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl start nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记得删除 default 的 80 服务，以免和其他服务冲突.</span></span><br><span class="line"><span class="built_in">rm</span> -f /etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure></li></ul><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><h2 id="虚拟机双网卡"><a href="#虚拟机双网卡" class="headerlink" title="虚拟机双网卡"></a>虚拟机双网卡</h2><p>如果虚拟机是双网卡，一般默认的是 NAT 那一张，桥接的在第二张。在我本次实验中，当安装完 flannel 网络后，却发现有错误。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果部署出现问题可通过如下命令查看日志</span></span><br><span class="line">kubectl logs kube-flannel-ds-6xxs5 --namespace=kube-system</span><br><span class="line">kubectl describe pod kube-flannel-ds-6xxs5 --namespace=kube-system</span><br></pre></td></tr></table></figure><p>日志的结果显示，用了 NAT 那一张网卡，导致和最开始设置的 <code>apiserver-advertise-address=192.168.1.119</code> 无法连接，启动失败了。<br>临时修复的办法就是，禁用 NAT 网卡，永久修复的办法就是关机后，移除 NAT 网卡(网络适配器)</p><h2 id="Flannel网络"><a href="#Flannel网络" class="headerlink" title="Flannel网络"></a>Flannel网络</h2><p>通常，仅Flannel一类的网络插件需要手动指定该地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--service-cidr=10.245.0.0/16</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地虚拟机环境搭建</title>
      <link href="/post/vm/"/>
      <url>/post/vm/</url>
      
        <content type="html"><![CDATA[<p>分享自己在家搭建 Linux 虚拟机的经验。</p><span id="more"></span><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>在开始搭设虚拟机前，要求实验者掌握一些基础的知识。</p><ul><li><a href="https://www.runoob.com/w3cnote/summary-of-network.html">计算机网络基础知识总结： IP 地址， 路由器知识，交换机知识，NAT协议，DHCP协议</a> </li><li><a href="https://www.runoob.com/linux/linux-intro.html">Linux 基础知识</a></li><li><a href="https://wangdoc.com/ssh/">SSH 教程</a> </li><li><a href="https://zhuanlan.zhihu.com/p/87447426">虚拟机三种网络模式</a></li></ul><p>遇到问题会 Google， 百度一下的能力也是很重要的，学会抓住关键词搜索。</p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>本文分享在家用环境搭建 Linux 虚拟机环境的过程，并且介绍几个虚拟化软件的用法。适合小白入门<br>Linux 内核的常用操作系统有： </p><ul><li>Ubuntu <a href="https://ubuntu.com/">https://ubuntu.com/</a></li><li>CentOS <a href="https://www.centos.org/">https://www.centos.org/</a></li></ul><p>新手玩家，强烈推荐 Ubuntu 桌面版，有 UI 界面，上手难度没有那么的大。 <a href="https://ubuntu.com/desktop">桌面版下载地址</a></p><h1 id="准备过程"><a href="#准备过程" class="headerlink" title="准备过程"></a>准备过程</h1><p>不管你自己的电脑是什么操作， 首先需要你下载官方镜像到自己的电脑上。<br>访问 <a href="https://ubuntu.com/download/desktop">https://ubuntu.com/download/desktop</a> 下载镜像， 文件名为 ubuntu-20.04.2.0-desktop-amd64.iso</p><h1 id="按操作系统"><a href="#按操作系统" class="headerlink" title="按操作系统"></a>按操作系统</h1><p>日常我们家用的电脑一般就是 Windows 系统或者 macOS 苹果系统。请根据自己电脑的系统，下载相迎的虚拟化软件。</p><ul><li><a href="https://www.vmware.com/asean/products/workstation-pro.html">VMware Workstation</a> 适合 Windows，适合新人，推荐</li><li><a href="https://www.vmware.com/asean/products/fusion/fusion-evaluation.html">VMware Fusion</a> 适合 mac</li><li><a href="https://www.virtualbox.org/">VirtualBox</a> 适合 mac</li></ul><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>Windows 系统下面，推荐虚拟化软件 VMware Workstation ， <a href="https://www.vmware.com/asean/products/workstation-pro.html">官网地址</a><br>安装的过程中，需要输入激活码， VMware Workstation <a href="https://www.gopojie.net/2349.html">激活码网上随便搜索一下就可以用了</a></p><p><img src="/img/vm/1.jpg"> </p><p>在安装虚拟机之前，我们先看一下 VMware 的网络设置，打开虚拟网络编辑器<br><img src="/img/vm/11.jpg"><br><img src="/img/vm/12.jpg"><br>这里将桥接模式的网络，桥接到自己电脑的网卡，我这里是台式机，其网卡是 Intel(R) Ethernet Connection(7) I219-V ， 这里每个人的情况不同，笔记本电脑的话是 wireless 无线网卡。<br><img src="/img/vm/13.jpg"><br>同时，我们还需要注意到 VMware 创建了三种网络，他们各自的网络地址。 需要注意的是桥接模式的地址，是根据你自己的电脑所在网络的路由器设置的，一般家用路由器都是 <code>192.168.1.0/24</code> 如果是校园 WiFi， 那估计网络规模会大很多。在 windows 查看自己的网络地址， 打开命令提示符 CMD，运行 <code>ipconfig</code><br><img src="/img/vm/17.jpg"></p><p>如上图所示，这里我自己的家用台式机，网络地址就是 IPv4: 192.168.1.77</p><table><thead><tr><th>name</th><th align="right">mode</th><th align="center">CIDR</th></tr></thead><tbody><tr><td>VMnet0</td><td align="right">桥接</td><td align="center">192.168.1.0&#x2F;24</td></tr><tr><td>VMnet1</td><td align="right">仅主机</td><td align="center">192.168.230.0&#x2F;24</td></tr><tr><td>VMnet8</td><td align="right">NAT</td><td align="center">192.168.64.0&#x2F;24</td></tr></tbody></table><p>当 VMware Workstation 安装好了之后，我们就可以用 VMware Workstation 提供的快速安装功能，安装 Ubuntu 桌面版虚拟机。<br><img src="/img/vm/2.jpg"> </p><p>我这里是 Ubuntu 18， 如果你下载的是最新版本 ubuntu-20.04.2.0-desktop-amd64.iso ， 选择的镜像不同<br><img src="/img/vm/3.jpg"> </p><p>这里设置好虚拟机的名称，还有登录的账号和密码<br><img src="/img/vm/4.jpg"><br><img src="/img/vm/5.jpg"><br><img src="/img/vm/6.jpg"><br><img src="/img/vm/7.jpg"> </p><p>输入你自己设置的账号密码，登录 Ubuntu<br><img src="/img/vm/8.jpg"></p><p>这里可以安装VMware tools， 插件是为了更好使用，比如窗口的缩放，还有拖拽文件进入虚拟机等<br><img src="/img/vm/9.jpg"></p><p>检查一下 Ubuntu 虚拟机的 IP 地址，因为我的虚拟机是双网卡： ens33 是 NAT 网络的地址， ens38 是桥接网络的地址<br><img src="/img/vm/10.jpg"><br>到此，你已经成功安装了虚拟机，在你探索之前，可以看一看<a href="#%E5%AD%A6%E4%BC%9A%E5%BF%AB%E7%85%A7-snapshot">快照</a> 部分，学会备份，随便折腾</p><p>新手可以跳过。如果你需要双网卡，可以再额外添加一张网卡，我因为第一次初始化设置的网卡是 NAT， 第二次添加的桥接网卡，双网卡的机器一般是拿来当跳板机（堡垒机用）可以看看这篇介绍 <a href="https://outmanzzq.github.io/2018/11/20/ssh-connect-through-springboard/">ssh 通过跳板机直连跳板机内网服务器</a><br><img src="/img/vm/14.jpg"><br><img src="/img/vm/15.jpg"></p><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><p>苹果系统下面，我尝试了 2 种虚拟化软件</p><ul><li><p><a href="https://www.virtualbox.org/">VirtualBox</a> 免费的，偶尔程序会崩溃，下图是如何新建一个 NAT 网络<br><img src="/img/vm/27.jpg"><br><img src="/img/vm/28.jpg"><br><img src="/img/vm/29.jpg"><br><img src="/img/vm/30.jpg">  </p></li><li><p><a href="https://www.vmware.com/asean/products/fusion/fusion-evaluation.html">VMware Fusion</a> 付费好用。 必看<a href="https://mp.weixin.qq.com/s/o4lXJzb2gXI2X2wIT4_zpw">Mac上安装VMware Fusion 12虚拟机</a><br><img src="/img/vm/18.jpg"></p></li></ul><p><a href="https://pupuweb.com/solved-how-to-configure-additional-nat-in-vmware-fusion/">Configure Additional NAT in VMware Fusion</a></p><p>VirtualBox 开源免费的，但桌面窗口的支持没有 VMware Fusion 做的好。VMware Fusion 可以在淘宝很便宜的买到序列码， 我踩坑了：好像淘宝的序列码不支持自建 NAT 网络（因为是非商业版本) non-commercial use only，很坑。 还不如这个<a href="https://mp.weixin.qq.com/s/o4lXJzb2gXI2X2wIT4_zpw">公众号里面分享的三个注册码</a><br><img src="/img/vm/31.png">  </p><h1 id="按网络环境"><a href="#按网络环境" class="headerlink" title="按网络环境"></a>按网络环境</h1><p>虚拟机三种网络模式, <a href="https://zhuanlan.zhihu.com/p/87447426">这篇文章已经讲得比较详细</a>。<br>在家用练习环境中，如果选择自己的网络环境。 以下是我的一些建议</p><ul><li>桥接模式 Bridged：1. 要安装对外提供的服务，自己的实体机想访问虚拟机的服务。2. 只安装一台虚拟机， 新手推荐，快速省事</li><li>网络地址转换模式 NAT：1. 自己的电脑安装几个虚拟机，搭建集群。 2. 虚拟机没有对外开放的服务，不需要端口转发</li></ul><h2 id="桥接模式-Bridged"><a href="#桥接模式-Bridged" class="headerlink" title="桥接模式 Bridged"></a>桥接模式 Bridged</h2><p><img src="/img/vm/25.png"> </p><h2 id="网络地址转换模式-NAT"><a href="#网络地址转换模式-NAT" class="headerlink" title="网络地址转换模式 NAT"></a>网络地址转换模式 NAT</h2><p><img src="/img/vm/24.png"> </p><p>这里我们用 mtr 命令测试一下连通性，并且看沿途经过的节点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu20:~<span class="comment"># ip -4 a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    inet 192.168.64.5/24 brd 192.168.64.255 scope global ens33</span><br><span class="line"></span><br><span class="line"><span class="comment"># -I / --interface 网卡</span></span><br><span class="line"><span class="comment"># -n 不进行域名解析，显示 IP</span></span><br><span class="line"><span class="comment"># -c 定义数据包数量</span></span><br><span class="line"><span class="comment"># -r 生成报告</span></span><br><span class="line"><span class="comment"># --tcp / -T 或者 --udp / -u 或者 -S / --sctp, 默认是 icmp</span></span><br><span class="line"><span class="comment"># --port / -P</span></span><br><span class="line"></span><br><span class="line">root@ubuntu20:~<span class="comment"># mtr -n -c 3 -r --tcp --port 80  192.168.1.108</span></span><br><span class="line">Start: 2021-05-25T11:33:27+0000</span><br><span class="line">HOST: ubuntu20                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.2               0.0%     3    0.2   0.4   0.2   0.7   0.2</span><br><span class="line">  2.|-- 192.168.1.108              0.0%     3    1.0   0.9   0.8   1.0   0.1</span><br><span class="line"></span><br><span class="line">root@ubuntu20:~<span class="comment"># mtr -n -c 3 -r  192.168.1.125 </span></span><br><span class="line">Start: 2021-05-25T11:38:34+0000</span><br><span class="line">HOST: ubuntu20                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.2               0.0%     3    0.3   0.4   0.3   0.5   0.2</span><br><span class="line">  2.|-- 192.168.1.125              0.0%     3  107.3  66.8   4.6 107.3  54.7</span><br></pre></td></tr></table></figure><h1 id="必备技能"><a href="#必备技能" class="headerlink" title="必备技能"></a>必备技能</h1><h2 id="学会快照-snapshot"><a href="#学会快照-snapshot" class="headerlink" title="学会快照 snapshot"></a>学会快照 snapshot</h2><p>快照 <a href="https://baike.baidu.com/item/VMware%E5%BF%AB%E7%85%A7">snapshot</a> 就是虚拟机的某一时刻的状态备份。当我们在完成一个重大改变的前后，我们都应该快照。 比如在安装一个软件之前，如果我们不确定担心安装后搞崩了环境，那么我们可以快照一下。大吉大利<br><img src="/img/vm/16.jpg"></p><h1 id="ansible-关机"><a href="#ansible-关机" class="headerlink" title="ansible 关机"></a>ansible 关机</h1><p>因为一共有 6 台虚拟机了，手动关机还有有点 laborious，所以用 ansible 批量关机方便。<br>如果不知道的 ansible 的小白同学，可以先看看 <a href="https://www.cnblogs.com/f-ck-need-u/p/7553186.html">Ansible系列</a> <a href="https://wsgzao.github.io/post/ansible/">奥哥的 Ansible 学习路径</a></p><p>SSH config 别名，方便记忆，快速登录。 还有跳板机的设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">feiyang@MAC ~ % <span class="built_in">cat</span> .ssh/config </span><br><span class="line"></span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">CheckHostIP no</span><br><span class="line"></span><br><span class="line">Host grab</span><br><span class="line">     HostName 192.168.1.119</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host feiyang</span><br><span class="line">     HostName 192.168.1.120</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host jingye</span><br><span class="line">     HostName 192.168.1.121</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host win1</span><br><span class="line">     HostName 192.168.1.108</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host win2</span><br><span class="line">     HostName 192.168.64.4</span><br><span class="line">     User jy576</span><br><span class="line">     ProxyJump win1</span><br><span class="line"></span><br><span class="line">Host win3</span><br><span class="line">     HostName 192.168.64.5</span><br><span class="line">     User feiyang</span><br><span class="line">     ProxyJump win1</span><br></pre></td></tr></table></figure><ul><li><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/sequence_lookup.html">stride 好像只能递增，不能递减</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#ignoring-failed-commands">ignore_errors</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html">如何写 hosts 文件</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_strategies.html#setting-the-batch-size-with-serial">serial 控制批次</a></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file name: hosts</span></span><br><span class="line"></span><br><span class="line">[<span class="string">all</span>]</span><br><span class="line"></span><br><span class="line">[<span class="string">ubuntu</span>]</span><br><span class="line"><span class="string">feiyang</span></span><br><span class="line"><span class="string">grab</span></span><br><span class="line"><span class="string">jingye</span></span><br><span class="line"></span><br><span class="line">[<span class="string">win</span>]</span><br><span class="line"><span class="string">win3</span></span><br><span class="line"><span class="string">win2</span></span><br><span class="line"><span class="string">win1</span> <span class="comment"># win1 是跳板机，必须最后才关机</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file name: shutdown.yml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">serial:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="number">5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">1</span>        <span class="comment"># win1 是跳板机，必须最后才关机</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">shutdown</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/sbin/shutdown</span> <span class="string">-h</span> <span class="string">now</span></span><br><span class="line">    <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">ignore_unreachable:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>每次如果觉得输入 ansible-playbook 命令还是很麻烦，那就用 alias ，真是懒人促进发展，哈哈哈</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> feiyang-shutdown=<span class="string">&#x27;ansible-playbook -i /Users/yang.fei/ansible/hosts /Users/yang.fei/ansible/shutdown.yml&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="打通任督二脉"><a href="#打通任督二脉" class="headerlink" title="打通任督二脉"></a>打通任督二脉</h1><p>从上面的家庭网络架构图得知，我们有两个网络：</p><ul><li>192.168.1.0&#x2F;24   家庭路由器网络</li><li>192.168.64.0&#x2F;24  WIN10 台式机上，Vmware 创建的虚拟 NAT 网络</li></ul><p>接下来，我们要做的就是，打通两个网络。Ubuntu18.04 双网卡实现转发，相当于扮演了一个路由器的角色。先来看一眼架构图，今天的主角就是身负<code>双武魂</code>（斗罗大陆看多了，哈哈）双网卡的 <code>ubuntu18-108</code> , 它的两个网卡 Network interface controller 上的 IP 分别是 <code>ens33</code> 网卡是 <code>192.168.64.3</code> and <code>ens38</code> 网卡是 <code>192.168.1.108</code> 网卡名称和 IP 地址非常重要，请牢记，不要混淆了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/home/feiyang<span class="comment"># ip -4 a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    inet 192.168.64.3/24 brd 192.168.64.255 scope global ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: ens38: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    inet 192.168.1.108/24 brd 192.168.1.255 scope global noprefixroute ens38</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p><img src="/img/vm/32.png"> </p><h2 id="NAT-Server"><a href="#NAT-Server" class="headerlink" title="NAT Server"></a>NAT Server</h2><p>其实我的另外一篇 blog 有介绍 <a href="https://feiyang233.club/post/network/#%E8%AE%BE%E7%BD%AE-NAT-server">NAT server 设置</a>，但这次实验，我们采用的是临时命令行操作，因此有一点不同。在临时命令行后，我们也补充了持久化的文档链接，亲测有效<br>参考了：</p><ul><li><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/4/html/security_guide/s1-firewall-ipt-fwd">FORWARD AND NAT RULES</a></li><li><a href="https://www.karlrupp.net/en/computer/nat_tutorial">NAT - Network Address Translation</a></li><li><a href="https://www.cnblogs.com/hf8051/p/4530906.html">linux – 添加、修改、删除路由</a></li><li><a href="https://support.justaddpower.com/kb/article/320-adding-a-static-route-to-macos/">Adding a Static Route to macOS</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/sys/net/ipv4/ip_forward</span><br><span class="line">1</span><br><span class="line"><span class="comment"># 如果此处不是 1 ，那就需要手动开启</span></span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward=1 <span class="comment"># 添加此行，开启转发功能</span></span><br><span class="line"></span><br><span class="line">sysctl -p    <span class="comment"># 执行生效</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># iptable 允许转发 </span></span><br><span class="line"><span class="comment"># 允许 ens33: 192.168.64.3/24 到 -&gt; ens38: 192.168.1.108/24</span></span><br><span class="line">iptables -A FORWARD -i ens33 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -o ens38 -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.64.0/24 -d 192.168.1.0/24 -o ens38 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许 ens38: 192.168.1.108/24 到 -&gt; ens33: 192.168.64.3/24</span></span><br><span class="line">iptables -A FORWARD -i ens38 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -o ens33 -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -d 192.168.64.0/24 -o ens33 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"><span class="comment"># check nat table POSTROUTING chain</span></span><br><span class="line">iptables -t  nat  -L POSTROUTING </span><br><span class="line">Chain POSTROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">MASQUERADE  all  --  172.17.0.0/16        anywhere            </span><br><span class="line">MASQUERADE  all  --  172.18.0.0/16        anywhere            </span><br><span class="line">MASQUERADE  all  --  192.168.64.0/24      192.168.1.0/24      </span><br><span class="line">MASQUERADE  all  --  192.168.1.0/24       192.168.64.0/24</span><br></pre></td></tr></table></figure><ul><li><a href="https://linuxconfig.org/how-to-make-iptables-rules-persistent-after-reboot-on-linux">Ubuntu 持久化 iptable</a></li></ul><h2 id="client-server"><a href="#client-server" class="headerlink" title="client server"></a>client server</h2><p>其他的机器，只需要设置一下路由，添加一条路由规则即可。</p><h3 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h3><p>macbook pro 苹果电脑的 IP 是 <code>192.168.1.125</code> 添加一条路由, 指定双网卡机器 192.168.1.108 为 gateway</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo route -n add -net 192.168.64.0/24  192.168.1.108</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.centralit-helpdesk.co.uk/index.php?pg=kb.page&id=258">MacOS add a permanent static route</a></li></ul><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>centos IP 是 192.168.64.4 ， ubuntu20 IP 是 192.168.64.5 。 它们两台都需要设置，添加一条路由, 指定双网卡机器 192.168.64.3 为 gateway</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.64.3 dev ens33</span><br></pre></td></tr></table></figure><ol><li>(CentOS7的路由配置持久化)[<a href="https://blog.csdn.net/beeworkshop/article/details/102952759]">https://blog.csdn.net/beeworkshop/article/details/102952759]</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/route-ens33</span><br><span class="line">192.168.1.0/24 via 192.168.64.3 dev ens33</span><br></pre></td></tr></table></figure></li><li><a href="https://linuxconfig.org/how-to-add-static-route-with-netplan-on-ubuntu-20-04-focal-fossa-linux">add static route with netplan on Ubuntu 20.04</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/netplan/00-installer-config.yaml </span><br><span class="line"><span class="comment"># This is the network config written by &#x27;subiquity&#x27;</span></span><br><span class="line">network:</span><br><span class="line">  ethernets: </span><br><span class="line">    ens33:</span><br><span class="line">      addresses: [192.168.64.5/24]</span><br><span class="line">      optional: <span class="literal">true</span></span><br><span class="line">      dhcp4: no</span><br><span class="line">      gateway4: 192.168.64.2</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [1.1.1.1,8.8.8.8]</span><br><span class="line">      routes:</span><br><span class="line">      - to: 192.168.1.0/24</span><br><span class="line">        via: 192.168.64.3</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br></pre></td></tr></table></figure></li></ol><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ol><li><p>mac -&gt; ubuntu20 ,  ubuntu20 开 2 个 terminal， 一个启动 server， 一个 tcpdump 抓包分析，mac telnet 测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># terminal1: start simple http server</span></span><br><span class="line">python3 -m http.server 8000    </span><br><span class="line"></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># terminal2: tcpdump listen port 8000</span></span><br><span class="line">tcpdump -i any port 8000 -nnn</span><br></pre></td></tr></table></figure><p>然后就是 mac telnet 192.168.64.5 8000</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一： 用 Telnet 测试</span></span><br><span class="line">telnet 192.168.64.5 8000</span><br><span class="line"></span><br><span class="line">Trying 192.168.64.5...</span><br><span class="line">Connected to 192.168.64.5.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">^]</span><br><span class="line">telnet&gt; q</span><br><span class="line">Connection closed.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二： 用 mtr 测试</span></span><br><span class="line">➜  ~ sudo mtr -n -c 3 -r --tcp --port 8000  192.168.64.5</span><br><span class="line">Password:</span><br><span class="line">Start: 2021-06-20T20:07:35+0800</span><br><span class="line">HOST: FEIYANG-MAC       Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.1.108      0.0%     3    6.2  11.2   3.3  24.3  11.4</span><br><span class="line">  2.|-- 192.168.64.5       0.0%     3   10.9   7.7   2.6  10.9   4.5</span><br></pre></td></tr></table></figure><p>检查 ubuntu20 tcpdump 的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i any port 8000 -nnn</span><br><span class="line"></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked v1), capture size 262144 bytes</span><br><span class="line">10:49:42.301949 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [S], <span class="built_in">seq</span> 2641736153, win 65535, options [mss 1460,nop,wscale 6,nop,nop,TS val 283128122 ecr 0,sackOK,eol], length 0</span><br><span class="line">10:49:42.301991 IP 192.168.64.5.8000 &gt; 192.168.64.3.55989: Flags [S.], <span class="built_in">seq</span> 1529903079, ack 2641736154, win 65160, options [mss 1460,sackOK,TS val 3145755328 ecr 283128122,nop,wscale 7], length 0</span><br><span class="line">10:49:42.303721 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [.], ack 1, win 2058, options [nop,nop,TS val 283128124 ecr 3145755328], length 0</span><br><span class="line">10:49:46.519038 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [F.], <span class="built_in">seq</span> 1, ack 1, win 2058, options [nop,nop,TS val 283132312 ecr 3145755328], length 0</span><br><span class="line">10:49:46.519205 IP 192.168.64.5.8000 &gt; 192.168.64.3.55989: Flags [F.], <span class="built_in">seq</span> 1, ack 2, win 510, options [nop,nop,TS val 3145759545 ecr 283132312], length 0</span><br><span class="line">10:49:46.521868 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [.], ack 2, win 2058, options [nop,nop,TS val 283132315 ecr 3145759545], length 0</span><br></pre></td></tr></table></figure><p>整个过程是<br><code>192.168.1.125</code> -&gt; <code>192.168.1.108</code> -&gt;  <code>192.168.64.3</code> -&gt; <code>192.168.64.5</code></p></li><li><p>centos7 -&gt; mac ,  mac 开 2 个 terminal， 一个启动 server， 一个 tcpdump 抓包分析，centos7 telnet 测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># terminal1: start simple http server</span></span><br><span class="line">python3 -m http.server 8000    </span><br><span class="line"></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># terminal2: tcpdump listen port 8000</span></span><br><span class="line">tcpdump -i any port 8000 -nnn</span><br></pre></td></tr></table></figure><p>然后就是 centos telnet 192.168.1.125 8000</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一： 用 Telnet 测试</span></span><br><span class="line">telnet 192.168.1.125 8000</span><br><span class="line"></span><br><span class="line">Trying 192.168.1.125...</span><br><span class="line">Connected to 192.168.1.125.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">^]</span><br><span class="line"></span><br><span class="line">telnet&gt; q</span><br><span class="line">Connection closed.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二： 用 mtr 测试</span></span><br><span class="line">sudo mtr -n -c 3 -r --tcp --port 8000 192.168.1.125</span><br><span class="line"></span><br><span class="line">Start: Sun Jun 20 08:16:37 2021</span><br><span class="line">HOST: centos7                     Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.3               0.0%     3    0.4   0.4   0.4   0.5   0.0</span><br><span class="line">  2.|-- 192.168.1.125              0.0%     3  1002. 902.3 201.3 1502. 656.6</span><br></pre></td></tr></table></figure><p>检查 mac tcpdump 的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo tcpdump -i any port 8000 -nnn</span><br><span class="line">Password:</span><br><span class="line">tcpdump: data <span class="built_in">link</span> <span class="built_in">type</span> PKTAP</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type PKTAP (Apple DLT_PKTAP), capture size 262144 bytes</span><br><span class="line">18:44:00.166899 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [S], <span class="built_in">seq</span> 3298177179, win 29200, options [mss 1460,sackOK,TS val 4138980 ecr 0,nop,wscale 7], length 0</span><br><span class="line">18:44:00.166996 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [S.], <span class="built_in">seq</span> 3788626158, ack 3298177180, win 65535, options [mss 1460,nop,wscale 6,nop,nop,TS val 282788376 ecr 4138980,sackOK,eol], length 0</span><br><span class="line">18:44:00.169945 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [.], ack 1, win 229, options [nop,nop,TS val 4138982 ecr 282788376], length 0</span><br><span class="line">18:44:00.169966 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [.], ack 1, win 2058, options [nop,nop,TS val 282788379 ecr 4138982], length 0</span><br><span class="line">18:44:12.790139 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [F.], <span class="built_in">seq</span> 1, ack 1, win 229, options [nop,nop,TS val 4151601 ecr 282788379], length 0</span><br><span class="line">18:44:12.790165 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [.], ack 2, win 2058, options [nop,nop,TS val 282800870 ecr 4151601], length 0</span><br><span class="line">18:44:12.790246 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [F.], <span class="built_in">seq</span> 1, ack 2, win 2058, options [nop,nop,TS val 282800870 ecr 4151601], length 0</span><br><span class="line">18:44:12.792923 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [.], ack 2, win 229, options [nop,nop,TS val 4151606 ecr 282800870], length 0</span><br><span class="line">^C</span><br><span class="line">8 packets captured</span><br><span class="line">2158 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>整个过程是<br><code>192.168.64.4</code> -&gt; <code>192.168.64.3</code> -&gt;  <code>192.168.1.108</code> -&gt; <code>192.168.1.125</code></p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这下，两个网络之间就实现了互通。让我联想到了 <a href="https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html">AWS VPC peering</a> ，又联动上了。 如今 SSH 就不需要跳板机 ProxyJump 了, vault UI 192.168.64.3:8200 也不需要 Nginx 代理了。<br>我们如今只是将 Windows10 VMware 自定义的 NAT 内网和家庭网络连通了起来。 如果家里的其他电脑也创建了 NAT 内网， 那么最终我们可以在家里本地环境，模拟出多个网络，就像 AWS  多个VPC 一样，最终都连通起来。<br><img src="/img/vm/33.png"> </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> tools </tag>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>consul 实践</title>
      <link href="/post/consul/"/>
      <url>/post/consul/</url>
      
        <content type="html"><![CDATA[<p>在本地虚拟机环境搭建 consul cluster 实践。</p><span id="more"></span><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>这三台虚拟机，分别跑在三台笔记本电脑上。这样做的好处是，桥接模式不需要端口映射，在我家的局域网里面尽情的玩耍。</p><table><thead><tr><th>Name</th><th>Operating system</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>ubuntu18-119</td><td>Ubuntu 18.04.5 LTS</td><td>2</td><td>4G</td><td>20G</td><td>192.168.1.119</td></tr><tr><td>ubuntu18-120</td><td>Ubuntu 18.04.5 LTS</td><td>2</td><td>4G</td><td>10G</td><td>192.168.1.120</td></tr><tr><td>ubuntu18-121</td><td>Ubuntu 18.04.5 LTS</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.121</td></tr></tbody></table><p>Ubuntu18 是公司当前线上环境的系统，桌面版有可视化，桌面比服务器版本的命令行方便一点。</p><p>实验环境的搭建，可以参考我的另外一篇博客 <a href="https://feiyang233.club/post/vm/">https://feiyang233.club/post/vm/</a></p><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>参考文档：</p><ul><li><a href="https://computingforgeeks.com/how-to-install-consul-cluster-18-04-lts/">https://computingforgeeks.com/how-to-install-consul-cluster-18-04-lts/</a></li><li><a href="https://learn.hashicorp.com/tutorials/consul/get-started-install">https://learn.hashicorp.com/tutorials/consul/get-started-install</a></li></ul><p>分别在三台虚拟机上安装好 consul service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo apt-add-repository <span class="string">&quot;deb [arch=amd64] https://apt.releases.hashicorp.com <span class="subst">$(lsb_release -cs)</span> main&quot;</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install consul</span><br><span class="line"></span><br><span class="line"><span class="comment">## 验证安装的结果</span></span><br><span class="line">root@ubuntu18-119:/etc/consul.d<span class="comment"># cd </span></span><br><span class="line">root@ubuntu18-119:~<span class="comment"># consul version</span></span><br><span class="line">Consul v1.9.5</span><br><span class="line">Revision 3c1c22679</span><br><span class="line">Protocol 2 spoken by default, understands 2 to 3 (agent will automatically use protocol &gt;2 when speaking to compatible agents)</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>在开始配置文件之前，先要生成一个秘钥。 随便在三台中的任意一台机器运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-121:~<span class="comment"># consul keygen</span></span><br><span class="line">byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w=</span><br><span class="line"></span><br><span class="line"><span class="comment"># 秘钥很重要，不要随便暴露，这里的秘钥是我临时生成的作示范</span></span><br></pre></td></tr></table></figure><h3 id="node-119"><a href="#node-119" class="headerlink" title="node-119"></a>node-119</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">datacenter = <span class="string">&quot;feiyang&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/consul&quot;</span></span><br><span class="line">client_addr = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">bind_addr = <span class="string">&quot;192.168.1.119&quot;</span></span><br><span class="line">ui = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">server = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">bootstrap_expect=<span class="number">3</span></span><br><span class="line">encrypt = <span class="string">&quot;byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w=&quot;</span></span><br><span class="line">retry_join = <span class="punctuation">[</span><span class="string">&quot;192.168.1.119&quot;</span><span class="punctuation">,</span> <span class="string">&quot;192.168.1.120&quot;</span><span class="punctuation">,</span> <span class="string">&quot;192.168.1.121&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="node-120"><a href="#node-120" class="headerlink" title="node-120"></a>node-120</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">datacenter = <span class="string">&quot;feiyang&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/consul&quot;</span></span><br><span class="line">client_addr = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">bind_addr = <span class="string">&quot;192.168.1.120&quot;</span></span><br><span class="line">ui = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">server = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">bootstrap_expect=<span class="number">3</span></span><br><span class="line">encrypt = <span class="string">&quot;byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w=&quot;</span></span><br><span class="line">retry_join = <span class="punctuation">[</span><span class="string">&quot;192.168.1.119&quot;</span><span class="punctuation">,</span> <span class="string">&quot;192.168.1.120&quot;</span><span class="punctuation">,</span> <span class="string">&quot;192.168.1.121&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="node-121"><a href="#node-121" class="headerlink" title="node-121"></a>node-121</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">datacenter = <span class="string">&quot;feiyang&quot;</span></span><br><span class="line">data_dir = <span class="string">&quot;/opt/consul&quot;</span></span><br><span class="line">client_addr = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">bind_addr = <span class="string">&quot;192.168.1.121&quot;</span></span><br><span class="line">ui = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">server = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">bootstrap_expect=<span class="number">3</span></span><br><span class="line">encrypt = <span class="string">&quot;byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w=&quot;</span></span><br><span class="line">retry_join = <span class="punctuation">[</span><span class="string">&quot;192.168.1.119&quot;</span><span class="punctuation">,</span> <span class="string">&quot;192.168.1.120&quot;</span><span class="punctuation">,</span> <span class="string">&quot;192.168.1.121&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>一切配置好以后，我们可以启动服务，并且设置服务开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start consul</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> consul</span><br><span class="line"></span><br><span class="line"><span class="comment">## ---------------------------</span></span><br><span class="line"><span class="comment">## Check cluster members</span></span><br><span class="line">root@ubuntu18-119:~<span class="comment"># consul members</span></span><br><span class="line">Node          Address             Status  Type    Build  Protocol  DC       Segment</span><br><span class="line">ubuntu18-119  192.168.1.119:8301  alive   server  1.9.5  2         feiyang  &lt;all&gt;</span><br><span class="line">ubuntu18-120  192.168.1.120:8301  alive   server  1.9.5  2         feiyang  &lt;all&gt;</span><br><span class="line">ubuntu18-121  192.168.1.121:8301  alive   server  1.9.5  2         feiyang  &lt;all&gt;</span><br></pre></td></tr></table></figure><h2 id="ui"><a href="#ui" class="headerlink" title="ui"></a>ui</h2><p>任意一台节点的 8500 端口加路径 ui  <a href="http://node_ip:8500/ui/">http://node_ip:8500/ui/</a><br>举例： <a href="http://192.168.1.120:8500/ui/">http://192.168.1.120:8500/ui/</a></p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hashicorp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vault 实践</title>
      <link href="/post/vault/"/>
      <url>/post/vault/</url>
      
        <content type="html"><![CDATA[<p>在本地虚拟机环境搭建 vault cluster 实践。</p><span id="more"></span><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>这三台虚拟机，都运行在我的台式机上。</p><table><thead><tr><th>Name</th><th>Operating system</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>node-1</td><td>Ubuntu 18.04.5 LTS</td><td>4</td><td>8G</td><td>50G</td><td>192.168.64.3</td></tr><tr><td>node-2</td><td>CentOS 7.8.2003</td><td>2</td><td>2G</td><td>20G</td><td>192.168.64.4</td></tr><tr><td>node-3</td><td>Ubuntu 20.04.1 LTS</td><td>2</td><td>4G</td><td>10G</td><td>192.168.64.5</td></tr></tbody></table><p>实验环境的搭建，可以参考我的另外一篇博客 <a href="https://feiyang233.club/post/vm/">https://feiyang233.club/post/vm/</a></p><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>参考文档：</p><ul><li><a href="https://computingforgeeks.com/install-and-configure-vault-server-linux/">https://computingforgeeks.com/install-and-configure-vault-server-linux/</a></li><li><a href="https://learn.hashicorp.com/tutorials/vault/getting-started-install?in=vault/getting-started">https://learn.hashicorp.com/tutorials/vault/getting-started-install?in=vault/getting-started</a></li><li><a href="https://learn.hashicorp.com/tutorials/vault/raft-storage">https://learn.hashicorp.com/tutorials/vault/raft-storage</a></li></ul><p>分别在三台虚拟机上安装好 vault service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ubuntu OS</span></span><br><span class="line">curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo apt-add-repository <span class="string">&quot;deb [arch=amd64] https://apt.releases.hashicorp.com <span class="subst">$(lsb_release -cs)</span> main&quot;</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install vault</span><br><span class="line"></span><br><span class="line">root@ubuntu20:/etc/vault.d<span class="comment"># vault --version</span></span><br><span class="line">Vault v1.6.2 (be65a227ef2e80f8588b3b13584b5c0d9238c1d7)</span><br></pre></td></tr></table></figure><p>就下来就是配置 config, 如果没有创建存储的文件夹，还需要创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /vault/data</span><br><span class="line"><span class="built_in">chown</span> -R vault:vault /vault</span><br></pre></td></tr></table></figure><p>配置文件如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node-1</span></span><br><span class="line">root@ubuntu18<span class="number">-108</span><span class="punctuation">:</span>/etc/vault.d# cat /etc/vault.d/vault.hcl</span><br><span class="line">storage <span class="string">&quot;raft&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  path    = <span class="string">&quot;./vault/data&quot;</span></span><br><span class="line">  node_id = <span class="string">&quot;node1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">listener <span class="string">&quot;tcp&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  address     = <span class="string">&quot;192.168.64.3:8200&quot;</span></span><br><span class="line">  cluster_address = <span class="string">&quot;192.168.64.3:8201&quot;</span></span><br><span class="line">  tls_disable = <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">disable_mlock = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">api_addr = <span class="string">&quot;http://192.168.64.3:8200&quot;</span></span><br><span class="line">cluster_addr = <span class="string">&quot;http://192.168.64.3:8201&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//----------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//node2</span></span><br><span class="line"><span class="punctuation">[</span>root@centos7 vault.d<span class="punctuation">]</span># cat /etc/vault.d/vault.hcl</span><br><span class="line">storage <span class="string">&quot;raft&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  path    = <span class="string">&quot;./vault/data&quot;</span></span><br><span class="line">  node_id = <span class="string">&quot;node2&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">listener <span class="string">&quot;tcp&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  address     = <span class="string">&quot;192.168.64.4:8200&quot;</span></span><br><span class="line">  tls_disable = <span class="string">&quot;true&quot;</span></span><br><span class="line">  cluster_address = <span class="string">&quot;192.168.64.4:8201&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">disable_mlock = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">api_addr = <span class="string">&quot;http://192.168.64.4:8200&quot;</span></span><br><span class="line">cluster_addr = <span class="string">&quot;http://192.168.64.4:8201&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ----------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// node-3</span></span><br><span class="line">root@ubuntu20<span class="punctuation">:</span>/etc/vault.d# cat /etc/vault.d/vault.hcl</span><br><span class="line">storage <span class="string">&quot;raft&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  path    = <span class="string">&quot;./vault/data&quot;</span></span><br><span class="line">  node_id = <span class="string">&quot;node3&quot;</span></span><br><span class="line"></span><br><span class="line">  retry_join <span class="punctuation">&#123;</span></span><br><span class="line">    leader_api_addr = <span class="string">&quot;http://192.168.64.3:8200&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">  retry_join <span class="punctuation">&#123;</span></span><br><span class="line">    leader_api_addr = <span class="string">&quot;http://192.168.64.4:8200&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">listener <span class="string">&quot;tcp&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  address     = <span class="string">&quot;192.168.64.5:8200&quot;</span></span><br><span class="line">  cluster_address = <span class="string">&quot;192.168.64.5:8201&quot;</span></span><br><span class="line">  tls_disable = <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">api_addr = <span class="string">&quot;http://192.168.64.5:8200&quot;</span></span><br><span class="line">cluster_addr = <span class="string">&quot;http://192.168.64.5:8201&quot;</span></span><br></pre></td></tr></table></figure><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><p>配置完成后就是启动 vault， 并且初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">systemctl  start vault</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选一台作为 master 开始初始化，这里我选的 node-1</span></span><br><span class="line"><span class="comment"># export 设置 API 地址非常重要</span></span><br><span class="line"><span class="built_in">export</span> VAULT_ADDR=<span class="string">&#x27;http://192.168.64.3:8200&#x27;</span></span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator init</span></span><br><span class="line">Unseal Key 1: key1</span><br><span class="line">Unseal Key 2: key2</span><br><span class="line">Unseal Key 3: key3</span><br><span class="line">Unseal Key 4: key4</span><br><span class="line">Unseal Key 5: key5</span><br><span class="line"></span><br><span class="line">Initial Root Token: token</span><br><span class="line"></span><br><span class="line">Vault initialized with 5 key shares and a key threshold of 3. Please securely</span><br><span class="line">distribute the key shares printed above. When the Vault is re-sealed,</span><br><span class="line">restarted, or stopped, you must supply at least 3 of these keys to unseal it</span><br><span class="line">before it can start servicing requests.</span><br><span class="line"></span><br><span class="line">Vault does not store the generated master key. Without at least 3 key to</span><br><span class="line">reconstruct the master key, Vault will remain permanently sealed!</span><br><span class="line"></span><br><span class="line">It is possible to generate new unseal keys, provided you have a quorum of</span><br><span class="line">existing unseal keys shares. See <span class="string">&quot;vault operator rekey&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="comment"># 以上的初始化产生的 key 和 token 非常重要，一定要妥善安全保管</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你嫌测试环境 太多 key 麻烦，可以修改参数，产生一个 key</span></span><br><span class="line">vault operator init -key-shares=1 -key-threshold=1</span><br><span class="line"></span><br><span class="line">  -key-shares=&lt;int&gt;</span><br><span class="line">      Number of key shares to <span class="built_in">split</span> the generated master key into. This is</span><br><span class="line">      the number of <span class="string">&quot;unseal keys&quot;</span> to generate. This is aliased as <span class="string">&quot;-n&quot;</span>. The</span><br><span class="line">      default is 5.</span><br><span class="line"></span><br><span class="line">  -key-threshold=&lt;int&gt;</span><br><span class="line">      Number of key shares required to reconstruct the master key. This must</span><br><span class="line">      be less than or equal to -key-shares. This is aliased as <span class="string">&quot;-t&quot;</span>. The</span><br><span class="line">      default is 3.</span><br></pre></td></tr></table></figure><h2 id="unseal"><a href="#unseal" class="headerlink" title="unseal"></a>unseal</h2><p>这个时候只是初始化启动了 vault， 还需要我们用 key unseal to reconstruct the master key</p><h3 id="node-1"><a href="#node-1" class="headerlink" title="node-1"></a>node-1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator unseal</span></span><br><span class="line">Unseal Key (will be hidden):</span><br><span class="line">Key                Value</span><br><span class="line">---                -----</span><br><span class="line">Seal Type          shamir</span><br><span class="line">Initialized        <span class="literal">true</span></span><br><span class="line">Sealed             <span class="literal">true</span></span><br><span class="line">Total Shares       5</span><br><span class="line">Threshold          3</span><br><span class="line">Unseal Progress    1/3</span><br><span class="line">Unseal Nonce       8950ac41-69ae-2a96-00db-610739dcbeee</span><br><span class="line">Version            1.7.1</span><br><span class="line">Storage Type       raft</span><br><span class="line">HA Enabled         <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator unseal</span></span><br><span class="line">Unseal Key (will be hidden):</span><br><span class="line">Key                Value</span><br><span class="line">---                -----</span><br><span class="line">Seal Type          shamir</span><br><span class="line">Initialized        <span class="literal">true</span></span><br><span class="line">Sealed             <span class="literal">true</span></span><br><span class="line">Total Shares       5</span><br><span class="line">Threshold          3</span><br><span class="line">Unseal Progress    2/3</span><br><span class="line">Unseal Nonce       8950ac41-69ae-2a96-00db-610739dcbeee</span><br><span class="line">Version            1.7.1</span><br><span class="line">Storage Type       raft</span><br><span class="line">HA Enabled         <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator unseal</span></span><br><span class="line">Unseal Key (will be hidden):</span><br><span class="line">Key                     Value</span><br><span class="line">---                     -----</span><br><span class="line">Seal Type               shamir</span><br><span class="line">Initialized             <span class="literal">true</span></span><br><span class="line">Sealed                  <span class="literal">false</span></span><br><span class="line">Total Shares            5</span><br><span class="line">Threshold               3</span><br><span class="line">Version                 1.7.1</span><br><span class="line">Storage Type            raft</span><br><span class="line">Cluster Name            vault-cluster-0618ae06</span><br><span class="line">Cluster ID              feca826b-0ffd-838f-412d-0c6687feee60</span><br><span class="line">HA Enabled              <span class="literal">true</span></span><br><span class="line">HA Cluster              n/a</span><br><span class="line">HA Mode                 standby</span><br><span class="line">Active Node Address     &lt;none&gt;</span><br><span class="line">Raft Committed Index    24</span><br><span class="line">Raft Applied Index      24</span><br></pre></td></tr></table></figure><p>这个时候 vault 才算是真正的启动，开始提供服务了，我们可以来验证一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># login</span></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault login token-for-login</span></span><br><span class="line">Success! You are now authenticated. The token information displayed below</span><br><span class="line">is already stored <span class="keyword">in</span> the token helper. You <span class="keyword">do</span> NOT need to run <span class="string">&quot;vault login&quot;</span></span><br><span class="line">again. Future Vault requests will automatically use this token.</span><br><span class="line"></span><br><span class="line">Key                  Value</span><br><span class="line">---                  -----</span><br><span class="line">token                token-for-login</span><br><span class="line">token_accessor       xxxxxxxxxxx</span><br><span class="line">token_duration       ∞</span><br><span class="line">token_renewable      <span class="literal">false</span></span><br><span class="line">token_policies       [<span class="string">&quot;root&quot;</span>]</span><br><span class="line">identity_policies    []</span><br><span class="line">policies             [<span class="string">&quot;root&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># check nodes, 我这里设置好之后，如果此时你只安装好 node-1 列表只有一个</span></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator raft list-peers</span></span><br><span class="line">Node     Address              State       Voter</span><br><span class="line">----     -------              -----       -----</span><br><span class="line">node1    192.168.64.3:8201    leader      <span class="literal">true</span></span><br><span class="line">node2    192.168.64.4:8201    follower    <span class="literal">false</span></span><br><span class="line">node3    192.168.64.5:8201    follower    <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="node-2"><a href="#node-2" class="headerlink" title="node-2"></a>node-2</h3><p>follower 节点稍微多一步，需要先加入 cluster<br><code>vault operator raft join http://192.168.64.3:8200</code></p><p>为了方便，避免重复，可以采用 shell 脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim init.sh</span><br><span class="line"><span class="built_in">chmod</span> 755 init.sh</span><br><span class="line"><span class="built_in">export</span> VAULT_ADDR=<span class="string">&#x27;http://192.168.64.4:8200&#x27;</span></span><br><span class="line">vault operator raft <span class="built_in">join</span> http://192.168.64.3:8200</span><br><span class="line">vault operator unseal key1</span><br><span class="line">vault operator unseal key3</span><br><span class="line">vault operator unseal key5</span><br><span class="line">vault login token-for-login</span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------</span></span><br><span class="line">bash init.sh</span><br></pre></td></tr></table></figure><h3 id="node-3"><a href="#node-3" class="headerlink" title="node-3"></a>node-3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAULT_ADDR=<span class="string">&#x27;http://192.168.64.5:8200&#x27;</span> \</span><br><span class="line">&amp;&amp; vault operator raft <span class="built_in">join</span> http://192.168.64.3:8200 \</span><br><span class="line">&amp;&amp; vault operator unseal key1 \</span><br><span class="line">&amp;&amp; vault operator unseal key3 \</span><br><span class="line">&amp;&amp; vault operator unseal key5 \</span><br><span class="line">vault login token-for-login</span><br></pre></td></tr></table></figure><h3 id="unseal-script"><a href="#unseal-script" class="headerlink" title="unseal-script"></a>unseal-script</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">feiyang-vault() &#123;</span><br><span class="line">for i in 1 2 3</span><br><span class="line">do</span><br><span class="line">   ssh win$i sudo bash /etc/vault.d/feiyang.sh</span><br><span class="line">done</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Enable-Audit-Logging"><a href="#Enable-Audit-Logging" class="headerlink" title="Enable Audit Logging"></a>Enable Audit Logging</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /var/log/vault</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R vault:vault /var/log/vault</span><br><span class="line"></span><br><span class="line">vault audit <span class="built_in">enable</span> file file_path=/var/log/vault/vault-audit.log</span><br><span class="line">Success! Enabled the file audit device at: file/</span><br><span class="line"></span><br><span class="line"><span class="comment"># check the log</span></span><br><span class="line">root@ubuntu18-108:/var/log/vault<span class="comment"># cat /var/log/vault/vault-audit.log | jq</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;time&quot;</span>: <span class="string">&quot;2021-06-10T12:55:56.251461725Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;request&quot;</span>,</span><br><span class="line">  <span class="string">&quot;auth&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;token_type&quot;</span>: <span class="string">&quot;default&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;request&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;facaae9e-b62a-0a5e-e486-3737252ca003&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;update&quot;</span>,</span><br><span class="line">    <span class="string">&quot;namespace&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="string">&quot;root&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;sys/audit/test&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;time&quot;</span>: <span class="string">&quot;2021-06-10T12:55:56.255890481Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;response&quot;</span>,</span><br><span class="line">  <span class="string">&quot;auth&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;client_token&quot;</span>: <span class="string">&quot;hmac-sha256:4ee53ef44a84288b7e08f4cb5d3cee7a8169f953e18fe0dd5074aaac477000b8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;accessor&quot;</span>: <span class="string">&quot;hmac-sha256:1632d2bc5c5b4bf88ed7c2fab22f9932cf31470a95f111bc22fbe34737d56322&quot;</span>,</span><br><span class="line">    <span class="string">&quot;display_name&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;policies&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;root&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;token_policies&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;root&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;token_type&quot;</span>: <span class="string">&quot;service&quot;</span>,</span><br><span class="line">    <span class="string">&quot;token_issue_time&quot;</span>: <span class="string">&quot;2021-05-09T20:42:59+08:00&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;request&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;8b29ec93-b89d-feb9-56e0-47bdb7dea4f0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;update&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mount_type&quot;</span>: <span class="string">&quot;system&quot;</span>,</span><br><span class="line">    <span class="string">&quot;client_token&quot;</span>: <span class="string">&quot;hmac-sha256:4ee53ef44a84288b7e08f4cb5d3cee7a8169f953e18fe0dd5074aaac477000b8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;client_token_accessor&quot;</span>: <span class="string">&quot;hmac-sha256:1632d2bc5c5b4bf88ed7c2fab22f9932cf31470a95f111bc22fbe34737d56322&quot;</span>,</span><br><span class="line">    <span class="string">&quot;namespace&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="string">&quot;root&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;sys/audit/file&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;description&quot;</span>: <span class="string">&quot;hmac-sha256:9a3dedcf661ac628346b8b4787ff2e1b84e506aa614c359cf8e6500c834aca3d&quot;</span>,</span><br><span class="line">      <span class="string">&quot;local&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;options&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;file_path&quot;</span>: <span class="string">&quot;hmac-sha256:1a445f97febdb58c62eee3997a99dac448c7dd32674dda94f8c1366d18c530e5&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;hmac-sha256:29023c2cba01f448e1052da9d286f10d600f2ed99aaedd46dd98122078faa77a&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;remote_address&quot;</span>: <span class="string">&quot;192.168.64.3&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;response&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;mount_type&quot;</span>: <span class="string">&quot;system&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Rekeying"><a href="#Rekeying" class="headerlink" title="Rekeying"></a>Rekeying</h2><p>如果需要重新生成 unseal  key 的话，可以用 rekey 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vault operator rekey -init -key-shares=3 -key-threshold=2 \</span><br><span class="line">    -format=json | jq -r <span class="string">&quot;.nonce&quot;</span> &gt; nonce.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前提是第一次 init 的结果存在 key.txt</span></span><br><span class="line">vault operator rekey -nonce=$(<span class="built_in">cat</span> nonce.txt) \</span><br><span class="line">    $(grep <span class="string">&#x27;Key 1:&#x27;</span> key.txt | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">vault operator rekey -nonce=$(<span class="built_in">cat</span> nonce.txt) \</span><br><span class="line">    $(grep <span class="string">&#x27;Key 2:&#x27;</span> key.txt | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">vault operator rekey -nonce=$(<span class="built_in">cat</span> nonce.txt) \</span><br><span class="line">    $(grep <span class="string">&#x27;Key 3:&#x27;</span> key.txt | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Rotating"><a href="#Rotating" class="headerlink" title="Rotating"></a>Rotating</h2><p>Rotating the Encryption Key 就非常的简单了，只需要一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vault operator rotate</span><br></pre></td></tr></table></figure><h1 id="nginx-代理转发"><a href="#nginx-代理转发" class="headerlink" title="nginx 代理转发"></a>nginx 代理转发</h1><p>因为我们的 vault 集群是监听在内网上的 192.168.64.0&#x2F;24，而我家里局域网的网段是 192.168.0.0&#x2F;24，因此要设置代理转发一下。</p><ul><li>首先安装 Nginx<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我已经关闭了防火墙的</span></span><br></pre></td></tr></table></figure></li><li>设置代理转发，配置文件如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/vault.conf</span><br><span class="line"></span><br><span class="line">upstream vault &#123;</span><br><span class="line">    server 192.168.64.3:8200;</span><br><span class="line">    keepalive 15;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 192.168.1.108:8200;</span><br><span class="line">    server_name 192.168.1.108;</span><br><span class="line">    access_log /var/log/nginx/vault.access.log;</span><br><span class="line">    error_log /var/log/nginx/vault.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    </span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_buffer_size 64k;</span><br><span class="line">        proxy_buffers   32 32k;</span><br><span class="line">        proxy_busy_buffers_size 128k;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP       <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header Connection <span class="string">&quot;Keep-Alive&quot;</span>;</span><br><span class="line">        proxy_set_header Proxy-Connection <span class="string">&quot;Keep-Alive&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        proxy_pass    http://vault;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl start nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记得删除 default 的 80 服务，以免和其他服务冲突，这里我这台机器 80 端口已经被 gitlab 占用了</span></span><br><span class="line"><span class="built_in">rm</span> -f /etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure></li></ul><p>现在我们就可以登录 vault UI 界面了  <a href="http://192.168.1.108:8200/ui/vault/auth?with=token">http://192.168.1.108:8200/ui/vault/auth?with=token</a></p><h2 id="enable-nginx-failed"><a href="#enable-nginx-failed" class="headerlink" title="enable nginx failed"></a>enable nginx failed</h2><p>我们通过 <code>systemctl enable nginx</code>  已经设置了开机自启动 Nginx， 但是实际环境中缺是失败了。我们检查日志发现了错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/home/feiyang<span class="comment"># systemctl status nginx</span></span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: failed (Result: exit-code) since Sat 2021-06-12 09:45:56 +08; 1min 12s ago</span><br><span class="line">     Docs: man:nginx(8)</span><br><span class="line">  Process: 1365 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Jun 12 09:45:55 ubuntu18-108 systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 nginx[1365]: nginx: [emerg] <span class="built_in">bind</span>() to 192.168.1.108:8200 failed (99: Cannot assign requested address)</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 nginx[1365]: nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> failed</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 systemd[1]: nginx.service: Control process exited, code=exited status=1</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 systemd[1]: nginx.service: Failed with result <span class="string">&#x27;exit-code&#x27;</span>.</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 systemd[1]: Failed to start A high performance web server and a reverse proxy server.</span><br><span class="line"></span><br><span class="line"><span class="comment"># journalctl check log</span></span><br><span class="line">root@ubuntu18-108:/home/feiyang<span class="comment"># journalctl -u nginx</span></span><br><span class="line">-- Reboot --</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 nginx[1348]: nginx: [emerg] <span class="built_in">bind</span>() to 192.168.1.108:8200 failed (99: Cannot assign requested address)</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 nginx[1348]: nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> failed</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: nginx.service: Control process exited, code=exited status=1</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: nginx.service: Failed with result <span class="string">&#x27;exit-code&#x27;</span>.</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: Failed to start A high performance web server and a reverse proxy server.</span><br></pre></td></tr></table></figure><p>从日志中，我们可以看出 Nginx 失败的原因是， 没有找到那个 IP 192.168.1.108 , 因为我们这个是双网卡的虚拟机，默认的 primary network interface 是192.168.64.3 , secondary network interface 是 192.168.1.108 , 在此我推测是因为当 Nginx 启动的时候， 第二张网卡还没有准备好。</p><p>这个时候，我们可以采用 <a href="https://fedoramagazine.org/systemd-unit-dependencies-and-order/">systemd: Unit dependencies and order</a> 来定义 service 之间的依赖项，启动相关顺序。我们先检查一下 Nginx 的 systemd config</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:~<span class="comment"># cat /lib/systemd/system/nginx.service</span></span><br><span class="line"><span class="comment"># Stop dance for nginx</span></span><br><span class="line"><span class="comment"># =======================</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ExecStop sends SIGSTOP (graceful stop) to the nginx process.</span></span><br><span class="line"><span class="comment"># If, after 5s (--retry QUIT/5) nginx is still running, systemd takes control</span></span><br><span class="line"><span class="comment"># and sends SIGTERM (fast shutdown) to the main process.</span></span><br><span class="line"><span class="comment"># After another 5s (TimeoutStopSec=5), and if nginx is alive, systemd sends</span></span><br><span class="line"><span class="comment"># SIGKILL to all the remaining processes in the process group (KillMode=mixed).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx signals reference doc:</span></span><br><span class="line"><span class="comment"># http://nginx.org/en/docs/control.html</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=A high performance web server and a reverse proxy server</span><br><span class="line">Documentation=man:nginx(8)</span><br><span class="line">After=network.target <span class="comment"># 启动依赖，问题就在这里</span></span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t -q -g <span class="string">&#x27;daemon on; master_process on;&#x27;</span></span><br><span class="line">ExecStart=/usr/sbin/nginx -g <span class="string">&#x27;daemon on; master_process on;&#x27;</span></span><br><span class="line">ExecReload=/usr/sbin/nginx -g <span class="string">&#x27;daemon on; master_process on;&#x27;</span> -s reload</span><br><span class="line">ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">KillMode=mixed</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>从这一行看出， Nginx 是在 <code>After=network.target</code> 之后启动的，但结果却是失败。我们对比了 docker service 的 systemd config 发现 docker 是在 <code>After=network-online.target</code> 后启动的， 我们尝试将 Nginx systemd 配置文件修改为 <code>network-online.target</code> ，终于可以成功开机自启动。</p><h1 id="Auth-Methods"><a href="#Auth-Methods" class="headerlink" title="Auth Methods"></a>Auth Methods</h1><p>认证方式有很多种。 <a href="https://www.vaultproject.io/docs/auth">https://www.vaultproject.io/docs/auth</a><br>Each auth method serves a different purpose, and some auth methods are better suited for machine authentication rather than used by human users. </p><ul><li><code>machine auth</code> methods include AppRole,</li><li><code>Cloud-based auth</code> methods, tokens, TLS, Kubernetes, and Radius. </li><li><code>human auth</code> methods include Okta, LDAP, GitHub, OIDC, and userpass.</li></ul><h2 id="userpass"><a href="#userpass" class="headerlink" title="userpass"></a>userpass</h2><p>创建一个 user 登录，这样就不需要每次都是 root token 了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地编辑一个 sudo policy，保存</span></span><br><span class="line">vim sudo.hcl</span><br><span class="line"></span><br><span class="line">path <span class="string">&quot;*&quot;</span> &#123;</span><br><span class="line">  policy = <span class="string">&quot;sudo&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个名为 sudo 的 policy</span></span><br><span class="line">vault policy write sudo sudo.hcl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 user </span></span><br><span class="line">vault auth <span class="built_in">enable</span> userpass</span><br><span class="line"></span><br><span class="line">vault write auth/userpass/users/feiyang password=<span class="string">&quot;password&quot;</span> policies=<span class="string">&quot;sudo&quot;</span></span><br></pre></td></tr></table></figure><p>这样就可以用 feiyang 和 password 登录了</p><h2 id="AppRole"><a href="#AppRole" class="headerlink" title="AppRole"></a>AppRole</h2><p>AppRole 多用于机器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上面 userpass 我们已经创建了 sudo policy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 my-role</span></span><br><span class="line">vault write auth/approle/role/my-role \</span><br><span class="line">    secret_id_ttl=10m \</span><br><span class="line">    token_ttl=20m \</span><br><span class="line">    token_max_ttl=30m \</span><br><span class="line">    token_policies=[<span class="string">&quot;sudo&quot;</span>] \</span><br><span class="line">    period=0 \</span><br><span class="line">    bind_secret_id=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 role list</span></span><br><span class="line">vault list /auth/approle/role</span><br><span class="line">Keys</span><br><span class="line">----</span><br><span class="line">my-role</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 role id</span></span><br><span class="line">vault <span class="built_in">read</span> auth/approle/role/my-role/role-id</span><br><span class="line">Key        Value</span><br><span class="line">---        -----</span><br><span class="line">role_id    8511d740-3e3f-76d4-6084-df02b149e6fb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 role secret</span></span><br><span class="line"> vault write -f auth/approle/role/my-role/secret-id</span><br><span class="line">Key                   Value</span><br><span class="line">---                   -----</span><br><span class="line">secret_id             3ea8ee03-9239-7c64-ca24-2194d7a10b8d</span><br><span class="line">secret_id_accessor    11d7ddcf-08ea-4e5d-921b-59d9608119ef</span><br><span class="line">secret_id_ttl         10m</span><br></pre></td></tr></table></figure><p>到此，我们有了 role_id 和 secret_id 就可以用于机器上访问 vault 了</p><h1 id="HTTP-API"><a href="#HTTP-API" class="headerlink" title="HTTP API"></a>HTTP API</h1><p>首先为了操作方便，我们需要保持 token 到环境变量 $VAULT_TOKEN</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAULT_TOKEN=<span class="string">&quot;s.Ga5jyNq6kNfRMVQk2LY1j9iu&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTP API enable approle</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">&quot;X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>&quot;</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">&#x27;&#123;&quot;type&quot;: &quot;approle&quot;&#125;&#x27;</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/sys/auth/approle</span><br><span class="line"></span><br><span class="line"><span class="comment"># create my-policy</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">&quot;X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>&quot;</span> \</span><br><span class="line">    --request PUT \</span><br><span class="line">    --data <span class="string">&#x27;&#123;&quot;policy&quot;:&quot;# Dev servers have version 2 of KV secrets engine mounted by default, so will\n# need these paths to grant permissions:\npath \&quot;secret/data/*\&quot; &#123;\n  capabilities = [\&quot;create\&quot;, \&quot;update\&quot;]\n&#125;\n\npath \&quot;secret/data/foo\&quot; &#123;\n  capabilities = [\&quot;read\&quot;]\n&#125;\n&quot;&#125;&#x27;</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/sys/policies/acl/my-policy</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable KV v2 secrets engine at secret/ using API</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">&quot;X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>&quot;</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">&#x27;&#123; &quot;type&quot;:&quot;kv-v2&quot; &#125;&#x27;</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/sys/mounts/secret</span><br><span class="line"></span><br><span class="line"><span class="comment"># create my-role</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">&quot;X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>&quot;</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">&#x27;&#123;&quot;policies&quot;: [&quot;my-policy&quot;]&#125;&#x27;</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/auth/approle/role/my-role</span><br><span class="line"></span><br><span class="line"><span class="comment"># get role-id</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">&quot;X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>&quot;</span> \</span><br><span class="line">     http://127.0.0.1:8200/v1/auth/approle/role/my-role/role-id | jq -r <span class="string">&quot;.data&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get secret-id </span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">&quot;X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>&quot;</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    http://127.0.0.1:8200/v1/auth/approle/role/my-role/secret-id | jq -r <span class="string">&quot;.data&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># auth with the role-id and secret-id </span></span><br><span class="line">curl --request POST \</span><br><span class="line">       --data <span class="string">&#x27;&#123;&quot;role_id&quot;: &quot;3c301960-8a02-d776-f025-c3443d513a18&quot;, &quot;secret_id&quot;: &quot;22d1e0d6-a70b-f91f-f918-a0ee8902666b&quot;&#125;&#x27;</span> \</span><br><span class="line">       http://127.0.0.1:8200/v1/auth/approle/login | jq -r <span class="string">&quot;.auth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set new token from my-role auth</span></span><br><span class="line"><span class="built_in">export</span> VAULT_TOKEN=<span class="string">&quot;s.p5NB4dTlsPiUU94RA5IfbzXv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a version 1 of secret named creds with a key password and its value set to my-long-password.</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">&quot;X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>&quot;</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">&#x27;&#123; &quot;data&quot;: &#123;&quot;password&quot;: &quot;my-long-password&quot;&#125; &#125;&#x27;</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/secret/data/creds | jq -r <span class="string">&quot;.data&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can stop the server and unset the VAULT_TOKEN environment variable.</span></span><br><span class="line"><span class="built_in">unset</span> VAULT_TOKEN</span><br></pre></td></tr></table></figure><h1 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h1><p>Vault Commands <a href="https://www.vaultproject.io/docs/commands">CLI</a> 除了 API, CLI 也是我常用的</p><ul><li>自动补全 Autocompletion<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vault -autocomplete-install</span><br></pre></td></tr></table></figure></li></ul><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li>每次重启服务，都需要 unseal </li><li>如果需要重新初始化，需要先删除 raft 存储的数据， <code>rm -rf /vault/data/*</code></li><li>enable nginx failed 请看上面 3.1 章节</li></ul><h1 id="vault-考试认证"><a href="#vault-考试认证" class="headerlink" title="vault 考试认证"></a>vault 考试认证</h1><p><a href="https://www.hashicorp.com/certification/vault-associate">HashiCorp Certified: Vault Associate</a></p><p>我买了这个练习题 <a href="https://www.udemy.com/course/hashicorp-certified-vault-associate-practice-exam/">HashiCorp Certified: Vault Associate Practice Exam 2021</a> ，还是不错的。 虽然不是原题，但对考试，还是非常有帮助的。<br>最终通过了考试 <a href="https://www.credly.com/badges/27d38b38-2b08-4023-9932-d7567a0e0d11/public_url">HashiCorp Certified: Vault Associate</a></p><h1 id="vault-agent"><a href="#vault-agent" class="headerlink" title="vault-agent"></a>vault-agent</h1><p>安装都是一样的，<a href="https://learn.hashicorp.com/tutorials/vault/getting-started-install">Install Vault</a> , 只是启动的时候用 agent 模式</p><p>我们需要做的就是，创建 vault-agent.service 以便于 systemd 托管控制</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root@ubuntu18-119:/etc/vault.d#</span> <span class="string">cat</span>  <span class="string">/lib/systemd/system/vault-agent.service</span></span><br><span class="line">  </span><br><span class="line">[<span class="string">Unit</span>]</span><br><span class="line"><span class="string">Description=Vault</span> <span class="string">agent</span></span><br><span class="line"><span class="string">Requires=network-online.target</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Service</span>]</span><br><span class="line"><span class="string">Environment=VAULT_ADDR=http://192.168.1.108:8200</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/vault</span> <span class="string">agent</span> <span class="string">-log-level=info</span> <span class="string">-config=/etc/vault.d/vault-agent.conf</span></span><br><span class="line"><span class="string">User=vault</span></span><br><span class="line"><span class="string">Group=vault</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Install</span>]</span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br></pre></td></tr></table></figure><p>记得 reload 一下配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>还有就是创建配置文件 </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18<span class="number">-119</span><span class="punctuation">:</span>/etc/vault.d# cat vault-agent.conf </span><br><span class="line">        </span><br><span class="line">pid_file = <span class="string">&quot;/var/run/vault-agent/vault-agent.pid&quot;</span></span><br><span class="line"></span><br><span class="line">auto_auth <span class="punctuation">&#123;</span></span><br><span class="line">  method <span class="string">&quot;approle&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">    mount_path = <span class="string">&quot;auth/approle&quot;</span></span><br><span class="line">    config = <span class="punctuation">&#123;</span></span><br><span class="line">      role_id_file_path = <span class="string">&quot;/etc/vault.d/role_id&quot;</span></span><br><span class="line">      secret_id_file_path = <span class="string">&quot;/etc/vault.d/secret_id&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">  sink <span class="string">&quot;file&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">    config = <span class="punctuation">&#123;</span></span><br><span class="line">      path = <span class="string">&quot;/var/run/vault-agent/vault-agent.token&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">cache <span class="punctuation">&#123;</span></span><br><span class="line">  use_auto_auth_token = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">listener <span class="string">&quot;unix&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  address = <span class="string">&quot;/var/run/vault-agent/vault-agent.socket&quot;</span></span><br><span class="line">  tls_disable = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">listener <span class="string">&quot;tcp&quot;</span> <span class="punctuation">&#123;</span></span><br><span class="line">  address = <span class="string">&quot;127.0.0.1:8200&quot;</span></span><br><span class="line">  tls_disable = <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>需要创建的文件：并且保证 User&#x3D;vault Group&#x3D;vault 有读写权限这些文件</p><ul><li>&#x2F;var&#x2F;run&#x2F;vault-agent&#x2F;vault-agent.pid</li><li>&#x2F;etc&#x2F;vault.d&#x2F;role_id</li><li>&#x2F;etc&#x2F;vault.d&#x2F;secret_id</li><li>&#x2F;var&#x2F;run&#x2F;vault-agent&#x2F;vault-agent.token</li><li>&#x2F;var&#x2F;run&#x2F;vault-agent&#x2F;vault-agent.socket</li></ul><p>接下来我们就可以来测试一下，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">systemctl start vault-agent </span><br><span class="line"></span><br><span class="line">systemctl status vault-agent</span><br><span class="line">root@ubuntu18-119:/etc/vault.d# systemctl status vault-agent</span><br><span class="line">● vault-agent.service - Vault agent</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/vault-agent.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Tue 2021-07-13 11:51:08 +08; 2h 32min ago</span><br><span class="line"> Main PID: 51688 (vault)</span><br><span class="line">    Tasks: 8 (limit: 4631)</span><br><span class="line">   CGroup: /system.slice/vault-agent.service</span><br><span class="line">           └─51688 /usr/bin/vault agent -log-level=info -config=/etc/vault.d/vault-agent.conf</span><br><span class="line"></span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]: 2021-07-13T14:20:48.288+0800 [INFO]  auth.handler: authenticating</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]: 2021-07-13T14:20:48.294+0800 [ERROR] auth.handler: error authenticating:</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   error=</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | Error making API request.</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   |</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | URL: PUT http://192.168.1.108:8200/v1/auth/approle/login</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | Code: 400. Errors:</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   |</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | * invalid secret id</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:    backoff=4m2.47s</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这是 token 过期了，最大期限应该是 token_max_ttl=30m ， 所以需要重新生成</span></span><br><span class="line">root@ubuntu18-108:~# vault write -f auth/approle/role/my-role/secret-id</span><br><span class="line">Key                   Value</span><br><span class="line">---                   -----</span><br><span class="line">secret_id             63859ef3-7906-7eff-0586-a4ebb97ab20c</span><br><span class="line">secret_id_accessor    3125d535-b357-097e-1a8d-68370f03327c</span><br><span class="line">secret_id_ttl         10m</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把 secret_id 放入 /etc/vault.d/secret_id</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启 vault agent</span></span><br><span class="line">systemctl restart  vault-agent</span><br><span class="line">root@ubuntu18-119:/etc/vault.d# systemctl status vault-agent</span><br><span class="line">● vault-agent.service - Vault agent</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/vault-agent.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Tue 2021-07-13 14:25:53 +08; 1s ago</span><br><span class="line"> Main PID: 128325 (vault)</span><br><span class="line">    Tasks: 7 (limit: 4631)</span><br><span class="line">   CGroup: /system.slice/vault-agent.service</span><br><span class="line">           └─128325 /usr/bin/vault agent -log-level=info -config=/etc/vault.d/vault-agent.conf</span><br><span class="line"></span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.962+0800 [INFO]  sink.file: file sink configured: path=/var/run/vault-agent/vault-agent.token mode=-rw-r-----</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.981+0800 [INFO]  auth.handler: starting auth handler</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.981+0800 [INFO]  auth.handler: authenticating</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.984+0800 [INFO]  sink.server: starting sink server</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.984+0800 [INFO]  template.server: starting template server</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.984+0800 [INFO]  template.server: no templates found</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.000+0800 [INFO]  auth.handler: authentication successful, sending token to sinks</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.000+0800 [INFO]  auth.handler: starting renewal process</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.001+0800 [INFO]  sink.file: token written: path=/var/run/vault-agent/vault-agent.token</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.008+0800 [INFO]  auth.handler: renewed auth token</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">test</span></span></span><br><span class="line">root@ubuntu18-119:/etc/vault.d# curl  http://127.0.0.1:8200/v1/sys/health</span><br><span class="line">&#123;&quot;initialized&quot;:true,&quot;sealed&quot;:false,&quot;standby&quot;:false,&quot;performance_standby&quot;:false,&quot;replication_performance_mode&quot;:&quot;disabled&quot;,&quot;replication_dr_mode&quot;:&quot;disabled&quot;,&quot;server_time_utc&quot;:1626158428,&quot;version&quot;:&quot;1.7.2&quot;,&quot;cluster_name&quot;:&quot;vault-cluster-0618ae06&quot;,&quot;cluster_id&quot;:&quot;feca826b-0ffd-838f-412d-0c6687feee60&quot;&#125;</span><br><span class="line"></span><br><span class="line">root@ubuntu18-119:/etc/vault.d# curl  http://127.0.0.1:8200/v1/sys/leader</span><br><span class="line">&#123;&quot;ha_enabled&quot;:true,&quot;is_self&quot;:true,&quot;active_time&quot;:&quot;2021-07-13T02:11:43.591625814Z&quot;,&quot;leader_address&quot;:&quot;http://192.168.64.3:8200&quot;,&quot;leader_cluster_address&quot;:&quot;https://192.168.64.3:8201&quot;,&quot;performance_standby&quot;:false,&quot;performance_standby_last_remote_wal&quot;:0,&quot;raft_committed_index&quot;:13017,&quot;raft_applied_index&quot;:13017&#125;</span><br></pre></td></tr></table></figure><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> hashicorp </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS</title>
      <link href="/post/dns/"/>
      <url>/post/dns/</url>
      
        <content type="html"><![CDATA[<p>DNSMasq 搭建自己的DNS服务器</p><span id="more"></span><h1 id="Update-history"><a href="#Update-history" class="headerlink" title="Update history"></a>Update history</h1><p>2021-01-10 初稿。最近拼多多搞得太过分了，打工人们要联合起来呀</p><h1 id="Dnsmasq"><a href="#Dnsmasq" class="headerlink" title="Dnsmasq"></a>Dnsmasq</h1><p>为什么要安装 DNS 呢？ 因为上一篇 blog， 自定义的 domain 需要在每台机器上修改  hosts，有一点麻烦，干脆就直接在测试环境，搭建一个 DNS 服务器</p><h2 id="stop-systemd-resolve"><a href="#stop-systemd-resolve" class="headerlink" title="stop systemd-resolve"></a>stop systemd-resolve</h2><ul><li>ubuntu 上面 systemd-resolve 会修改 &#x2F;etc&#x2F;resolv.conf 详情请看 <a href="https://www.cnblogs.com/breezey/p/9155988.html">https://www.cnblogs.com/breezey/p/9155988.html</a> </li><li>centos 上面 networkmanager 会修改 &#x2F;etc&#x2F;resolv.conf 这里有两种做法：</li></ul><ol><li>从源头上修改，这样每次上面 networkmanager 生成的话也是正确的 <a href="https://ma.ttias.be/centos-7-networkmanager-keeps-overwriting-etcresolv-conf/">https://ma.ttias.be/centos-7-networkmanager-keeps-overwriting-etcresolv-conf/</a></li><li>禁止 networkmanager 修改 dns 参考 <a href="https://wiseindy.com/blog/linux/how-to-set-dns-in-centos-rhel-7-prevent-network-manager-from-overwriting-etc-resolv-conf/">https://wiseindy.com/blog/linux/how-to-set-dns-in-centos-rhel-7-prevent-network-manager-from-overwriting-etc-resolv-conf/</a></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable systemd-resolved</span><br><span class="line">sudo systemctl stop systemd-resolved</span><br><span class="line"></span><br><span class="line">sudo rm /etc/resolv.conf</span><br><span class="line"></span><br><span class="line">echo nameserver 8.8.8.8 | sudo tee /etc/resolv.conf</span><br></pre></td></tr></table></figure><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install dnsmasq</span><br><span class="line"></span><br><span class="line">vim /etc/dnsmasq.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Listen on this specific port instead of the standard DNS port</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">(53). Setting this to zero completely disables DNS <span class="keyword">function</span>,</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">leaving only DHCP and/or TFTP.</span></span><br><span class="line">port=53</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Never forward plain names (without a dot or domain part)</span></span><br><span class="line">domain-needed</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Never forward addresses <span class="keyword">in</span> the non-routed address spaces.</span></span><br><span class="line">bogus-priv</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">By  default,  dnsmasq  will  send queries to any of the upstream</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">servers it knows about and tries to favour servers to are  known</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">to  be  up.  Uncommenting this forces dnsmasq to try each query</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">with  each  server  strictly  <span class="keyword">in</span>  the  order  they   appear   <span class="keyword">in</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/resolv.conf</span></span><br><span class="line">strict-order</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Set this (and domain: see below) <span class="keyword">if</span> you want to have a domain</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">automatically added to simple names <span class="keyword">in</span> a hosts-file.</span></span><br><span class="line">expand-hosts</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Set the domain <span class="keyword">for</span> dnsmasq. this is optional, but <span class="keyword">if</span> it is <span class="built_in">set</span>, it</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">does the following things.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1) Allows DHCP hosts to have fully qualified domain names, as long</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    as the domain part matches this setting.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2) Sets the <span class="string">&quot;domain&quot;</span> DHCP option thereby potentially setting the</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   domain of all systems configured by DHCP</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3) Provides the domain part <span class="keyword">for</span> <span class="string">&quot;expand-hosts&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">domain=thekelleys.org.uk 这里的是主域名，方便在 /etc/hosts 配置的时候，只写前缀即可</span></span><br><span class="line">domain=feiyang.com</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Set Liste address</span></span><br><span class="line">listen-address=127.0.0.1,192.168.17.5 # Set to Server IP for network responses</span><br></pre></td></tr></table></figure><h2 id="Adding-DNS-records"><a href="#Adding-DNS-records" class="headerlink" title="Adding DNS records"></a>Adding DNS records</h2><p>因为我们没有修改 resolv-file, 默认的就是 &#x2F;etc&#x2F;hosts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu20:/home/feiyang<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1 localhost</span><br><span class="line">127.0.1.1 ubuntu20</span><br><span class="line">192.168.17.3 gitlab.feiyang.com</span><br><span class="line">233.233.233.233 haha  <span class="comment">#因为有expand-hosts， 这里是 haha.feiyang.com</span></span><br><span class="line">1.1.1.1 free.dns.com</span><br><span class="line"><span class="comment"># The following lines are desirable for IPv6 capable hosts</span></span><br><span class="line">::1     ip6-localhost ip6-loopback</span><br><span class="line">fe00::0 ip6-localnet</span><br><span class="line">ff00::0 ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br></pre></td></tr></table></figure><p>重启 dnsmasq</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart dnsmasq</span><br></pre></td></tr></table></figure><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>Ubuntu 20 为 DNS 服务器, 用 Ubuntu18 和 centos7 来进行测试，结果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18:/home/feiyang<span class="comment"># nslookup haha.feiyang.com</span></span><br><span class="line">Server:192.168.17.5</span><br><span class="line">Address:192.168.17.5<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Name:haha.feiyang.com</span><br><span class="line">Address: 233.233.233.233</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[jy576@centos7 ~]$ nslookup gitlab.feiyang.com</span><br><span class="line">Server:192.168.17.5</span><br><span class="line">Address:192.168.17.5<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Name:gitlab.feiyang.com</span><br><span class="line">Address: 192.168.17.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[jy576@centos7 ~]$ nslookup free.dns.com</span><br><span class="line">Server:192.168.17.5</span><br><span class="line">Address:192.168.17.5<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Name:free.dns.com</span><br><span class="line">Address: 1.1.1.1</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://computingforgeeks.com/install-and-configure-dnsmasq-on-ubuntu-18-04-lts/">https://computingforgeeks.com/install-and-configure-dnsmasq-on-ubuntu-18-04-lts/</a></li></ul><h1 id="DNS-takeover"><a href="#DNS-takeover" class="headerlink" title="DNS takeover"></a>DNS takeover</h1><p><img src="/img/misc/5.png"> </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab install and CI pipeline</title>
      <link href="/post/gitlab/"/>
      <url>/post/gitlab/</url>
      
        <content type="html"><![CDATA[<p>为了测试 gitlab CI pipeline， 从而在家里的台式机搭建了测试环境。</p><span id="more"></span><p>为什么进行这次实验？因为自己平时只是用到了 gitlab，它对于我来说是一个黑盒。<br>为了搞清楚 CI job 里面的一些 function 用法，自己搭建一套环境。一是方便实验，二是自己不能在公司的环境上实验，担心造成破坏。 </p><h1 id="Update-history"><a href="#Update-history" class="headerlink" title="Update history"></a>Update history</h1><p>2021-07-13 安利学 git 的网站 <a href="https://learngitbranching.js.org/?locale=zh_CN">Learn Git Branching</a> 和 <a href="https://mp.weixin.qq.com/s/6i5v7yK1__S6j39v6jNWkw">Git 命令太难学？我用一款游戏带你玩转它！</a><br>2021-05-24 终于认识到自己的膨胀了，倍感欣慰<br>2021-01-09 初稿，妹子什么时候才能好好学习呀</p><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><p>默认技能：</p><ul><li>docker， 虚拟机上安装 docker 的过程就省略了</li><li>DNS， 因为是自定义的域名，所以需要绑定在本地 hosts</li></ul><p>最开始 Ubuntu 机器只有 2 cpu 4GB， 安装 gitlab 非常卡顿， load 高到 40+， 增加配置后，顺利安装</p><table><thead><tr><th>Name</th><th>Operating system</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>gitlab-main</td><td>Ubuntu 18.04.5 LTS</td><td>4</td><td>8G</td><td>50G</td><td>192.168.64.3</td></tr><tr><td>gitlab-runner</td><td>CentOS 7.8.2003</td><td>2</td><td>2G</td><td>20G</td><td>192.168.64.4</td></tr><tr><td>gitlab-runner</td><td>Ubuntu 20.04.1 LTS</td><td>2</td><td>4G</td><td>20G</td><td>192.168.64.5</td></tr></tbody></table><h1 id="Install-gitlab"><a href="#Install-gitlab" class="headerlink" title="Install gitlab"></a>Install gitlab</h1><p>官方文档：<a href="https://docs.gitlab.com/">https://docs.gitlab.com/</a></p><h2 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h2><p>本次实验，为了快速安装选择了 docker 模式。 <a href="https://docs.gitlab.com/omnibus/docker/README.html">https://docs.gitlab.com/omnibus/docker/README.html</a></p><p>本地 <code>22</code> 端口被 SSH 占用了，所以改为了 <code>2222</code>，这里需要注意的是，我用的是 社区版本 <code>ce</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --detach \</span><br><span class="line">  --hostname gitlab.feiyang.com \</span><br><span class="line">  --publish 443:443 --publish 80:80 --publish 2222:22 \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  --restart always \</span><br><span class="line">  --volume <span class="variable">$GITLAB_HOME</span>/config:/etc/gitlab \</span><br><span class="line">  --volume <span class="variable">$GITLAB_HOME</span>/logs:/var/log/gitlab \</span><br><span class="line">  --volume <span class="variable">$GITLAB_HOME</span>/data:/var/opt/gitlab \</span><br><span class="line">  gitlab/gitlab-ce:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果还需要修改配置，可以 attach 到容器内部，进行修改。</p><p>例如修改 relative URL <a href="https://docs.gitlab.com/omnibus/settings/configuration.html#enable-relative-url-in-gitlab">https://docs.gitlab.com/omnibus/settings/configuration.html#enable-relative-url-in-gitlab</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it gitlab bash</span><br><span class="line"></span><br><span class="line">vi /etc/gitlab/gitlab.rb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定host地址</span></span><br><span class="line">external_url <span class="string">&#x27;http://gitlab.feiyang.com&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置文件并重启服务</span></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure><p>第一次登陆，一定要以 IP 地址登陆，而不是用 localhost。 否则设置 root 新密码就会遇到错误 <strong>8 errors prohibited this user from being saved</strong><br>成功登陆网友以后，我创建了一个新用户，并且设置了 SSH Key，创建了一个 test repo</p><blockquote><p>在这里需要的注意的是，如果没有设置域名  <code>http://gitlab.feiyang.com</code> 那在repo 页面上 git clong 的 url 可能不对，导致无法解析并下载。</p></blockquote><h2 id="runner"><a href="#runner" class="headerlink" title="runner"></a>runner</h2><p>本次实验，为了快速安装选择了 docker 模式。 <a href="https://docs.gitlab.com/runner/install/docker.html">https://docs.gitlab.com/runner/install/docker.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker volume create gitlab-runner-config</span><br><span class="line"></span><br><span class="line">docker run -d --name gitlab-runner --restart always \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    -v gitlab-runner-config:/etc/gitlab-runner \</span><br><span class="line">    gitlab/gitlab-runner:latest</span><br></pre></td></tr></table></figure><p>最好先进入容器设置一下 extra_hosts &#x3D; [“gitlab.feiyang.com:192.168.64.3”] (这里后文有详细介绍 config.toml 可以搜索关键词) 否则注册 runner 的时候，只能输入 IP<br>下一步就是注册，前提你需要去 gitlab 网页上 CI&#x2F;CD section runner 详情页上获得 token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 jy576]<span class="comment"># docker run --rm -it -v gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:latest register</span></span><br><span class="line">Runtime platform                                    <span class="built_in">arch</span>=amd64 os=linux pid=7 revision=943fc252 version=13.7.0</span><br><span class="line">Running <span class="keyword">in</span> system-mode.                            </span><br><span class="line">                                                   </span><br><span class="line">Enter the GitLab instance URL (<span class="keyword">for</span> example, https://gitlab.com/):</span><br><span class="line">http://gitlab.feiyang.com/</span><br><span class="line">Enter the registration token:</span><br><span class="line">kXmj4UA9Z2_NL2sa2Z6z</span><br><span class="line">Enter a description <span class="keyword">for</span> the runner:</span><br><span class="line">[43420abf216d]: centos7       </span><br><span class="line">Enter tags <span class="keyword">for</span> the runner (comma-separated):</span><br><span class="line">ci,ssh</span><br><span class="line">ERROR: Registering runner... failed                 runner=kXmj4UA9 status=couldn<span class="string">&#x27;t execute POST against http://gitlab.feiyang.com/api/v4/runners: Post http://gitlab.feiyang.com/api/v4/runners: dial tcp: lookup gitlab.feiyang.com on 8.8.8.8:53: no such host</span></span><br><span class="line"><span class="string">PANIC: Failed to register the runner. You may be having network problems. </span></span><br><span class="line"><span class="string">[root@centos7 jy576]# docker run --rm -it -v gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:latest register</span></span><br><span class="line"><span class="string">Runtime platform                                    arch=amd64 os=linux pid=8 revision=943fc252 version=13.7.0</span></span><br><span class="line"><span class="string">Running in system-mode.                            </span></span><br><span class="line"><span class="string">                                                   </span></span><br><span class="line"><span class="string">Enter the GitLab instance URL (for example, https://gitlab.com/):</span></span><br><span class="line"><span class="string">http://192.168.64.3/</span></span><br><span class="line"><span class="string">Enter the registration token:</span></span><br><span class="line"><span class="string">kXmj4UA9Z2_NL2sa2Z6z</span></span><br><span class="line"><span class="string">Enter a description for the runner:</span></span><br><span class="line"><span class="string">[a7068d34147b]: centos7</span></span><br><span class="line"><span class="string">Enter tags for the runner (comma-separated):</span></span><br><span class="line"><span class="string">ci,ssh</span></span><br><span class="line"><span class="string">Registering runner... succeeded                     runner=kXmj4UA9</span></span><br><span class="line"><span class="string">Enter an executor: custom, virtualbox, docker+machine, docker, docker-ssh, parallels, shell, ssh, docker-ssh+machine, kubernetes:</span></span><br><span class="line"><span class="string">docker</span></span><br><span class="line"><span class="string">Enter the default Docker image (for example, ruby:2.6):</span></span><br><span class="line"><span class="string">python:3.9.1-slim-buster</span></span><br><span class="line"><span class="string">Runner registered successfully. Feel free to start it, but if it&#x27;</span>s running already the config should be automatically reloaded! </span><br><span class="line">[root@centos7 jy576]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                         COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">926cd5798468   gitlab/gitlab-runner:latest   <span class="string">&quot;/usr/bin/dumb-init …&quot;</span>   7 minutes ago   Up 7 minutes             gitlab-runner</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>回到网页端，我们需要修改一下 runner 设置，勾选上 Run untagged jobs<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210109230805.png"></p><p>因为我们是自定义域名，所以我们需要在 gitlab-runner 里面进行设置，否则 CI job 无法 pull </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the &quot;docker&quot; executor</span><br><span class="line">00:04</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f for python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:01</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting source from Git repository</span><br><span class="line">00:00</span><br><span class="line">Fetching changes with git depth set to 50...</span><br><span class="line">Initialized empty Git repository in /builds/feiyang/test/.git/</span><br><span class="line">Created fresh repository.</span><br><span class="line">fatal: unable to access &#x27;http://gitlab.feiyang.com/feiyang/test.git/&#x27;: Could not resolve host: gitlab.feiyang.com</span><br><span class="line">ERROR: Job failed: exit code 1</span><br></pre></td></tr></table></figure><p>在这里，我们需要在 runner 里面定义好 domain gitlab.feiyang.com<br>参考文档： <a href="https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runnersdocker-section">https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runnersdocker-section</a><br>extra_hosts: Specify hosts that should be defined in container environment</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 jy576]# docker exec -it gitlab-runner bash</span><br><span class="line">root@926cd5798468:/# cat /etc/gitlab-runner/config.toml </span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = &quot;centos7&quot;</span><br><span class="line">  url = &quot;http://192.168.64.3/&quot;</span><br><span class="line">  token = &quot;FSX9yRiUGxok94hMPYdt&quot;</span><br><span class="line">  executor = &quot;docker&quot;</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line">    [runners.cache.azure]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = false</span><br><span class="line">    image = &quot;python:3.9.1-slim-buster&quot;</span><br><span class="line">    privileged = true</span><br><span class="line">    disable_entrypoint_overwrite = false</span><br><span class="line">    oom_kill_disable = false</span><br><span class="line">    disable_cache = false</span><br><span class="line">    volumes = [&quot;/cache&quot;]</span><br><span class="line">    shm_size = 0</span><br><span class="line">    extra_hosts   = [&quot;gitlab.feiyang.com:192.168.64.3&quot;]</span><br></pre></td></tr></table></figure><h1 id="Test-CI"><a href="#Test-CI" class="headerlink" title="Test CI"></a>Test CI</h1><p>gitlab 和 runner 安装完成以后，我们就可以进行测试</p><h2 id="Job-artifacts"><a href="#Job-artifacts" class="headerlink" title="Job artifacts"></a>Job artifacts</h2><p>文档：<a href="https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#defining-artifacts-in-gitlab-ciyml">https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#defining-artifacts-in-gitlab-ciyml</a></p><p>test repo 目录结构如下<br>├── .gitlab-ci.yml<br>├── lint.py<br>└── README.md</p><p>lint.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.chdir(os.path.dirname(__file__))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;feiyang test CI&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br></pre></td></tr></table></figure><p>.gitlab-ci.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">lint</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">image:</span> <span class="string">python:3.9.1-slim-buster</span></span><br><span class="line"></span><br><span class="line"><span class="attr">check_path:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">lint</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pwd</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cd</span> <span class="string">/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME</span> <span class="string">&amp;&amp;</span> <span class="string">python</span> <span class="string">lint.py</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_ami:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apt</span> <span class="string">update</span> <span class="string">&amp;&amp;</span> <span class="string">apt</span> <span class="string">install</span> <span class="string">-y</span> <span class="string">curl</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">echo</span> <span class="string">$CI_JOB_ID</span> <span class="string">&gt;&gt;</span> <span class="string">ip.json</span> <span class="string">&amp;&amp;</span> <span class="string">curl</span> <span class="string">ipinfo.io</span> <span class="string">&gt;&gt;</span> <span class="string">ip.json</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="attr">expire_in:</span> <span class="number">1</span> <span class="string">year</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ip.json</span></span><br><span class="line"></span><br><span class="line"><span class="attr">read_artifacts:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pwd</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">cat</span> <span class="string">ip.json</span></span><br></pre></td></tr></table></figure><p>CI 结果</p><h3 id="lint"><a href="#lint" class="headerlink" title="lint"></a>lint</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the <span class="string">&quot;docker&quot;</span> executor</span><br><span class="line">00:05</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f <span class="keyword">for</span> python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:00</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting <span class="built_in">source</span> from Git repository</span><br><span class="line">00:01</span><br><span class="line">Fetching changes with git depth <span class="built_in">set</span> to 50...</span><br><span class="line">Reinitialized existing Git repository <span class="keyword">in</span> /builds/feiyang/test/.git/</span><br><span class="line">Checking out b60b95c1 as master...</span><br><span class="line">Removing ip.json</span><br><span class="line">Skipping Git submodules setup</span><br><span class="line">Executing <span class="string">&quot;step_script&quot;</span> stage of the job script</span><br><span class="line">00:00</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/builds/feiyang/test</span><br><span class="line">$ <span class="built_in">cd</span> /builds/<span class="variable">$CI_PROJECT_NAMESPACE</span>/<span class="variable">$CI_PROJECT_NAME</span> &amp;&amp; python lint.py</span><br><span class="line">feiyang <span class="built_in">test</span> CI</span><br><span class="line">/builds/feiyang/test</span><br><span class="line">Job succeeded</span><br></pre></td></tr></table></figure><h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the <span class="string">&quot;docker&quot;</span> executor</span><br><span class="line">00:04</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f <span class="keyword">for</span> python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:00</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting <span class="built_in">source</span> from Git repository</span><br><span class="line">00:01</span><br><span class="line">Fetching changes with git depth <span class="built_in">set</span> to 50...</span><br><span class="line">Reinitialized existing Git repository <span class="keyword">in</span> /builds/feiyang/test/.git/</span><br><span class="line">Checking out b60b95c1 as master...</span><br><span class="line">Skipping Git submodules setup</span><br><span class="line">Executing <span class="string">&quot;step_script&quot;</span> stage of the job script</span><br><span class="line">00:05</span><br><span class="line">$ apt update &amp;&amp; apt install -y curl</span><br><span class="line">WARNING: apt does not have a stable CLI interface. Use with caution <span class="keyword">in</span> scripts.</span><br><span class="line">Get:1 http://security.debian.org/debian-security buster/updates InRelease [65.4 kB]</span><br><span class="line">Get:2 http://deb.debian.org/debian buster InRelease [121 kB]</span><br><span class="line">Get:3 http://deb.debian.org/debian buster-updates InRelease [51.9 kB]</span><br><span class="line">Get:4 http://security.debian.org/debian-security buster/updates/main amd64 Packages [260 kB]</span><br><span class="line">Get:5 http://deb.debian.org/debian buster/main amd64 Packages [7907 kB]</span><br><span class="line">Get:6 http://deb.debian.org/debian buster-updates/main amd64 Packages [7860 B]</span><br><span class="line">Fetched 8414 kB <span class="keyword">in</span> 2s (4381 kB/s)</span><br><span class="line">Reading package lists...</span><br><span class="line">Building dependency tree...</span><br><span class="line">Reading state information...</span><br><span class="line">2 packages can be upgraded. Run <span class="string">&#x27;apt list --upgradable&#x27;</span> to see them.</span><br><span class="line">WARNING: apt does not have a stable CLI interface. Use with caution <span class="keyword">in</span> scripts.</span><br><span class="line">Reading package lists...</span><br><span class="line">Building dependency tree...</span><br><span class="line">Reading state information...</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  krb5-locales libcurl4 libgssapi-krb5-2 libk5crypto3 libkeyutils1 libkrb5-3</span><br><span class="line">  libkrb5support0 libldap-2.4-2 libldap-common libnghttp2-14 libpsl5 librtmp1</span><br><span class="line">  libsasl2-2 libsasl2-modules libsasl2-modules-db libssh2-1 publicsuffix</span><br><span class="line">Suggested packages:</span><br><span class="line">  krb5-doc krb5-user libsasl2-modules-gssapi-mit</span><br><span class="line">  | libsasl2-modules-gssapi-heimdal libsasl2-modules-ldap libsasl2-modules-otp</span><br><span class="line">  libsasl2-modules-sql</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  curl krb5-locales libcurl4 libgssapi-krb5-2 libk5crypto3 libkeyutils1</span><br><span class="line">  libkrb5-3 libkrb5support0 libldap-2.4-2 libldap-common libnghttp2-14 libpsl5</span><br><span class="line">  librtmp1 libsasl2-2 libsasl2-modules libsasl2-modules-db libssh2-1</span><br><span class="line">  publicsuffix</span><br><span class="line">0 upgraded, 18 newly installed, 0 to remove and 2 not upgraded.</span><br><span class="line">Need to get 2470 kB of archives.</span><br><span class="line">After this operation, 5837 kB of additional disk space will be used.</span><br><span class="line">Get:1 http://deb.debian.org/debian buster/main amd64 krb5-locales all 1.17-3+deb10u1 [95.4 kB]</span><br><span class="line">Get:2 http://deb.debian.org/debian buster/main amd64 libkeyutils1 amd64 1.6-6 [15.0 kB]</span><br><span class="line">Get:3 http://deb.debian.org/debian buster/main amd64 libkrb5support0 amd64 1.17-3+deb10u1 [65.8 kB]</span><br><span class="line">Get:4 http://deb.debian.org/debian buster/main amd64 libk5crypto3 amd64 1.17-3+deb10u1 [122 kB]</span><br><span class="line">Get:5 http://deb.debian.org/debian buster/main amd64 libkrb5-3 amd64 1.17-3+deb10u1 [369 kB]</span><br><span class="line">Get:6 http://deb.debian.org/debian buster/main amd64 libgssapi-krb5-2 amd64 1.17-3+deb10u1 [158 kB]</span><br><span class="line">Get:7 http://deb.debian.org/debian buster/main amd64 libsasl2-modules-db amd64 2.1.27+dfsg-1+deb10u1 [69.1 kB]</span><br><span class="line">Get:8 http://deb.debian.org/debian buster/main amd64 libsasl2-2 amd64 2.1.27+dfsg-1+deb10u1 [106 kB]</span><br><span class="line">Get:9 http://deb.debian.org/debian buster/main amd64 libldap-common all 2.4.47+dfsg-3+deb10u4 [89.8 kB]</span><br><span class="line">Get:10 http://deb.debian.org/debian buster/main amd64 libldap-2.4-2 amd64 2.4.47+dfsg-3+deb10u4 [224 kB]</span><br><span class="line">Get:11 http://deb.debian.org/debian buster/main amd64 libnghttp2-14 amd64 1.36.0-2+deb10u1 [85.0 kB]</span><br><span class="line">Get:12 http://deb.debian.org/debian buster/main amd64 libpsl5 amd64 0.20.2-2 [53.7 kB]</span><br><span class="line">Get:13 http://deb.debian.org/debian buster/main amd64 librtmp1 amd64 2.4+20151223.gitfa8646d.1-2 [60.5 kB]</span><br><span class="line">Get:14 http://deb.debian.org/debian buster/main amd64 libssh2-1 amd64 1.8.0-2.1 [140 kB]</span><br><span class="line">Get:15 http://deb.debian.org/debian buster/main amd64 libcurl4 amd64 7.64.0-4+deb10u1 [331 kB]</span><br><span class="line">Get:16 http://deb.debian.org/debian buster/main amd64 curl amd64 7.64.0-4+deb10u1 [264 kB]</span><br><span class="line">Get:17 http://deb.debian.org/debian buster/main amd64 libsasl2-modules amd64 2.1.27+dfsg-1+deb10u1 [104 kB]</span><br><span class="line">Get:18 http://deb.debian.org/debian buster/main amd64 publicsuffix all 20190415.1030-1 [116 kB]</span><br><span class="line">debconf: delaying package configuration, since apt-utils is not installed</span><br><span class="line">Fetched 2470 kB <span class="keyword">in</span> 0s (5707 kB/s)</span><br><span class="line">Selecting previously unselected package krb5-locales.</span><br><span class="line">(Reading database ... 6829 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../00-krb5-locales_1.17-3+deb10u1_all.deb ...</span><br><span class="line">Unpacking krb5-locales (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libkeyutils1:amd64.</span><br><span class="line">Preparing to unpack .../01-libkeyutils1_1.6-6_amd64.deb ...</span><br><span class="line">Unpacking libkeyutils1:amd64 (1.6-6) ...</span><br><span class="line">Selecting previously unselected package libkrb5support0:amd64.</span><br><span class="line">Preparing to unpack .../02-libkrb5support0_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libkrb5support0:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libk5crypto3:amd64.</span><br><span class="line">Preparing to unpack .../03-libk5crypto3_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libk5crypto3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libkrb5-3:amd64.</span><br><span class="line">Preparing to unpack .../04-libkrb5-3_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libkrb5-3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libgssapi-krb5-2:amd64.</span><br><span class="line">Preparing to unpack .../05-libgssapi-krb5-2_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libgssapi-krb5-2:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libsasl2-modules-db:amd64.</span><br><span class="line">Preparing to unpack .../06-libsasl2-modules-db_2.1.27+dfsg-1+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libsasl2-modules-db:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libsasl2-2:amd64.</span><br><span class="line">Preparing to unpack .../07-libsasl2-2_2.1.27+dfsg-1+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libsasl2-2:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libldap-common.</span><br><span class="line">Preparing to unpack .../08-libldap-common_2.4.47+dfsg-3+deb10u4_all.deb ...</span><br><span class="line">Unpacking libldap-common (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Selecting previously unselected package libldap-2.4-2:amd64.</span><br><span class="line">Preparing to unpack .../09-libldap-2.4-2_2.4.47+dfsg-3+deb10u4_amd64.deb ...</span><br><span class="line">Unpacking libldap-2.4-2:amd64 (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Selecting previously unselected package libnghttp2-14:amd64.</span><br><span class="line">Preparing to unpack .../10-libnghttp2-14_1.36.0-2+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libnghttp2-14:amd64 (1.36.0-2+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libpsl5:amd64.</span><br><span class="line">Preparing to unpack .../11-libpsl5_0.20.2-2_amd64.deb ...</span><br><span class="line">Unpacking libpsl5:amd64 (0.20.2-2) ...</span><br><span class="line">Selecting previously unselected package librtmp1:amd64.</span><br><span class="line">Preparing to unpack .../12-librtmp1_2.4+20151223.gitfa8646d.1-2_amd64.deb ...</span><br><span class="line">Unpacking librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2) ...</span><br><span class="line">Selecting previously unselected package libssh2-1:amd64.</span><br><span class="line">Preparing to unpack .../13-libssh2-1_1.8.0-2.1_amd64.deb ...</span><br><span class="line">Unpacking libssh2-1:amd64 (1.8.0-2.1) ...</span><br><span class="line">Selecting previously unselected package libcurl4:amd64.</span><br><span class="line">Preparing to unpack .../14-libcurl4_7.64.0-4+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libcurl4:amd64 (7.64.0-4+deb10u1) ...</span><br><span class="line">Selecting previously unselected package curl.</span><br><span class="line">Preparing to unpack .../15-curl_7.64.0-4+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking curl (7.64.0-4+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libsasl2-modules:amd64.</span><br><span class="line">Preparing to unpack .../16-libsasl2-modules_2.1.27+dfsg-1+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libsasl2-modules:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Selecting previously unselected package publicsuffix.</span><br><span class="line">Preparing to unpack .../17-publicsuffix_20190415.1030-1_all.deb ...</span><br><span class="line">Unpacking publicsuffix (20190415.1030-1) ...</span><br><span class="line">Setting up libkeyutils1:amd64 (1.6-6) ...</span><br><span class="line">Setting up libpsl5:amd64 (0.20.2-2) ...</span><br><span class="line">Setting up libsasl2-modules:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Setting up libnghttp2-14:amd64 (1.36.0-2+deb10u1) ...</span><br><span class="line">Setting up krb5-locales (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libldap-common (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Setting up libkrb5support0:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libsasl2-modules-db:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Setting up librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2) ...</span><br><span class="line">Setting up libk5crypto3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libsasl2-2:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Setting up libssh2-1:amd64 (1.8.0-2.1) ...</span><br><span class="line">Setting up libkrb5-3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up publicsuffix (20190415.1030-1) ...</span><br><span class="line">Setting up libldap-2.4-2:amd64 (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Setting up libgssapi-krb5-2:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libcurl4:amd64 (7.64.0-4+deb10u1) ...</span><br><span class="line">Setting up curl (7.64.0-4+deb10u1) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> libc-bin (2.28-10) ...</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$CI_JOB_ID</span> &gt;&gt; ip.json &amp;&amp; curl ipinfo.io &gt;&gt; ip.json</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   312  100   312    0     0   1362      0 --:--:-- --:--:-- --:--:--  1362</span><br><span class="line">Uploading artifacts <span class="keyword">for</span> successful job</span><br><span class="line">00:00</span><br><span class="line">Uploading artifacts...</span><br><span class="line">ip.json: found 1 matching files and directories    </span><br><span class="line">Uploading artifacts as <span class="string">&quot;archive&quot;</span> to coordinator... ok  <span class="built_in">id</span>=14 responseStatus=201 Created token=AzTM9Cfs</span><br><span class="line">Job succeeded</span><br></pre></td></tr></table></figure><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the <span class="string">&quot;docker&quot;</span> executor</span><br><span class="line">00:04</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f <span class="keyword">for</span> python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:00</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting <span class="built_in">source</span> from Git repository</span><br><span class="line">00:01</span><br><span class="line">Fetching changes with git depth <span class="built_in">set</span> to 50...</span><br><span class="line">Reinitialized existing Git repository <span class="keyword">in</span> /builds/feiyang/test/.git/</span><br><span class="line">Checking out b60b95c1 as master...</span><br><span class="line">Removing ip.json</span><br><span class="line">Skipping Git submodules setup</span><br><span class="line">Downloading artifacts</span><br><span class="line">00:00</span><br><span class="line">Downloading artifacts <span class="keyword">for</span> build_ami (14)...</span><br><span class="line">Downloading artifacts from coordinator... ok        <span class="built_in">id</span>=14 responseStatus=200 OK token=AzTM9Cfs</span><br><span class="line">Executing <span class="string">&quot;step_script&quot;</span> stage of the job script</span><br><span class="line">00:00</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/builds/feiyang/test</span><br><span class="line">$ <span class="built_in">cat</span> ip.json</span><br><span class="line">14</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;ip&quot;</span>: <span class="string">&quot;x.x.x.x&quot;</span>,</span><br><span class="line">  <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;singnet.com.sg&quot;</span>,</span><br><span class="line">  <span class="string">&quot;city&quot;</span>: <span class="string">&quot;Singapore&quot;</span>,</span><br><span class="line">  <span class="string">&quot;region&quot;</span>: <span class="string">&quot;Singapore&quot;</span>,</span><br><span class="line">  <span class="string">&quot;country&quot;</span>: <span class="string">&quot;SG&quot;</span>,</span><br><span class="line">  <span class="string">&quot;loc&quot;</span>: <span class="string">&quot;1,103&quot;</span>,</span><br><span class="line">  <span class="string">&quot;org&quot;</span>: <span class="string">&quot;AS9506 Singtel Fibre Broadband&quot;</span>,</span><br><span class="line">  <span class="string">&quot;postal&quot;</span>: <span class="string">&quot;048508&quot;</span>,</span><br><span class="line">  <span class="string">&quot;timezone&quot;</span>: <span class="string">&quot;Asia/Singapore&quot;</span>,</span><br><span class="line">  <span class="string">&quot;readme&quot;</span>: <span class="string">&quot;https://ipinfo.io/missingauth&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">Job succeeded</span><br></pre></td></tr></table></figure><blockquote><p>总结 artifacts，前一个 stage 生存的文件，以 artifacts 保存下来，给下一个 stage 使用</p></blockquote><h1 id="CI-x2F-CD"><a href="#CI-x2F-CD" class="headerlink" title="CI&#x2F;CD"></a>CI&#x2F;CD</h1><h2 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h2><ul><li>先看 <a href="https://juejin.cn/post/6876816474887946253">docker:latest 和 docker:dind 镜像区别</a></li><li>官网文档 <a href="https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-to-build-docker-images">Use Docker to build Docker images</a></li><li><a href="https://docs.gitlab.com/ee/ci/services/#passing-cicd-variables-to-services">CI&#x2F;CD services</a> 一句话，service 就是 CI 步骤里面需要的额外服务，比如 MySQL， redis， 或者 docker engine，不懂看完这一节，保证你会明白</li><li><a href="https://docs.gitlab.com/ee/ci/services/#passing-cicd-variables-to-services">Passing CI&#x2F;CD variables to services</a> 这个是非常重要的， 因为 CI 的 variables 是不能自动传入到 services 的容器环境</li></ul><h3 id="dind"><a href="#dind" class="headerlink" title="dind"></a>dind</h3><p>dind docker in docker, 在 docker 里面运行 docker，套娃。 我在工作上遇到了，用 gitlab CI docker build image， 我们先看下面的一段 ci.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ------------- sleep 方便检测容器 -----------------</span></span><br><span class="line"><span class="attr">build_docker:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker:latest</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="attr">DOCKER_HOST:</span> <span class="string">tcp://docker:2375</span></span><br><span class="line">    <span class="comment"># This instructs Docker not to start over TLS.</span></span><br><span class="line">    <span class="attr">DOCKER_TLS_CERTDIR:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">curl</span> <span class="string">jq</span> <span class="string">python3</span> <span class="string">py3-pip</span> <span class="string">git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">head</span> <span class="number">-1</span> <span class="string">/proc/self/cgroup|cut</span> <span class="string">-d/</span> <span class="string">-f3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">info</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">env</span></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker:dind</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">head</span> <span class="number">-1</span> <span class="string">/proc/self/cgroup|cut</span> <span class="string">-d/</span> <span class="string">-f3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">env</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">sre-turtle</span> <span class="string">.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sleep</span> <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------- 测试 docker login 和 push ----------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_docker:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker:latest</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="attr">DOCKER_HOST:</span> <span class="string">tcp://docker:2375</span></span><br><span class="line">    <span class="comment"># This instructs Docker not to start over TLS.</span></span><br><span class="line">    <span class="attr">DOCKER_TLS_CERTDIR:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">$DOCKERPASS</span> <span class="string">|</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">--username</span> <span class="string">$DOCKERUSER</span> <span class="string">--password-stdin</span></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker:dind</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">VERSION=$&#123;CI_JOB_ID&#125;_$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">|</span> <span class="string">head</span> <span class="string">-c</span> <span class="number">8</span><span class="string">)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">sre-turtle</span> <span class="string">.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">tag</span> <span class="string">sre-turtle:latest</span> <span class="string">$DOCKERUSER/turtle:$VERSION</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$DOCKERUSER/turtle:$VERSION</span></span><br></pre></td></tr></table></figure><p>上面这一段代码的意思：</p><ol><li>启动一个容器1 docker:latest 开始进行 CI</li><li>同时启动一个 service 运行在容器2 docker:dind 里面，service 生命周期仅限于 build_docker 这一步</li><li>当容器1 运行 docker build 的时候，容器1 会自动调用容器2 的 docker engine 。 打一个比方， 容器1 好比你电脑的命令行，容器2 好比你电脑上运行的 docker，当我们在电脑上运行  docker build ， 实际上也是去调用 电脑上运行的 docker 来 build image</li><li>补充知识 <a href="https://docs.docker.com/network/links/">两容器之间的连接</a></li><li>测试 docker login 和 push 的成果 <a href="https://hub.docker.com/r/feiyang233/turtle">https://hub.docker.com/r/feiyang233/turtle</a></li></ol><p>下图就很清楚的解释了 gitlab-runner 在运行上面这段代码时，容器的整体情况，会创建 2 个容器，一个负责 CI script， 一个负责 docker engine<br><img src="/img/vm/19.png"> </p><p>为了更有说服力， 我们也亲自 SSH 到机器上面去验证<br>这里 docker:latest 运行所有的 script<br><img src="/img/vm/20.png"> </p><p>这里 docker:dind 运行 docker engine ， 对外提供服务端口 2375<br><img src="/img/vm/21.png"> </p><p>总结图，可以看到 build image 是存放在 docker engine, 在 CI  shell 运行 docker images 可以调用 API 检查<br><img src="/img/vm/22.png"> </p><h3 id="build-image"><a href="#build-image" class="headerlink" title="build image"></a>build image</h3><p>如果在构建镜像的过程中，需要访问一个私有的仓库 <a href="https://stackoverflow.com/questions/55929417/how-to-securely-git-clone-pip-install-a-private-repository-into-my-docker-image">How to securely git clone&#x2F;pip install a private repository into my docker image?</a><br>好消息！ docker 官网已经有了答案 <a href="https://docs.docker.com/develop/develop-images/build_enhancements/#using-ssh-to-access-private-data-in-builds">Using SSH to access private data in builds</a>。但是官网的文档真的不够详细，还是要参考这一细节 <a href="https://yeasy.gitbook.io/docker_practice/buildx/buildkit#run-mount-type-ssh">BuildKit 镜像构建</a>。看一眼 <a href="https://www.huaweicloud.com/articles/e76e0af0038321951fc8e4f16e48b417.html">Docker 一篇文章带你理解Dockerfile</a><br>安全的办法是采用 ssh key 访问:</p><ul><li><a href="https://docs.gitlab.com/ee/ssh/#generate-an-ssh-key-pair">Generate an SSH key pair</a> <del>OpenSSH 6.5 introduced ED25519 SSH keys in 2014 and they should be available on most operating systems.</del>  ED25519 有坑！见文末</li><li><a href="https://pythonspeed.com/articles/docker-build-secrets/">Don’t leak your Docker image’s build secrets</a></li><li><a href="https://docs.gitlab.com/ee/user/project/deploy_keys/#differences-between-deploy-keys-and-deploy-tokens">Differences between deploy keys and deploy tokens</a></li><li><a href="https://docs.gitlab.com/ee/ci/variables/#cicd-variable-types">用 file type 存 key 到 CI&#x2F;CD variable 里面</a></li></ul><p>如下图所示，当我们在构建镜像的时候，实际上是 Dockerfile 指定的那一个镜像(图中是 python的镜像 )去执行 git clone 或者 pip install, 为了不让 SSH key 存在于我们的镜像中， 确保安全第一，我们必须用新版 docker 提供的 BuildKit， 下一代的镜像构建组件。</p><ul><li>在容器1 运行一个 eval $(ssh-agent)， CI 容器1 中有 SSH key (gitlab deploy key)</li><li>容器1 通过 docker –ssh default&#x3D;$SSH_AUTH_SOCK 配置好  allow the Docker Engine to forward SSH agent connections. </li><li>在 Dockerfile 构建的步骤里，哪一步需要 SSH 代理转发， 就挂载 ssh， RUN –mount&#x3D;type&#x3D;ssh &lt;执行命令&gt;</li></ul><p><img src="/img/vm/23.png"> </p><p>完整的实验代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># syntax=docker/dockerfile:1.2</span></span><br><span class="line"></span><br><span class="line">FROM python:3.9.1-slim-buster</span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="comment">#COPY requirements.txt requirements.txt</span></span><br><span class="line">COPY . .</span><br><span class="line">RUN apt update &amp;&amp; apt install -y openssh-client git dnsutils</span><br><span class="line">RUN <span class="built_in">mkdir</span> -p -m 0700 ~/.ssh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;[192.168.64.3]:2222 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAs5kvb4yuBB1C5yJfyav7F13MCP5Z4BJpCYq403tz2G/eyUMzJUzW+/FIIlLAffnLZxqkLpKZterXD2Ahn9KvA=&quot;</span> &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line"><span class="comment"># RUN mkdir -p -m 0700 ~/.ssh &amp;&amp; ssh-keyscan gitlab.feiyang.com &gt;&gt; ~/.ssh/known_hosts 但是我自己自定义的域名，无法解析</span></span><br><span class="line">RUN nslookup gitlab.feiyang.com</span><br><span class="line">RUN --mount=<span class="built_in">type</span>=ssh git <span class="built_in">clone</span> ssh://git@192.168.64.3:2222/feiyang/test.git</span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">ls</span> &amp;&amp; <span class="built_in">env</span> &amp;&amp; apt-get purge -y --auto-remove git</span><br><span class="line"></span><br><span class="line">CMD [ <span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-m&quot;</span> , <span class="string">&quot;flask&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;--host=0.0.0.0&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">build_docker:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker:latest</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="attr">DOCKER_HOST:</span> <span class="string">tcp://docker:2375</span></span><br><span class="line">    <span class="comment"># This instructs Docker not to start over TLS.</span></span><br><span class="line">    <span class="attr">DOCKER_TLS_CERTDIR:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">PASS_VAR:</span> <span class="string">$FEIYANG</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">curl</span> <span class="string">jq</span> <span class="string">python3</span> <span class="string">py3-pip</span> <span class="string">git</span> <span class="string">bind-tools</span> <span class="string">openssh-client</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">$DOCKERPASS</span> <span class="string">|</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">--username</span> <span class="string">$DOCKERUSER</span> <span class="string">--password-stdin</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">-m</span> <span class="number">0700</span> <span class="string">~/.ssh</span></span><br><span class="line">    <span class="comment">#- 这里本来应该是 ssh-keyscan gitlab.feiyang.com &gt;&gt; ~/.ssh/known_hosts 但是我自己自定义的域名，无法解析</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;[192.168.64.3]:2222 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAs5kvb4yuBB1C5yJfyav7F13MCP5Z4BJpCYq403tz2G/eyUMzJUzW+/FIIlLAffnLZxqkLpKZterXD2Ahn9KvA=&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">chmod</span> <span class="number">600</span> <span class="string">$SSH_TEST</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cat</span> <span class="string">/etc/hosts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">nslookup</span> <span class="string">gitlab.feiyang.com</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker:dind</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">VERSION=$&#123;CI_JOB_ID&#125;_$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">|</span> <span class="string">head</span> <span class="string">-c</span> <span class="number">8</span><span class="string">)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">DOCKER_BUILDKIT=1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">eval</span> <span class="string">$(ssh-agent)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ssh-add</span> <span class="string">$SSH_TEST</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">sre-turtle</span>  <span class="string">--ssh</span> <span class="string">default=$SSH_AUTH_SOCK</span> <span class="string">.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">tag</span> <span class="string">sre-turtle:latest</span> <span class="string">$DOCKERUSER/turtle:$VERSION</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$DOCKERUSER/turtle:$VERSION</span></span><br></pre></td></tr></table></figure><p>最后的结果 <a href="https://hub.docker.com/layers/150841970/feiyang233/turtle/177_0f142bbc/images/sha256-f340ebbc0cf763f43dcc70349cd12f313bfc1849d1489daa008e42ea087fc6ae?context=explore">成品镜像</a></p><p>可以运行如下的命令去检测 SSH key 是否存在于,新构建的镜像中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull feiyang233/turtle:177_0f142bbc</span><br><span class="line">docker run -it feiyang233/turtle:177_0f142bbc bash</span><br><span class="line"><span class="built_in">ls</span>  ~/.ssh/</span><br></pre></td></tr></table></figure><h3 id="bonus-for-sai"><a href="#bonus-for-sai" class="headerlink" title="bonus for sai"></a>bonus for sai</h3><blockquote><p>Maybe you have a question, why we need 2 docker containers, 1 stage task container, 1 service docker engine</p></blockquote><p>The answer is </p><ul><li>It’s easier and faster to use an existing image and run it as an additional container than to install docker engine</li><li>if you use dind image, please remember gitlab CI docker CMD entrypoint is <code>/bin/sh</code>, because CI job you need run script on shell</li></ul><p>But we also can try to test using only 1 container to build docker image:</p><ul><li>because gitlab start this container by <code>/bin/sh</code></li><li>we need manually run docker engine in backend and wait it startup</li><li>we also need change the deafult env of DOCKER_HOST</li></ul><p><img src="/img/vm/26.png"> </p><p>I also manually to test, see the terminal logs:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu20:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS           NAMES</span><br><span class="line">ad978e3c9250   dc8c389414c8                  <span class="string">&quot;dockerd-entrypoint.…&quot;</span>   16 seconds ago   Up 15 seconds   2375-2376/tcp   runner-supzrn4b-project-2-concurrent-0-ef2ee4c879673f88-build-2</span><br><span class="line">dea3a81e5209   gitlab/gitlab-runner:latest   <span class="string">&quot;/usr/bin/dumb-init …&quot;</span>   4 months ago     Up 46 minutes                   gitlab-runner</span><br><span class="line">root@ubuntu20:~<span class="comment"># docker exec -it ad978e3c9250 sh</span></span><br><span class="line">/ <span class="comment"># ps -ef</span></span><br><span class="line">PID   USER     TIME  COMMAND</span><br><span class="line">    1 root      0:00 /bin/sh</span><br><span class="line">   17 root      0:00 /bin/sh</span><br><span class="line">   27 root      0:00 <span class="built_in">sleep</span> 120</span><br><span class="line">   28 root      0:00 sh</span><br><span class="line">   34 root      0:00 ps -ef</span><br><span class="line">/ <span class="comment"># env | grep DOCKER_HOST</span></span><br><span class="line">CI_COMMIT_TITLE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">CI_COMMIT_MESSAGE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">/ <span class="comment"># export  DOCKER_HOST=tcp://127.0.0.1:2375</span></span><br><span class="line">/ <span class="comment"># env | grep DOCKER_HOST</span></span><br><span class="line">CI_COMMIT_TITLE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">CI_COMMIT_MESSAGE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">/ <span class="comment"># dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 </span></span><br><span class="line">INFO[2021-06-02T15:20:31.852225191Z] Starting up                                  </span><br><span class="line">WARN[2021-06-02T15:20:31.853254325Z] could not change group /var/run/docker.sock to docker: group docker not found </span><br><span class="line">WARN[2021-06-02T15:20:31.853700852Z] Binding to IP address without --tlsverify is insecure and gives root access on this machine to everyone <span class="built_in">who</span> has access to your network.  host=<span class="string">&quot;tcp://0.0.0.0:2375&quot;</span></span><br><span class="line">WARN[2021-06-02T15:20:31.853771630Z] Binding to an IP address, even on localhost, can also give access to scripts run <span class="keyword">in</span> a browser. Be safe out there!  host=<span class="string">&quot;tcp://0.0.0.0:2375&quot;</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857263870Z] Binding to an IP address without --tlsverify is deprecated. Startup is intentionally being slowed down to show this message  host=<span class="string">&quot;tcp://0.0.0.0:2375&quot;</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857418830Z] Please consider generating tls certificates with client validation to prevent exposing unauthenticated root access to your network  host=<span class="string">&quot;tcp://0.0.0.0:2375&quot;</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857466269Z] You can override this by explicitly specifying <span class="string">&#x27;--tls=false&#x27;</span> or <span class="string">&#x27;--tlsverify=false&#x27;</span>  host=<span class="string">&quot;tcp://0.0.0.0:2375&quot;</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857660544Z] Support <span class="keyword">for</span> listening on TCP without authentication or explicit intent to run without authentication will be removed <span class="keyword">in</span> the next release  host=<span class="string">&quot;tcp://0.0.0.0:2375&quot;</span></span><br><span class="line">INFO[2021-06-02T15:20:47.860746924Z] libcontainerd: started new containerd process  pid=48</span><br><span class="line">INFO[2021-06-02T15:20:47.860803013Z] parsed scheme: <span class="string">&quot;unix&quot;</span>                         module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.860813924Z] scheme <span class="string">&quot;unix&quot;</span> not registered, fallback to default scheme  module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.860830282Z] ccResolverWrapper: sending update to cc: &#123;[&#123;unix:///var/run/docker/containerd/containerd.sock  &lt;nil&gt; 0 &lt;nil&gt;&#125;] &lt;nil&gt; &lt;nil&gt;&#125;  module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.860835997Z] ClientConn switching balancer to <span class="string">&quot;pick_first&quot;</span>  module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.877826134Z] starting containerd revision=05f951a3781f4f2c1911b05e61c160e9c30eaa8e version=v1.4.4</span><br></pre></td></tr></table></figure><p>Finally, share with you the gitlab ci yaml file</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">before_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">curl</span> <span class="string">jq</span> <span class="string">python3</span> <span class="string">py3-pip</span> <span class="string">git</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">-m</span> <span class="number">0600</span> <span class="string">~/.ssh</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;[192.168.64.3]:2222 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAs5kvb4yuBB1C5yJfyav7F13MCP5Z4BJpCYq403tz2G/eyUMzJUzW+/FIIlLAffnLZxqkLpKZterXD2Ahn9KvA=&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">chmod</span> <span class="number">600</span> <span class="string">$SSH_TEST</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">export</span> <span class="string">DOCKER_HOST=tcp://127.0.0.1:2375</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nohup</span> <span class="string">dockerd</span> <span class="string">--host=unix:///var/run/docker.sock</span> <span class="string">--host=tcp://0.0.0.0:2375</span> <span class="string">&amp;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">$SSH_TEST</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sleep</span> <span class="number">30</span> <span class="comment"># it&#x27;s hard to set a best vaule</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">export</span> <span class="string">VERSION=$&#123;CI_JOB_ID&#125;_$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">|</span> <span class="string">head</span> <span class="string">-c</span> <span class="number">8</span><span class="string">)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">export</span> <span class="string">DOCKER_BUILDKIT=1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">eval</span> <span class="string">$(ssh-agent)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ssh-add</span> <span class="string">$SSH_TEST</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">sre-turtle</span>  <span class="string">--ssh</span> <span class="string">default=$SSH_AUTH_SOCK</span> <span class="string">.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">docker</span> <span class="string">tag</span> <span class="string">sre-turtle:latest</span> <span class="string">$DOCKERUSER/turtle:$VERSION</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">echo</span> <span class="string">$DOCKERPASS</span> <span class="string">|</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">--username</span> <span class="string">$DOCKERUSER</span> <span class="string">--password-stdin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$DOCKERUSER/turtle:$VERSION</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>gitlab docker in docker</th><th>pros</th><th>cons</th></tr></thead><tbody><tr><td>2 containers</td><td>official recommend<br>Automatically wait docker engine startup<br>No need setup env<br>parallel start 2 docker is faster</td><td>Use one more docker</td></tr><tr><td>1 container</td><td>one docker is enough</td><td>slower than 2 dockers<br>need more setup: env<br>unsure how long to wait docker engin startup</td></tr></tbody></table><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li><p><a href="https://blog.csdn.net/skykingf/article/details/95212146">gitlab 自定义 SSH 端口</a></p></li><li><p><a href="https://docs.gitlab.com/ee/user/packages/container_registry/#authenticate-by-using-gitlab-cicd">gitlab container registry authenticate</a></p></li><li><p>设置 CI&#x2F;CD  变量的时候, 上传 deploy key, 类型选择 file, 切记多留最后一行空白，否则会报错 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error loading key &quot;/root/.ssh/id_rsa&quot;: invalid format</span><br></pre></td></tr></table></figure><p>临时文件会在 runner 容器的 &#x2F;build&#x2F;user&#x2F;project.temp&#x2F; 下面。 比如说 <code>/builds/feiyang/test.tmp/SSH_TEST</code> </p></li><li><p><code>Error loading key &quot;/root/.ssh/id_ed25519&quot;: invalid format</code> deploy key 的类型，最好是 RSA (at least 2048-bit key size), 新的 ED25519 (preferred) 在 docker build 会报错</p></li><li><p>Host key verification failed. 两个容器都需要添加 <code>ssh-keyscan gitlab.feiyang.com &gt;&gt; ~/.ssh/known_hosts</code></p></li><li><p><a href="https://stackoverflow.com/questions/37510711/installing-ssh-keyscan-on-alpine-linux">Installing ssh-keyscan on Alpine linux?</a> 这里安装包 openssh-client 就足够了， 如果安装 openssh， 就重很多， 自带了 server 功能，不推荐.</p></li><li><p><a href="https://unix.stackexchange.com/questions/351725/why-eval-the-output-of-ssh-agent">Why eval the output of ssh-agent?</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> git </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 基础学习</title>
      <link href="/post/python-basic/"/>
      <url>/post/python-basic/</url>
      
        <content type="html"><![CDATA[<p>以此文来记录一下，我自己觉得鲜为人知的知识点。 我个人比较喜欢的网站 <a href="https://www.programiz.com/python-programming">Learn Python Programming</a></p><span id="more"></span> <h1 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h1><p>2021 年 06 月 17 日 - 更新数据结构与算法全景， 全剧终<br>2020 年 10 月 09 日 - 更新单元测试，调试和性能分析<br>2020 年 09 月 29 日 - 规范代码风格<br>2020 年 09 月 26 日 - Asyncio 协程，垃圾回收， GIL, 多进程与多线程选择<br>2020 年 09 月 25 日 - 生成器的特性，next() 函数运行的时候，保存了当前的指针<br>2020 年 09 月 24 日 - 进阶篇 list 拼接返回的是一个新的对象<br>2020 年 09 月 23 日 - 增加基础篇<br>2020 年 09 月 22 日 - 初稿</p><h1 id="知识图谱"><a href="#知识图谱" class="headerlink" title="知识图谱"></a>知识图谱</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200922195621.png"></p><h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><p>不可变类型</p><ul><li>int</li><li>float</li><li>decimal</li><li>complex</li><li>bool</li><li>string</li><li>tuple</li><li>range</li><li>frozenset</li><li>bytes</li></ul><p>可变类型</p><ul><li>list</li><li>dict</li><li>set</li><li>bytearray</li><li>user-defined classes (unless specifically made immutable)</li></ul><h2 id="列表和元组"><a href="#列表和元组" class="headerlink" title="列表和元组"></a>列表和元组</h2><ul><li><p>列表是动态的，长度大小不固定，可以随意地增加、删减或者改变元素（mutable）。</p></li><li><p>而元组是静态的，长度大小固定，无法增加删减或者改变（immutable）。</p></li><li><p>列表和元组常用的内置函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">1</span>]</span><br><span class="line">l.count(<span class="number">3</span>) </span><br><span class="line"><span class="number">2</span></span><br><span class="line">l.index(<span class="number">7</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">l.reverse()</span><br><span class="line">l</span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l.sort()</span><br><span class="line">l</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"> </span><br><span class="line">tup = (<span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">1</span>)</span><br><span class="line">tup.count(<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line">tup.index(<span class="number">7</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="built_in">list</span>(<span class="built_in">reversed</span>(tup))</span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">sorted</span>(tup)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></table></figure></li><li><p>列表和元组存储方式的差异: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l.__sizeof__()</span><br><span class="line"><span class="number">64</span></span><br><span class="line">tup = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">tup.__sizeof__()</span><br><span class="line"><span class="number">48</span></span><br></pre></td></tr></table></figure><p>由于列表是动态的，所以它需要存储指针，来指向对应的元素（上述例子中，对于 int 型，8 字节）。另外，由于列表可变，所以需要额外存储已经分配的长度大小（8 字节），这样才可以实时追踪列表空间的使用情况，当空间不足时，及时分配额外空间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line">l.__sizeof__() // 空列表的存储空间为 <span class="number">40</span> 字节</span><br><span class="line"><span class="number">40</span></span><br><span class="line">l.append(<span class="number">1</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">72</span> // 加入了元素 <span class="number">1</span> 之后，列表为其分配了可以存储 <span class="number">4</span> 个元素的空间 (<span class="number">72</span> - <span class="number">40</span>)/<span class="number">8</span> = <span class="number">4</span></span><br><span class="line">l.append(<span class="number">2</span>) </span><br><span class="line">l.__sizeof__()</span><br><span class="line"><span class="number">72</span> // 由于之前分配了空间，所以加入元素 <span class="number">2</span>，列表空间不变</span><br><span class="line">l.append(<span class="number">3</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">72</span> // 同上</span><br><span class="line">l.append(<span class="number">4</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">72</span> // 同上</span><br><span class="line">l.append(<span class="number">5</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">104</span> // 加入元素 <span class="number">5</span> 之后，列表的空间不足，所以又额外分配了可以存储 <span class="number">4</span> 个元素的空间</span><br></pre></td></tr></table></figure></li><li><p>创建一个空的列表，我们可以用下面的 A、B 两种方式，请问它们在效率上有什么区别吗？我们应该优先考虑使用哪种呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建空列表</span><br><span class="line"># option A</span><br><span class="line">empty_list = list()</span><br><span class="line"></span><br><span class="line"># option B</span><br><span class="line">empty_list = []</span><br></pre></td></tr></table></figure><p>用list()方法构造一个空列表使用的是class list([iterable])的类型构造器，参数可以是一个iterable，如果没有给出参数，构造器将创建一个空列表[ ]，相比较而言多了一步class调用和参数判断，所以用 [ ] 直接构造一个空列表的方法速度更快</p></li></ul><p>关于多变量赋值：<a href="https://blog.csdn.net/qq_35398033/article/details/108449977">https://blog.csdn.net/qq_35398033/article/details/108449977</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reverseList</span>(<span class="params">self, head: <span class="type">Optional</span>[ListNode]</span>) -&gt; <span class="type">Optional</span>[ListNode]:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> head:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">        prev = <span class="literal">None</span></span><br><span class="line">        cur = head</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">None</span>:</span><br><span class="line">            cur.<span class="built_in">next</span>, prev, cur = prev, cur, cur.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> prev</span><br></pre></td></tr></table></figure><p>三个变量同时赋值，先把右边的 3 个变量打包为元组， 然后再拆包一一对应的赋值给左边。</p><h2 id="字典、集合"><a href="#字典、集合" class="headerlink" title="字典、集合"></a>字典、集合</h2><p>那究竟什么是字典，什么是集合呢？字典是一系列由键（key）和值（value）配对组成的元素的集合，在 Python3.7+，字典被确定为有序（注意：在 3.6 中，字典有序是一个 implementation detail，在 3.7 才正式成为语言特性，因此 3.6 中无法 100% 确保其有序性），而 3.6 之前是无序的，其长度大小可变，元素可以任意地删减和改变。</p><ul><li><p>字典访问可以直接索引键，如果不存在，就会抛出异常：KeyError 也可以使用 get(key, default) 函数来进行索引。如果键不存在，调用 get() 函数可以返回一个默认值。</p></li><li><p>集合并不支持索引操作，因为集合本质上是一个哈希表，和列表不一样。</p></li><li><p>想要判断一个元素在不在字典或集合内，我们可以用 value in dict&#x2F;set 来判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="number">1</span> <span class="keyword">in</span> s</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">in</span> s</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">d = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jason&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">20</span>&#125;</span><br><span class="line"><span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> d</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="string">&#x27;location&#x27;</span> <span class="keyword">in</span> d</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li><p>集合的 pop() 操作是删除集合中最后一个元素，可是集合本身是无序的，你无法知道会删除哪个元素，因此这个操作得谨慎使用。</p></li><li><p>对于字典，我们通常会根据键或值，进行升序或降序排序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;b&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;a&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">10</span>&#125;</span><br><span class="line">d_sorted_by_key = <span class="built_in">sorted</span>(d.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>]) <span class="comment"># 根据字典键的升序排序</span></span><br><span class="line">d_sorted_by_value = <span class="built_in">sorted</span>(d.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>]) <span class="comment"># 根据字典值的升序排序</span></span><br><span class="line">d_sorted_by_key</span><br><span class="line">[(<span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;b&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;c&#x27;</span>, <span class="number">10</span>)]</span><br><span class="line">d_sorted_by_value</span><br><span class="line">[(<span class="string">&#x27;b&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;c&#x27;</span>, <span class="number">10</span>)]</span><br></pre></td></tr></table></figure></li><li><p>字典和集合的工作原理: 对于字典而言，这张表存储了哈希值（hash）、键和值这 3 个元素。而对集合来说，区别就是哈希表内没有键和值的配对，只有单一的元素了。</p></li><li><p>老版本 Python 的哈希表结构如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--+-------------------------------+</span><br><span class="line">  | 哈希值 (<span class="built_in">hash</span>)  键 (key)  值 (value)</span><br><span class="line">--+-------------------------------+</span><br><span class="line"><span class="number">0</span> |    hash0      key0    value0</span><br><span class="line">--+-------------------------------+</span><br><span class="line"><span class="number">1</span> |    hash1      key1    value1</span><br><span class="line">--+-------------------------------+</span><br><span class="line"><span class="number">2</span> |    hash2      key2    value2</span><br><span class="line">--+-------------------------------+</span><br><span class="line">. |           ...</span><br><span class="line">__+_______________________________+</span><br></pre></td></tr></table></figure><p>不难想象，随着哈希表的扩张，它会变得越来越稀疏。举个例子，比如我有这样一个字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;mike&#x27;</span>, <span class="string">&#x27;dob&#x27;</span>: <span class="string">&#x27;1999-01-01&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;male&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>那么它会存储为类似下面的形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">entries = [</span><br><span class="line">[<span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>]</span><br><span class="line">[-<span class="number">230273521</span>, <span class="string">&#x27;dob&#x27;</span>, <span class="string">&#x27;1999-01-01&#x27;</span>],</span><br><span class="line">[<span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>],</span><br><span class="line">[<span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>],</span><br><span class="line">[<span class="number">1231236123</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;mike&#x27;</span>],</span><br><span class="line">[<span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span>],</span><br><span class="line">[<span class="number">9371539127</span>, <span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;male&#x27;</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这样的设计结构显然非常浪费存储空间。为了提高存储空间的利用率，现在的哈希表除了字典本身的结构，会把索引和哈希值、键、值单独分开，也就是下面这样新的结构：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Indices</span><br><span class="line">----------------------------------------------------</span><br><span class="line"><span class="literal">None</span> | index | <span class="literal">None</span> | <span class="literal">None</span> | index | <span class="literal">None</span> | index ...</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> </span><br><span class="line">Entries</span><br><span class="line">--------------------</span><br><span class="line">hash0   key0  value0</span><br><span class="line">---------------------</span><br><span class="line">hash1   key1  value1</span><br><span class="line">---------------------</span><br><span class="line">hash2   key2  value2</span><br><span class="line">---------------------</span><br><span class="line">        ...</span><br><span class="line">---------------------</span><br></pre></td></tr></table></figure></li><li><p>删除操作 对于删除操作，Python 会暂时对这个位置的元素，赋于一个特殊的值，等到重新调整哈希表的大小时，再将其删除。不难理解，哈希冲突的发生，往往会降低字典和集合操作的速度。因此，为了保证其高效性，字典和集合内的哈希表，通常会保证其至少留有 1&#x2F;3 的剩余空间。随着元素的不停插入，当剩余空间小于 1&#x2F;3 时，Python 会重新获取更大的内存空间，扩充哈希表。不过，这种情况下，表内所有的元素位置都会被重新排放。虽然哈希冲突和哈希表大小的调整，都会导致速度减缓，但是这种情况发生的次数极少。所以，平均情况下，这仍能保证插入、查找和删除的时间复杂度为 O(1)。</p></li><li><p>下面初始化字典的方式，哪一种更高效？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Option A</span></span><br><span class="line">d = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jason&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;male&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Option B</span></span><br><span class="line">d = <span class="built_in">dict</span>(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jason&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;male&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>第一种方法更快，原因感觉上是和之前一样，就是不需要去调用相关的函数，而且像老师说的那样 {} 应该是关键字，内部会去直接调用底层C写好的代码</p></li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li><p>什么是字符串呢？字符串是由独立字符组成的一个序列，通常包含在单引号（’’）双引号（””）或者三引号之中（’’’ ‘’’或””” “””，两者一样</p></li><li><p>Python 同时支持这三种表达方式，很重要的一个原因就是，这样方便你在字符串中，内嵌带引号的字符串。比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;I&#x27;m a student&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200922211447.png"></p></li><li><p>特别要注意，Python 的字符串是不可变的（immutable）。因此，用下面的操作，来改变一个字符串内部的字符是错误的，不允许的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">s[<span class="number">0</span>] = <span class="string">&#x27;H&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;str&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br></pre></td></tr></table></figure><p>Python 中字符串的改变，通常只能通过创建新的字符串来完成。比如上述例子中，想把’hello’的第一个字符’h’，改为大写的’H’，我们可以采用下面的做法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;H&#x27;</span> + s[<span class="number">1</span>:]</span><br><span class="line">s = s.replace(<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;H&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>使用加法操作符’+&#x3D;’的字符串拼接方法。因为它是一个例外，打破了字符串不可变的特性。从 Python2.5 开始，每次处理字符串的拼接操作时（str1 +&#x3D; str2），Python 首先会检测 str1 还有没有其他的引用。如果没有的话，就会尝试原地扩充字符串 buffer 的大小，而不是重新分配一块内存来创建新的字符串并拷贝。</p></li><li><p>字符串的格式化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;no data available for person with id: &#123;&#125;, name: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>, name))</span><br></pre></td></tr></table></figure></li></ul><h2 id="输入与输出"><a href="#输入与输出" class="headerlink" title="输入与输出"></a>输入与输出</h2><ul><li>input() 函数暂停程序运行，同时等待键盘输入；直到回车被按下，函数的参数即为提示语，输入的类型永远是字符串型（str）。</li><li>json.dumps() 这个函数，接受 Python 的基本数据类型，然后将其序列化为 string；</li><li>json.loads() 这个函数，接受一个合法字符串，然后将其反序列化为 Python 的基本数据类型。</li></ul><h2 id="条件与循环"><a href="#条件与循环" class="headerlink" title="条件与循环"></a>条件与循环</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200923062014.png"></p><ul><li><p>在实际写代码时，我们鼓励，除了 boolean 类型的数据，条件判断最好是显性的。比如，在判断一个整型数是否为 0 时，我们最好写出判断的条件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if i != 0:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>而不是只写出变量名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if i:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>刷题时，反转链表那一题：只写变量名字， 判断链表时， call <strong>bool</strong>() 耗费的时间太多了<br><a href="https://stackoverflow.com/questions/7816363/if-a-vs-if-a-is-not-none">https://stackoverflow.com/questions/7816363/if-a-vs-if-a-is-not-none</a></p></li><li><p>当我们同时需要索引和元素时，还有一种更简洁的方式，那就是通过 Python 内置的函数 enumerate()。用它来遍历集合，不仅返回每个元素，并且还返回其对应的索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">l = [1, 2, 3, 4, 5, 6, 7]</span><br><span class="line">for index, item in enumerate(l):</span><br><span class="line">    if index &lt; 5:</span><br><span class="line">        print(item)  </span><br><span class="line">              </span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure></li><li><p>在循环语句中，我们还常常搭配 continue 和 break 一起使用。所谓 continue，就是让程序跳过当前这层循环，继续执行下面的循环；而 break 则是指完全跳出所在的整个循环体。在循环中适当加入 continue 和 break，往往能使程序更加简洁、易读。</p></li><li><p>for 循环和 while 循环可以互相转换。通常来说，如果你只是遍历一个已知的集合，找出满足条件的元素，并进行相应的操作，那么使用 for 循环更加简洁。但如果你需要在满足某个条件前，不停地重复某些操作，并且没有特定的集合需要去遍历，那么一般则会使用 while 循环。</p></li><li><p>for 循环和 while 循环的效率问题。比如下面的 while 循环：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">1000000</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>和等价的 for 循环：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for i in range(0, 1000000):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure><p>range() 函数是直接由 C 语言写的，调用它速度非常快。而 while 循环中的“i +&#x3D; 1”这个操作，得通过 Python 的解释器间接调用底层的 C 语言；并且这个简单的操作，又涉及到了对象的创建和删除（因为 i 是整型，是 immutable，i +&#x3D; 1 相当于 i &#x3D; new int(i + 1)）。所以，显然，for 循环的效率更胜一筹。</p></li><li><p>expression1 if condition else expression2 for item in iterable </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable:</span><br><span class="line">    <span class="keyword">if</span> condition:</span><br><span class="line">        expression1</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        expression2</span><br></pre></td></tr></table></figure><p>而如果没有 else 语句，则需要写成：expression for item in iterable if condition</p></li><li><p>[(xx, yy) for xx in x for yy in y if xx !&#x3D; yy]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> xx <span class="keyword">in</span> x:</span><br><span class="line">    <span class="keyword">for</span> yy <span class="keyword">in</span> y:</span><br><span class="line">        <span class="keyword">if</span> xx != yy:</span><br><span class="line">            l.append((xx, yy))</span><br></pre></td></tr></table></figure></li><li><p>[dict(zip(attributes, value)) for value in values]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">attributes = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;dob&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>]</span><br><span class="line">values = [[<span class="string">&#x27;jason&#x27;</span>, <span class="string">&#x27;2000-01-01&#x27;</span>, <span class="string">&#x27;male&#x27;</span>], </span><br><span class="line">[<span class="string">&#x27;mike&#x27;</span>, <span class="string">&#x27;1999-01-01&#x27;</span>, <span class="string">&#x27;male&#x27;</span>],</span><br><span class="line">[<span class="string">&#x27;nancy&#x27;</span>, <span class="string">&#x27;2001-02-01&#x27;</span>, <span class="string">&#x27;female&#x27;</span>]</span><br><span class="line">]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># expected outout:</span></span><br><span class="line">[&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;jason&#x27;</span>, <span class="string">&#x27;dob&#x27;</span>: <span class="string">&#x27;2000-01-01&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;male&#x27;</span>&#125;, </span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;mike&#x27;</span>, <span class="string">&#x27;dob&#x27;</span>: <span class="string">&#x27;1999-01-01&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;male&#x27;</span>&#125;, </span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;nancy&#x27;</span>, <span class="string">&#x27;dob&#x27;</span>: <span class="string">&#x27;2001-02-01&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;female&#x27;</span>&#125;]</span><br></pre></td></tr></table></figure></li></ul><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ul><li>程序中的错误至少包括两种，一种是语法错误，另一种则是异常。</li><li>很多时候，我们很难保证程序覆盖所有的异常类型，所以，更通常的做法，是在最后一个 except block，声明其处理的异常类型是 Exception。Exception 是其他所有非系统异常的基类，能够匹配任意非系统异常。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s = <span class="built_in">input</span>(<span class="string">&#x27;please enter two numbers separated by comma: &#x27;</span>)</span><br><span class="line">    num1 = <span class="built_in">int</span>(s.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>].strip())</span><br><span class="line">    num2 = <span class="built_in">int</span>(s.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>].strip())</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> err:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Value Error: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(err))</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> err:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Index Error: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(err))</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Other error: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(err))</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;continue&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>当程序中存在多个 except block 时，最多只有一个 except block 会被执行。换句话说，如果多个 except 声明的异常类型都与实际相匹配，那么只有最前面的 except block 会被执行，其他则被忽略。</li><li>异常处理中，还有一个很常见的用法是 finally，经常和 try、except 放在一起来用。无论发生什么情况，finally block 中的语句都会被执行，哪怕前面的 try 和 excep block 中使用了 return 语句。</li><li>用户自定义异常</li><li>When an exception has been assigned using as target, it is cleared at the end of the except clause. 这句话意思是，如果你在异常处理的 except block 中，把异常赋予了一个变量，那么这个变量会在 except block 执行结束时被删除</li></ul><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><ul><li><p>和其他需要编译的语言（比如 C 语言）不一样的是，def 是可执行语句，这意味着函数直到被调用前，都是不存在的。当程序调用函数时，def 语句才会创建一个新的函数对象，并赋予其名字。</p></li><li><p>主程序调用函数时，必须保证这个函数此前已经定义过，不然就会报错</p></li><li><p>如果我们在函数内部调用其他函数，函数间哪个声明在前、哪个在后就无所谓，因为 def 是可执行语句，函数在调用之前都不存在，我们只需保证调用时，所需的函数都已经声明定义</p></li><li><p>Python 不用考虑输入的数据类型，而是将其交给具体的代码去判断执行，同样的一个函数（比如这边的相加函数 my_sum()），可以同时应用在整型、列表、字符串等等的操作中。在编程语言中，我们把这种行为称为多态。</p></li><li><p>所谓的函数嵌套，就是指函数里面又有函数。第一，函数的嵌套能够保证内部函数的隐私。第二，合理的使用函数嵌套，能够提高程序的运行效率。</p></li><li><p>如果变量是在函数内部定义的，就称为局部变量，只在函数内部有效。一旦函数执行完毕，局部变量就会被回收，无法访问</p></li><li><p>不能在函数内部随意改变全局变量的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MIN_VALUE = <span class="number">1</span></span><br><span class="line">MAX_VALUE = <span class="number">10</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validation_check</span>(<span class="params">value</span>):</span><br><span class="line">    MIN_VALUE += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">validation_check(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">UnboundLocalError: local variable <span class="string">&#x27;MIN_VALUE&#x27;</span> referenced before assignment</span><br></pre></td></tr></table></figure><p>如果我们一定要在函数内部改变全局变量的值，就必须加上 global 这个声明。这里的 global 关键字，并不表示重新创建了一个全局变量 MIN_VALUE，而是告诉 Python 解释器，函数内部的变量 MIN_VALUE，就是之前定义的全局变量，并不是新的全局变量，也不是局部变量。这样，程序就可以在函数内部访问全局变量，并修改它的值了。另外，如果遇到函数内部局部变量和全局变量同名的情况，那么在函数内部，局部变量会覆盖全局变量</p></li><li><p>对于嵌套函数来说，内部函数可以访问外部函数定义的变量，但是无法修改，若要修改，必须加上 nonlocal 这个关键字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    x = <span class="string">&quot;local&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> x <span class="comment"># nonlocal 关键字表示这里的 x 就是外部函数 outer 定义的变量 x</span></span><br><span class="line">        x = <span class="string">&#x27;nonlocal&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;inner:&quot;</span>, x)</span><br><span class="line">    inner()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;outer:&quot;</span>, x)</span><br><span class="line">outer()</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">inner: <span class="keyword">nonlocal</span></span><br><span class="line">outer: <span class="keyword">nonlocal</span></span><br></pre></td></tr></table></figure><p>如果不加上 nonlocal 这个关键字，而内部函数的变量又和外部函数变量同名，那么同样的，内部函数变量会覆盖外部函数的变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    x = <span class="string">&quot;local&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        x = <span class="string">&#x27;nonlocal&#x27;</span> <span class="comment"># 这里的 x 是 inner 这个函数的局部变量</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;inner:&quot;</span>, x)</span><br><span class="line">    inner()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;outer:&quot;</span>, x)</span><br><span class="line">outer()</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">inner: <span class="keyword">nonlocal</span></span><br><span class="line">outer: local</span><br></pre></td></tr></table></figure></li><li><p>闭包（closure)返回的是一个函数</p></li></ul><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><ul><li><p>lambda argument1, argument2,… argumentN : expression</p></li><li><p>匿名函数 lambda 和常规函数一样，返回的都是一个函数对象（function object）</p></li><li><p>lambda 是一个表达式（expression），并不是一个语句（statement）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Program to show the use of lambda functions</span></span><br><span class="line">double = <span class="keyword">lambda</span> x: x * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(double(<span class="number">5</span>)) <span class="comment"># 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># is nearly the same as:</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">double</span>(<span class="params">x</span>):</span><br><span class="line">   <span class="keyword">return</span> x * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example use with filter()</span></span><br><span class="line"><span class="comment"># Program to filter out only the even items from a list</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">new_list = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: (x%<span class="number">2</span> == <span class="number">0</span>) , my_list))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(new_list)</span><br><span class="line">[<span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example use with map()</span></span><br><span class="line"><span class="comment"># Program to double each item in a list using map()</span></span><br><span class="line"></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">new_list = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x * <span class="number">2</span> , my_list))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(new_list)</span><br><span class="line">[<span class="number">2</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">24</span>]</span><br></pre></td></tr></table></figure></li><li><p>所谓的表达式，就是用一系列“公式”去表达一个东西，比如x + 2、 x**2等等；</p></li><li><p>所谓的语句，则一定是完成了某些功能，比如赋值语句x &#x3D; 1完成了赋值，print 语句print(x)完成了打印，条件语句 if x &lt; 0:完成了选择功能等等。</p></li><li><p>所谓函数式编程，是指代码中每一块都是不可变的（immutable），都由纯函数（pure function）的形式组成。这里的纯函数，是指函数本身相互独立、互不影响，对于相同的输入，总会有相同的输出，没有任何副作用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">multiply_2</span>(<span class="params">l</span>):</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(l)):</span><br><span class="line">        l[index] *= <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> l</span><br></pre></td></tr></table></figure><p>这段代码就不是一个纯函数的形式，因为列表中元素的值被改变了，如果我多次调用 multiply_2() 这个函数，那么每次得到的结果都不一样。要想让它成为一个纯函数的形式，就得写成下面这种形式，重新创建一个新的列表并返回。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">multiply_2_pure</span>(<span class="params">l</span>):</span><br><span class="line">    new_list = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> l:</span><br><span class="line">        new_list.append(item * <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> new_list</span><br></pre></td></tr></table></figure></li><li><p>函数式编程的优点，主要在于其纯函数和不可变的特性使程序更加健壮，易于调试（debug）和测试；缺点主要在于限制多，难写。</p></li><li><p>map(function, iterable) </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python3 -mtimeit -s<span class="string">&#x27;xs=range(1000000)&#x27;</span> <span class="string">&#x27;map(lambda x: x*2, xs)&#x27;</span></span><br><span class="line"><span class="number">2000000</span> loops, best of <span class="number">5</span>: <span class="number">171</span> nsec per loop</span><br><span class="line"> </span><br><span class="line">python3 -mtimeit -s<span class="string">&#x27;xs=range(1000000)&#x27;</span> <span class="string">&#x27;[x * 2 for x in xs]&#x27;</span></span><br><span class="line"><span class="number">5</span> loops, best of <span class="number">5</span>: <span class="number">62.9</span> msec per loop</span><br><span class="line"> </span><br><span class="line">python3 -mtimeit -s<span class="string">&#x27;xs=range(1000000)&#x27;</span> <span class="string">&#x27;l = []&#x27;</span> <span class="string">&#x27;for i in xs: l.append(i * 2)&#x27;</span></span><br><span class="line"><span class="number">5</span> loops, best of <span class="number">5</span>: <span class="number">92.7</span> msec per loop</span><br></pre></td></tr></table></figure><p>map() 是最快的。因为 map() 函数直接由 C 语言写的，运行时不需要通过 Python 解释器间接调用，并且内部做了诸多优化，所以运行速度最快。</p></li><li><p>对一个字典，根据值进行由高到底的排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;mike&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;lucy&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;ben&#x27;</span>: <span class="number">30</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sorted</span>(d.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解释一下 Python Dictionary items()</span></span><br><span class="line"><span class="comment"># returns a view object that displays a list of a given dictionary&#x27;s (key, value) tuple pair.</span></span><br><span class="line"><span class="comment"># random sales dictionary</span></span><br><span class="line">sales = &#123; <span class="string">&#x27;apple&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;orange&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;grapes&#x27;</span>: <span class="number">4</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sales.items())</span><br><span class="line">dict_items([(<span class="string">&#x27;apple&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;orange&#x27;</span>, <span class="number">3</span>), (<span class="string">&#x27;grapes&#x27;</span>, <span class="number">4</span>)])</span><br></pre></td></tr></table></figure></li></ul><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><ul><li>面向对象编程四要素是：类，属性，函数，对象，</li><li>OOP (object oriented programming) </li><li>如果一个属性以 __ （注意，此处有两个 _） 开头，我们就默认这个属性是私有属性。私有属性，是指不希望在类的函数之外的地方被访问和修改的属性</li><li>类函数、成员函数和静态函数三个概念。它们其实很好理解，前两者产生的影响是动态的，能够访问或者修改对象的属性；而静态函数则与类没有什么关联，最明显的特征便是，静态函数的第一个参数没有任何特殊性。</li><li>首先需要注意的是构造函数。每个类都有构造函数，继承类在生成对象的时候，是不会自动调用父类的构造函数的，因此你必须在 init() 函数中显式调用父类的构造函数。它们的执行顺序是 子类的构造函数 -&gt; 父类的构造函数。</li><li>抽象类是一种特殊的类，它生下来就是作为父类存在的，一旦对象化就会报错。同样，抽象函数定义在抽象类之中，子类必须重写该函数才能使用。相应的抽象函数，则是使用装饰器 @abstractmethod 来表示。</li><li>super(Parents_Name, self).<strong>init</strong>()直接初始化该类的第一个父类，不过使用这种方法时，要求继承链的最顶层父类必须要继承 object；</li><li>对于多重继承，如果有多个构造函数需要调用， 我们就必须用传统的方法 LRUCache.<strong>init</strong>(self) 。</li></ul><h2 id="Python-模块化"><a href="#Python-模块化" class="headerlink" title="Python 模块化"></a>Python 模块化</h2><ul><li>import 同一个模块只会被执行一次，这样就可以防止重复导入模块出现问题。当然，良好的编程习惯应该杜绝代码多次导入的情况。在 Facebook 的编程规范中，除了一些极其特殊的情况，import 必须位于程序的最前端。</li><li>你可能在许多教程中看到过这样的要求：我们还需要在模块所在的文件夹新建一个 <strong>init</strong>.py，内容可以为空，也可以用来表述包对外暴露的模块接口。不过，事实上，这是 Python 2 的规范。在 Python 3 规范中，<strong>init</strong>.py 并不是必须的，很多教程里没提过这一点，或者没讲明白，我希望你还是能注意到这个地方。</li><li>一个 Python 文件在运行的时候，都会有一个运行时位置，最开始时即为这个文件所在的文件夹。</li><li>以项目的根目录作为最基本的目录，所有的模块调用，都要通过根目录一层层向下索引的方式来 import。</li><li>Python 解释器在遇到 import 的时候，它会在一个特定的列表中寻找模块。这个特定的列表，可以用下面的方式拿到：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys  </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sys.path)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">[<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;/usr/lib/python36.zip&#x27;</span>, <span class="string">&#x27;/usr/lib/python3.6&#x27;</span>, <span class="string">&#x27;/usr/lib/python3.6/lib-dynload&#x27;</span>, <span class="string">&#x27;/usr/local/lib/python3.6/dist-packages&#x27;</span>, <span class="string">&#x27;/usr/lib/python3/dist-packages&#x27;</span>]</span><br></pre></td></tr></table></figure>修改 PYTHONHOME。Python 的 Virtual Environment（虚拟运行环境）。Python 可以通过 Virtualenv 工具，非常方便地创建一个全新的 Python 运行环境。</li><li>神奇的 if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘  Python 是脚本语言，和 C++、Java 最大的不同在于，不需要显式提供 main() 函数入口。既然 Python 可以直接写代码，if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘ 这样的写法，除了能让 Python 代码更好看（更像 C++ ）外，还有什么好处吗？import 在导入文件的时候，会自动把所有暴露在外面的代码全都执行一遍。因此，如果你要把一个东西封装成模块，又想让它可以执行的话，你必须将要执行的代码放在 if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘下面。</li></ul><h2 id="列表和元组的内部实现"><a href="#列表和元组的内部实现" class="headerlink" title="列表和元组的内部实现"></a>列表和元组的内部实现</h2><ul><li>Python 3.7 的 list 源码。<br> listobject.h：<a href="https://github.com/python/cpython/blob/949fe976d5c62ae63ed505ecf729f815d0baccfc/Include/listobject.h#L23">https://github.com/python/cpython/blob/949fe976d5c62ae63ed505ecf729f815d0baccfc/Include/listobject.h#L23</a><br> listobject.c: <a href="https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/listobject.c#L33">https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/listobject.c#L33</a><br> list 本质上是一个 over-allocate 的 array。allocated &gt;&#x3D; len(list) &#x3D; ob_size。</li><li>我们再来分析元组。下面是 Python 3.7 的 tuple 源码<br>tupleobject.h： <a href="https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Include/tupleobject.h#L25">https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Include/tupleobject.h#L25</a><br>tupleobject.c：<a href="https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/tupleobject.c#L16">https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/tupleobject.c#L16</a><br>tuple本质也是一个 array，但是空间大小固定。不同于一般 array，Python 的 tuple 做了许多优化，来提升在程序中的效率。当 tuple 的大小不超过 20 时，Python 就会把它缓存在内部的一个 free list 中。这样，如果你以后需要再去创建同样的 tuple，Python 就可以直接从缓存中载入，提高了程序运行效率。</li></ul><h2 id="全局变量的修改"><a href="#全局变量的修改" class="headerlink" title="全局变量的修改"></a>全局变量的修改</h2><ul><li>当全局变量指向的对象不可变时，比如是整型、字符串等等，如果你尝试在函数内部改变它的值，却不加关键字 global，就会抛出异常：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    x += <span class="number">1</span></span><br><span class="line">func()</span><br><span class="line">x</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">UnboundLocalError: local variable <span class="string">&#x27;x&#x27;</span> referenced before assignment</span><br></pre></td></tr></table></figure></li><li>如果全局变量指向的对象是可变的，比如是列表、字典等等，你就可以在函数内部修改它了：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>]</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    x.append(<span class="number">2</span>)</span><br><span class="line">func()</span><br><span class="line">x</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure>当然，需要注意的是，这里的x.append(2)，并没有改变变量 x，x 依然指向原来的列表。事实上，这句话的意思是，访问 x 指向的列表，并在这个列表的末尾增加 2。</li></ul><h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><h2 id="Python对象的比较、拷贝"><a href="#Python对象的比较、拷贝" class="headerlink" title="Python对象的比较、拷贝"></a>Python对象的比较、拷贝</h2><ul><li><p>‘&#x3D;&#x3D;’ VS ‘is’   等于（&#x3D;&#x3D;）和 is 是 Python 中对象比较常用的两种方式。简单来说，’&#x3D;&#x3D;’操作符比较对象之间的值是否相等；而’is’操作符比较的是对象的身份标识是否相等，即它们是否是同一个对象，是否指向同一个内存地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line"> </span><br><span class="line">a == b</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">id</span>(a)</span><br><span class="line"><span class="number">4427562448</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">id</span>(b)</span><br><span class="line"><span class="number">4427562448</span></span><br><span class="line"> </span><br><span class="line">a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>首先 Python 会为 10 这个值开辟一块内存，然后变量 a 和 b 同时指向这块内存区域，即 a 和 b 都是指向 10 这个变量，因此 a 和 b 的值相等，id 也相等，a &#x3D;&#x3D; b和a is b都返回 True。不过，需要注意，对于整型数字来说，以上a is b为 True 的结论，只适用于 -5 到 256 范围内的数字<br>事实上，出于对性能优化的考虑，Python 内部会对 -5 到 256 的整型维持一个数组，起到一个缓存的作用。这样，每次你试图创建一个 -5 到 256 范围内的整型数字时，Python 都会从这个数组中返回相对应的引用，而不是重新开辟一块新的内存空间。</p></li><li><p>比较操作符’is’的速度效率，通常要优于’&#x3D;&#x3D;’ 因为’is’操作符不能被重载，这样，Python 就不需要去寻找，程序中是否有其他地方重载了比较操作符，并去调用。执行比较操作符’is’，就仅仅是比较两个变量的 ID 而已。但是’&#x3D;&#x3D;’操作符却不同，执行a &#x3D;&#x3D; b相当于是去执行a.<strong>eq</strong>(b)，而 Python 大部分的数据类型都会去重载__eq__这个函数，其内部的处理通常会复杂一些。比如，对于列表，__eq__函数会去遍历列表中的元素，比较它们的顺序和值是否相等。</p></li><li><p>浅拷贝（shallow copy）常见的浅拷贝的方法，是使用数据类型本身的构造器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l2 = <span class="built_in">list</span>(l1)</span><br><span class="line"> </span><br><span class="line">l2</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"> </span><br><span class="line">l1 == l2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">l1 <span class="keyword">is</span> l2</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">s1 = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">s2 = <span class="built_in">set</span>(s1)</span><br><span class="line"> </span><br><span class="line">s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"> </span><br><span class="line">s1 == s2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">s1 <span class="keyword">is</span> s2</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>l2 就是 l1 的浅拷贝，s2 是 s1 的浅拷贝。当然，对于可变的序列，我们还可以通过切片操作符’:’完成浅拷贝</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l2 = l1[:]</span><br><span class="line"> </span><br><span class="line">l1 == l2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">l1 <span class="keyword">is</span> l2</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>当然，Python 中也提供了相对应的函数 copy.copy()，适用于任何数据类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l2 = copy.copy(l1)</span><br></pre></td></tr></table></figure><p>不过，需要注意的是，对于元组，使用 tuple() 或者切片操作符’:’不会创建一份浅拷贝，相反，它会返回一个指向相同元组的引用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t1 = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">t2 = <span class="built_in">tuple</span>(t1)</span><br><span class="line"> </span><br><span class="line">t1 == t2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">t1 <span class="keyword">is</span> t2</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure></li><li><p>浅拷贝，是指重新分配一块内存，创建一个新的对象，里面的元素是原对象中子对象的引用。因此，如果原对象中的元素不可变，那倒无所谓；但如果元素可变，浅拷贝通常会带来一些副作用，尤其需要注意</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">l1 = [[1, 2], (30, 40)]</span><br><span class="line">l2 = list(l1)</span><br><span class="line">l1.append(100)</span><br><span class="line">l1[0].append(3)</span><br><span class="line"> </span><br><span class="line">l1</span><br><span class="line">[[1, 2, 3], (30, 40), 100]</span><br><span class="line"> </span><br><span class="line">l2</span><br><span class="line">[[1, 2, 3], (30, 40)]</span><br><span class="line"> </span><br><span class="line">l1[1] += (50, 60)</span><br><span class="line">l1</span><br><span class="line">[[1, 2, 3], (30, 40, 50, 60), 100]</span><br><span class="line"> </span><br><span class="line">l2</span><br><span class="line">[[1, 2, 3], (30, 40)]</span><br></pre></td></tr></table></figure><p>l1.append(100)，表示对 l1 的列表新增元素 100。这个操作不会对 l2 产生任何影响，因为 l2 和 l1 作为整体是两个不同的对象，并不共享内存地址。再来看，l1[0].append(3)，这里表示对 l1 中的第一个列表新增元素 3。因为 l2 是 l1 的浅拷贝，l2 中的第一个元素和 l1 中的第一个元素，共同指向同一个列表，因此 l2 中的第一个列表也会相对应的新增元素 3。操作后 l1 和 l2 都会改变。最后是l1[1] +&#x3D; (50, 60)，因为元组是不可变的，这里表示对 l1 中的第二个元组拼接，然后重新创建了一个新元组作为 l1 中的第二个元素，而 l2 中没有引用新元组，因此 l2 并不受影响。操作后 l2 不变，l1 发生改变</p></li><li><p>深度拷贝，是指重新分配一块内存，创建一个新的对象，并且将原对象中的元素，以递归的方式，通过创建新的子对象拷贝到新对象中。因此，新对象和原对象没有任何关联。深度拷贝也不是完美的，往往也会带来一系列问题。如果被拷贝对象中存在指向自身的引用，那么程序很容易陷入无限循环</p></li><li><p>RecursionError: maximum recursion depth exceeded in comparison</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">x = [<span class="number">1</span>]</span><br><span class="line">x.append(x)</span><br><span class="line"> </span><br><span class="line">y = copy.deepcopy(x)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 以下命令的输出是？</span></span><br><span class="line">x == y</span><br></pre></td></tr></table></figure></li><li><p>列表 self append 无限嵌套的原理</p></li></ul><ol><li>x 指向一个列表，列表的第一个元素为 1；执行了 append 操作后，第二个元素又反过来指向 x，即指向了 x 所指向的列表，因此形成了一个无限嵌套的循环：[1, [1, [1, [1, …]]]]。</li><li>虽然 x 是无限嵌套的列表，但 x.append(x) 的操作，并不会递归遍历其中的每一个元素。它只是扩充了原列表的第二个元素，并将其指向 x，因此不会出现 stack overflow 的问题，自然不会报错。</li><li>为什么 len(x) 返回的是 2？我们还是来看 x，虽然它是无限嵌套的列表，但 x 的 top level 只有 2 个元素组成，第一个元素为 1，第二个元素为指向自身的列表，因此 len(x) 返回 2。</li></ol><h2 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h2><ul><li><p>所谓值传递，通常就是拷贝参数的值，然后传递给函数里的新变量。</p></li><li><p>所谓引用传递，通常是指把参数的引用传给新的变量，这样，原变量和新变量就会指向同一块内存地址。如果改变了其中任何一个变量的值，那么另外一个变量也会相应地随之改变。</p></li><li><p>Python 的数据类型，例如整型（int）、字符串（string）等等，是不可变的。所以，a &#x3D; a + 1，并不是让 a 的值增加 1，而是表示重新创建了一个新的值为 2 的对象，并让 a 指向它。但是 b 仍然不变，仍然指向 1 这个对象。</p></li><li><p>由于列表是可变的，所以 l1.append(4) 不会创建新的列表，只是在原列表的末尾插入了元素 4，变成 [1, 2, 3, 4]。由于 l1 和 l2 同时指向这个列表，所以列表的变化会同时反映在 l1 和 l2 这两个变量上，那么，l1 和 l2 的值就同时变为了 [1, 2, 3, 4]。</p></li><li><p>需要注意的是，Python 里的变量可以被删除，但是对象无法被删除。比如下面的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">del</span> l</span><br></pre></td></tr></table></figure><p>del l 删除了 l 这个变量，从此以后你无法访问 l，但是对象 [1, 2, 3] 仍然存在。Python 程序运行时，其自带的垃圾回收系统会跟踪每个对象的引用。如果 [1, 2, 3] 除了 l 外，还在其他地方被引用，那就不会被回收，反之则会被回收。</p></li><li><p>变量的赋值，只是表示让变量指向了某个对象，并不表示拷贝对象给变量；而一个对象，可以被多个变量所指向。</p></li><li><p>可变对象（列表，字典，集合等等）的改变，会影响所有指向该对象的变量。</p></li><li><p>对于不可变对象（字符串，整型，元祖等等），所有指向该对象的变量的值总是一样的，也不会改变。但是通过某些操作（+&#x3D; 等等）更新不可变对象的值时，会返回一个新的对象。</p></li><li><p>变量可以被删除，但是对象无法被删除。</p></li><li><p>Python 的参数传递是赋值传递 （pass by assignment），或者叫作对象的引用传递（pass by object reference）。Python 里所有的数据类型都是对象，所以参数传递时，只是让新变量与原变量指向相同的对象而已，并不存在值传递或是引用传递一说。</p></li><li><p>当可变对象当作参数传入函数里的时候，改变可变对象的值，就会影响所有指向它的变量。比如下面的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_func3</span>(<span class="params">l2</span>):</span><br><span class="line">    l2.append(<span class="number">4</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;l2 id is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(l2)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;l1 id is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(l1)))</span><br><span class="line"></span><br><span class="line">my_func3(l1)</span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">l1 <span class="built_in">id</span> <span class="keyword">is</span> <span class="number">4358387328</span></span><br><span class="line">l2 <span class="built_in">id</span> <span class="keyword">is</span> <span class="number">4358387328</span></span><br></pre></td></tr></table></figure><p>这里 l1 和 l2 先是同时指向值为 [1, 2, 3] 的列表。不过，由于列表可变，执行 append() 函数，对其末尾加入新元素 4 时，变量 l1 和 l2 的值也都随之改变了。</p></li><li><p>但是，下面这个例子，看似都是给列表增加了一个新元素，却得到了明显不同的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_func3</span>(<span class="params">l2</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;before joint l2 id is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(l2)))</span><br><span class="line">    l2 = l2 + [<span class="number">4</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;after joint l2 id is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(l2)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;l1 id is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(l1)))</span><br><span class="line"></span><br><span class="line">my_func3(l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">l1 <span class="built_in">id</span> <span class="keyword">is</span> <span class="number">4448097856</span></span><br><span class="line">before joint l2 <span class="built_in">id</span> <span class="keyword">is</span> <span class="number">4448097856</span></span><br><span class="line">after joint l2 <span class="built_in">id</span> <span class="keyword">is</span> <span class="number">4448100544</span></span><br></pre></td></tr></table></figure><p>要注意，这里 l2 &#x3D; l2 + [4]，表示拼接两个 List，返回一个新的 List。这个过程与 l1 无关，l1还是引用的原值。</p></li><li><p>Python 中参数的传递既不是值传递，也不是引用传递，而是赋值传递，或者是叫对象的引用传递。需要注意的是，这里的赋值或对象的引用传递，不是指向一个具体的内存地址，而是指向一个具体的对象。</p></li><li><p>如果对象是可变的，当其改变时，所有指向这个对象的变量都会改变。</p></li><li><p>如果对象不可变，简单的赋值只能改变其中一个变量的值，其余变量则不受影响。</p></li><li><p>如果你想通过一个函数来改变某个变量的值，通常有两种方法。一种是直接将可变数据类型（比如列表，字典，集合）当作参数传入，直接在其上修改；第二种则是创建一个新变量，来保存修改后的值，然后将其返回给原变量。在实际工作中，我们更倾向于使用后者，因为其表达清晰明了，不易出错。</p></li></ul><h2 id="装饰器-decorator"><a href="#装饰器-decorator" class="headerlink" title="装饰器 decorator"></a>装饰器 decorator</h2><p>所谓的装饰器，其实就是通过装饰器函数，来修改原函数的一些功能，使得原函数不需要修改。<br>Decorators is to modify the behavior of the function through a wrapper so we don’t have to actually modify the function.</p><ul><li>函数的返回值也可以是函数对象（闭包）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func_closure</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_message</span>(<span class="params">message</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Got a message: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(message))</span><br><span class="line">    <span class="keyword">return</span> get_message</span><br><span class="line"> </span><br><span class="line">send_message = func_closure()</span><br><span class="line">send_message(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">Got a message: hello world</span><br></pre></td></tr></table></figure>这里函数 func_closure() 的返回值是函数对象 get_message() 本身</li><li>我们通常使用内置的装饰器@functools.wrap，它会帮助保留原函数的元信息（也就是将原函数的元信息，拷贝到对应的装饰器函数里）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_decorator</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;wrapper of decorator&#x27;</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line">    </span><br><span class="line"><span class="meta">@my_decorator</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="built_in">print</span>(message)</span><br><span class="line"> </span><br><span class="line">greet.__name__</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="string">&#x27;greet&#x27;</span></span><br></pre></td></tr></table></figure></li><li>类也可以作为装饰器。类装饰器主要依赖于函数__call_()，每当你调用一个类的示例时，函数__call__()就会被执行一次。</li><li>装饰器的嵌套<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@decorator1</span></span><br><span class="line"><span class="meta">@decorator2</span></span><br><span class="line"><span class="meta">@decorator3</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 它的执行顺序从里到外，所以上面的语句也等效于下面这行代码：</span></span><br><span class="line">decorator1(decorator2(decorator3(func)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x27;hello world&#x27;这个例子，就可以改写成下面这样：</span></span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_decorator1</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;execute decorator1&#x27;</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_decorator2</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;execute decorator2&#x27;</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@my_decorator1</span></span><br><span class="line"><span class="meta">@my_decorator2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="built_in">print</span>(message)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">greet(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">execute decorator1</span><br><span class="line">execute decorator2</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure></li><li>装饰器用法实例<ul><li><p>身份认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import functools</span><br><span class="line"></span><br><span class="line">def authenticate(func):</span><br><span class="line">    @functools.wraps(func)</span><br><span class="line">    def wrapper(*args, **kwargs):</span><br><span class="line">        request = args[0]</span><br><span class="line">        if check_user_logged_in(request): # 如果用户处于登录状态</span><br><span class="line">            return func(*args, **kwargs) # 执行函数 post_comment() </span><br><span class="line">        else:</span><br><span class="line">            raise Exception(&#x27;Authentication failed&#x27;)</span><br><span class="line">    return wrapper</span><br><span class="line">    </span><br><span class="line">@authenticate</span><br><span class="line">def post_comment(request, ...)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>日志记录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">log_execution_time</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        start = time.perf_counter()</span><br><span class="line">        res = func(*args, **kwargs)</span><br><span class="line">        end = time.perf_counter()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; took &#123;&#125; ms&#x27;</span>.<span class="built_in">format</span>(func.__name__, (end - start) * <span class="number">1000</span>))</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line">    </span><br><span class="line"><span class="meta">@log_execution_time</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_similarity</span>(<span class="params">items</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li><li><p>输入合理性检查</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validation_check</span>(<span class="params"><span class="built_in">input</span></span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>): </span><br><span class="line">        ... <span class="comment"># 检查输入是否合法</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">@validation_check</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">neural_network_training</span>(<span class="params">param1, param2, ...</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li><li><p>缓存 LRU cache，在 Python 中的表示形式是@lru_cache。@lru_cache会缓存进程中的函数参数和结果，当缓存满了以后，会删除 least recenly used 的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@lru_cache</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">param1, param2, ...</span>) <span class="comment"># 检查用户设备类型，版本号等等</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="metaclass"><a href="#metaclass" class="headerlink" title="metaclass"></a>metaclass</h2><p>事实上，meta-class 的 meta 这个词根，起源于希腊语词汇 meta，包含下面两种意思：</p><ul><li><p>“Beyond”，例如技术词汇 metadata，意思是描述数据的超越数据；</p></li><li><p>“Change”，例如技术词汇 metamorphosis，意思是改变的形态。<br>metaclass，一如其名，实际上同时包含了“超越类”和“变形类”的含义，完全不是“基本类”的意思。所以，要深入理解 metaclass，我们就要围绕它的超越变形特性。</p></li><li><p>所有的 Python 的用户定义类，都是 type 这个类的实例。</p></li><li><p>用户自定义类，只不过是 type 类的__call__运算符重载。</p></li><li><p>metaclass 是 type 的子类，通过替换 type 的__call__运算符重载机制，“超越变形”正常的类。</p></li></ul><h2 id="迭代器和生成器"><a href="#迭代器和生成器" class="headerlink" title="迭代器和生成器"></a>迭代器和生成器</h2><p>在 Python 中一切皆对象，对象的抽象就是类，而对象的集合就是容器。列表（list: [0, 1, 2]），元组（tuple: (0, 1, 2)），字典（dict: {0:0, 1:1, 2:2}），集合（set: set([0, 1, 2])）都是容器。</p><ul><li><p>严谨地说，迭代器（iterator）提供了一个 next 的方法。调用这个方法后，你要么得到这个容器的下一个对象，要么得到一个 StopIteration 的错误。你不需要像列表一样指定元素的索引，因为字典和集合这样的容器并没有索引一说。比如，字典采用哈希表实现，那么你就只需要知道，next 函数可以不重复不遗漏地一个一个拿到所有元素即可。</p></li><li><p>生成器是懒人版本的迭代器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_iterator</span>():</span><br><span class="line">    show_memory_info(<span class="string">&#x27;initing iterator&#x27;</span>)</span><br><span class="line">    list_1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">&#x27;after iterator initiated&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">sum</span>(list_1))</span><br><span class="line">    show_memory_info(<span class="string">&#x27;after sum called&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_generator</span>():</span><br><span class="line">    show_memory_info(<span class="string">&#x27;initing generator&#x27;</span>)</span><br><span class="line">    list_2 = (i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000000</span>))</span><br><span class="line">    show_memory_info(<span class="string">&#x27;after generator initiated&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">sum</span>(list_2))</span><br><span class="line">    show_memory_info(<span class="string">&#x27;after sum called&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">%time test_iterator()</span><br><span class="line">%time test_generator()</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initing iterator memory used: <span class="number">48.9765625</span> MB</span><br><span class="line">after iterator initiated memory used: <span class="number">3920.30078125</span> MB</span><br><span class="line"><span class="number">4999999950000000</span></span><br><span class="line">after <span class="built_in">sum</span> called memory used: <span class="number">3920.3046875</span> MB</span><br><span class="line">Wall time: <span class="number">17</span> s</span><br><span class="line">initing generator memory used: <span class="number">50.359375</span> MB</span><br><span class="line">after generator initiated memory used: <span class="number">50.359375</span> MB</span><br><span class="line"><span class="number">4999999950000000</span></span><br><span class="line">after <span class="built_in">sum</span> called memory used: <span class="number">50.109375</span> MB</span><br><span class="line">Wall time: <span class="number">12.5</span> s</span><br></pre></td></tr></table></figure><p>在你调用 next() 函数的时候，才会生成下一个变量。生成器在 Python 的写法是用小括号括起来，(i for i in range(100000000))，即初始化了一个生成器。生成器并不会像迭代器一样占用大量内存，只有在被使用的时候才会调用。而且生成器在初始化的时候，并不需要运行一次生成操作，相比于 test_iterator() ，test_generator() 函数节省了一次生成一亿个元素的过程，因此耗时明显比迭代器短。</p></li><li><p><a href="https://www.programiz.com/python-programming/generator">yield</a> 是魔术的关键。可以理解为，函数运行到这一行的时候，程序会从这里暂停，然后跳出到 next() 函数。那么 yield i ** k 是干什么的呢？它其实成了 next() 函数的返回值。</p></li><li><p>迭代器是一个有限集合，生成器则可以成为一个无限集。</p></li><li><p>给定一个 list 和一个指定数字，求这个数字在 list 中的位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">index_generator</span>(<span class="params">L, target</span>):</span><br><span class="line">    <span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(L):</span><br><span class="line">        <span class="keyword">if</span> num == target:</span><br><span class="line">            <span class="keyword">yield</span> i</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(index_generator([<span class="number">1</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>], <span class="number">2</span>)))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">[<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p>唯一需要强调的是， index_generator 会返回一个 Generator 对象，需要使用 list 转换为列表后，才能用 print 输出。</p></li><li><p>给定两个序列，判定第一个是不是第二个的子序列。（LeetCode 链接如下：<a href="https://leetcode.com/problems/is-subsequence/">https://leetcode.com/problems/is-subsequence/</a> ）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def is_subsequence(a, b):</span><br><span class="line">    b = iter(b)</span><br><span class="line">    return all(i in b for i in a)</span><br><span class="line"> </span><br><span class="line">print(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))</span><br><span class="line">print(is_subsequence([1, 4, 3], [1, 2, 3, 4, 5]))</span><br><span class="line"> </span><br><span class="line">########## 输出 ##########</span><br><span class="line"> </span><br><span class="line">True</span><br><span class="line">False</span><br></pre></td></tr></table></figure><p>这里的(i in b)，大致等价于下面这段代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    val = <span class="built_in">next</span>(b)</span><br><span class="line">    <span class="keyword">if</span> val == i:</span><br><span class="line">        <span class="keyword">yield</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>这里非常巧妙地利用生成器的特性，next() 函数运行的时候，保存了当前的指针。</p></li><li><p>容器是可迭代对象，可迭代对象调用 iter() 函数，可以得到一个迭代器。迭代器可以通过 next() 函数来得到下一个元素，从而支持遍历。</p></li><li><p>生成器是一种特殊的迭代器（注意这个逻辑关系反之不成立）。使用生成器，你可以写出来更加清晰的代码；合理使用生成器，可以降低内存占用、优化程序结构、提高程序速度。</p></li><li><p>生成器在 Python 2 的版本上，是协程的一种重要实现方式；而 Python 3.5 引入 async await 语法糖后，生成器实现协程的方式就已经落后了。我们会在下节课，继续深入讲解 Python 协程。</p></li></ul><h2 id="协程-asyncio"><a href="#协程-asyncio" class="headerlink" title="协程 asyncio"></a>协程 asyncio</h2><ul><li>协程和多线程的区别，主要在于两点，一是协程为单线程；二是协程由用户决定，在哪些地方交出控制权，切换到下一个任务。</li><li>协程的写法更加简洁清晰，把 async &#x2F; await 语法和 create_task 结合来用，对于中小级别的并发需求已经毫无压力。</li><li>写协程程序的时候，你的脑海中要有清晰的事件循环概念，知道程序在什么时候需要暂停、等待 I&#x2F;O，什么时候需要一并执行到底。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">crawl_page</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;crawling &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(url))</span><br><span class="line">    sleep_time = <span class="built_in">int</span>(url.split(<span class="string">&#x27;_&#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(sleep_time)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;OK &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(url))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">urls</span>):</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        <span class="keyword">await</span> crawl_page(url)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main([<span class="string">&#x27;url_1&#x27;</span>, <span class="string">&#x27;url_2&#x27;</span>, <span class="string">&#x27;url_3&#x27;</span>, <span class="string">&#x27;url_4&#x27;</span>]))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">crawling url_1</span><br><span class="line">OK url_1</span><br><span class="line">crawling url_2</span><br><span class="line">OK url_2</span><br><span class="line">crawling url_3</span><br><span class="line">OK url_3</span><br><span class="line">crawling url_4</span><br><span class="line">OK url_4</span><br><span class="line">Wall time: <span class="number">10</span> s</span><br></pre></td></tr></table></figure><p>async 修饰词声明异步函数，于是，这里的 crawl_page 和 main 都变成了异步函数。而调用异步函数，我们便可得到一个协程对象（coroutine object）。<br>await 是同步调用，因此， crawl_page(url) 在当前的调用结束之前，是不会触发下一次调用的。于是，这个代码效果就和上面完全一样了，相当于我们用异步接口写了个同步代码。</p><ul><li>执行协程有三种方法：</li></ul><ol><li>首先，我们可以通过 await 来调用。await 执行的效果，和 Python 正常执行是一样的，也就是说程序会阻塞在这里，进入被调用的协程函数，执行完毕返回后再继续，而这也是 await 的字面意思</li><li>其次，我们可以通过 asyncio.create_task() 来创建任务</li><li>最后，我们需要 asyncio.run 来触发运行。asyncio.run 这个函数是 Python 3.7 之后才有的特性，可以让 Python 的协程接口变得非常简单，你不用去理会事件循环怎么定义和怎么使用的问题（我们会在下面讲）。一个非常好的编程规范是，asyncio.run(main()) 作为主程序的入口函数，在程序运行周期内，只调用一次 asyncio.run。</li></ol><ul><li><p>通过 asyncio.create_task 来创建任务。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">crawl_page</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;crawling &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(url))</span><br><span class="line">    sleep_time = <span class="built_in">int</span>(url.split(<span class="string">&#x27;_&#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(sleep_time)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;OK &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(url))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">urls</span>):</span><br><span class="line">    tasks = [asyncio.create_task(crawl_page(url)) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        <span class="keyword">await</span> task</span><br><span class="line"></span><br><span class="line">asyncio.run(main([<span class="string">&#x27;url_1&#x27;</span>, <span class="string">&#x27;url_2&#x27;</span>, <span class="string">&#x27;url_3&#x27;</span>, <span class="string">&#x27;url_4&#x27;</span>]))</span><br></pre></td></tr></table></figure></li><li><p>对于执行 tasks，还有另一种做法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">crawl_page</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;crawling &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(url))</span><br><span class="line">    sleep_time = <span class="built_in">int</span>(url.split(<span class="string">&#x27;_&#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(sleep_time)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;OK &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(url))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">urls</span>):</span><br><span class="line">    tasks = [asyncio.create_task(crawl_page(url)) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main([<span class="string">&#x27;url_1&#x27;</span>, <span class="string">&#x27;url_2&#x27;</span>, <span class="string">&#x27;url_3&#x27;</span>, <span class="string">&#x27;url_4&#x27;</span>]))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">crawling url_1</span><br><span class="line">crawling url_2</span><br><span class="line">crawling url_3</span><br><span class="line">crawling url_4</span><br><span class="line">OK url_1</span><br><span class="line">OK url_2</span><br><span class="line">OK url_3</span><br><span class="line">OK url_4</span><br><span class="line">Wall time: <span class="number">4.01</span> s</span><br></pre></td></tr></table></figure><p>唯一要注意的是，*tasks 解包列表，将列表变成了函数的参数；与之对应的是， ** dict 将字典变成了函数的参数。<br>asyncio.create_task，asyncio.run 这些函数都是 Python 3.7 以上的版本才提供的，自然，相比于旧接口它们也更容易理解和阅读。</p></li><li><p>解密协程运行时<br>顺序执行的时候</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_1 start&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_1 done&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_2</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_2 start&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_2 done&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;before await&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> worker_1()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;awaited worker_1&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> worker_2()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;awaited worker_2&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">before <span class="keyword">await</span></span><br><span class="line">worker_1 start</span><br><span class="line">worker_1 done</span><br><span class="line">awaited worker_1</span><br><span class="line">worker_2 start</span><br><span class="line">worker_2 done</span><br><span class="line">awaited worker_2</span><br><span class="line">Wall time: <span class="number">3</span> s</span><br></pre></td></tr></table></figure><p>并发执行的时候</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_1 start&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_1 done&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_2</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_2 start&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;worker_2 done&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    task1 = asyncio.create_task(worker_1())</span><br><span class="line">    task2 = asyncio.create_task(worker_2())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;before await&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> task1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;awaited worker_1&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> task2</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;awaited worker_2&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">before <span class="keyword">await</span></span><br><span class="line">worker_1 start</span><br><span class="line">worker_2 start</span><br><span class="line">worker_1 done</span><br><span class="line">awaited worker_1</span><br><span class="line">worker_2 done</span><br><span class="line">awaited worker_2</span><br><span class="line">Wall time: <span class="number">2.01</span> s</span><br></pre></td></tr></table></figure><p>为了更详细了解到协程和线程的具体区别，这里详细地分析了整个过程。步骤有点多，别着急，慢慢来看。</p></li></ul><ol><li>asyncio.run(main())，程序进入 main() 函数，事件循环开启；</li><li>task1 和 task2 任务被创建，并进入事件循环等待运行；运行到 print，输出 ‘before await’；</li><li>await task1 执行，用户选择从当前的主任务中切出，事件调度器开始调度 worker_1；</li><li>worker_1 开始运行，运行 print 输出’worker_1 start’，然后运行到 await asyncio.sleep(1)， 从当前任务切出，事件调度器开始调度 worker_2；</li><li>worker_2 开始运行，运行 print 输出 ‘worker_2 start’，然后运行 await asyncio.sleep(2) 从当前任务切出；</li><li>以上所有事件的运行时间，都应该在 1ms 到 10ms 之间，甚至可能更短，事件调度器从这个时候开始暂停调度；</li><li>一秒钟后，worker_1 的 sleep 完成，事件调度器将控制权重新传给 task_1，输出 ‘worker_1 done’，task_1 完成任务，从事件循环中退出；</li><li>await task1 完成，事件调度器将控制器传给主任务，输出 ‘awaited worker_1’，·然后在 await task2 处继续等待；</li><li>两秒钟后，worker_2 的 sleep 完成，事件调度器将控制权重新传给 task_2，输出 ‘worker_2 done’，task_2 完成任务，从事件循环中退出；</li><li>主任务输出 ‘awaited worker_2’，协程全任务结束，事件循环结束。</li></ol><ul><li>如果我们想给某些协程任务限定运行时间，一旦超时就取消，又该怎么做呢？再进一步，如果某些协程运行时出现错误，又该怎么处理呢？<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_time</span>(<span class="params">s=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">    now = datetime.now()</span><br><span class="line">    current_time = now.strftime(<span class="string">&quot;%H:%M:%S&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; Current Time =&#123;&#125;&quot;</span>.<span class="built_in">format</span>(s, current_time))</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_1</span>():</span><br><span class="line">    print_time(<span class="string">&quot;start work1&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print_time(<span class="string">&quot;end work1&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_2</span>():</span><br><span class="line">    print_time(<span class="string">&quot;start work2&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    print_time(<span class="string">&quot;end work2&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> / <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_3</span>():</span><br><span class="line">    print_time(<span class="string">&quot;start work3&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">3</span>)</span><br><span class="line">    print_time(<span class="string">&quot;end work3&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    task_1 = asyncio.create_task(worker_1())</span><br><span class="line">    task_2 = asyncio.create_task(worker_2())</span><br><span class="line">    task_3 = asyncio.create_task(worker_3())</span><br><span class="line">    print_time(<span class="string">&quot;start work in main&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    print_time(<span class="string">&quot;end work in main&quot;</span>)</span><br><span class="line">    task_3.cancel()</span><br><span class="line"></span><br><span class="line">    res = <span class="keyword">await</span> asyncio.gather(task_1, task_2, task_3, return_exceptions=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line">start work <span class="keyword">in</span> main Current Time =<span class="number">14</span>:<span class="number">41</span>:05</span><br><span class="line">start work1 Current Time =<span class="number">14</span>:<span class="number">41</span>:05</span><br><span class="line">start work2 Current Time =<span class="number">14</span>:<span class="number">41</span>:05</span><br><span class="line">start work3 Current Time =<span class="number">14</span>:<span class="number">41</span>:05</span><br><span class="line">end work1 Current Time =<span class="number">14</span>:<span class="number">41</span>:06</span><br><span class="line">end work <span class="keyword">in</span> main Current Time =<span class="number">14</span>:<span class="number">41</span>:07</span><br><span class="line">end work2 Current Time =<span class="number">14</span>:<span class="number">41</span>:07</span><br><span class="line">[<span class="number">1</span>, ZeroDivisionError(<span class="string">&#x27;division by zero&#x27;</span>), CancelledError()]</span><br></pre></td></tr></table></figure></li></ul><ol><li>从 main 函数程序入口开始，创建 3 个 task，进入事件循环等待运行。运行 await asyncio.sleep(2) 从当前主任务切出；</li><li>运行 task1, 又是await，切换到 task2， 还是 await， 切换到 task3，再次 await， 切回主任务。</li><li>一秒钟后，worker_1 的 sleep 完成，事件调度器将控制权重新传给 task_1， task1 结束。</li><li>两秒钟后，主程序的 sleep 完成， 取消 task_3.cancel()。</li><li>紧接着， task2 sleep 完成, 事件调度器将控制器 task2, task2 完成</li><li>task3 因为已经取消了，协程全任务结束，事件循环结束。</li><li>最后打印出结果，很稳</li></ol><p>worker_1 正常运行，worker_2 运行中出现错误，worker_3 执行时间过长被我们 cancel 掉了，这些信息会全部体现在最终的返回结果 res 中。不过要注意return_exceptions&#x3D;True这行代码。如果不设置这个参数，错误就会完整地 throw 到我们这个执行层，从而需要 try except 来捕捉，这也就意味着其他还没被执行的任务会被全部取消掉。为了避免这个局面，我们将 return_exceptions 设置为 True 即可。</p><ul><li>用协程来实现一个经典的生产者消费者模型<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_1</span>():</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_2</span>():</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> / <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">worker_3</span>():</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    task_1 = asyncio.create_task(worker_1())</span><br><span class="line">    task_2 = asyncio.create_task(worker_2())</span><br><span class="line">    task_3 = asyncio.create_task(worker_3())</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    task_3.cancel()</span><br><span class="line"> </span><br><span class="line">    res = <span class="keyword">await</span> asyncio.gather(task_1, task_2, task_3, return_exceptions=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">[<span class="number">1</span>, ZeroDivisionError(<span class="string">&#x27;division by zero&#x27;</span>), CancelledError()]</span><br><span class="line">Wall time: <span class="number">2</span> s</span><br><span class="line">你可以看到，worker_1 正常运行，worker_2 运行中出现错误，worker_3 执行时间过长被我们 cancel 掉了，这些信息会全部体现在最终的返回结果 res 中。</span><br><span class="line"></span><br><span class="line">不过要注意return_exceptions=<span class="literal">True</span>这行代码。如果不设置这个参数，错误就会完整地 throw 到我们这个执行层，从而需要 <span class="keyword">try</span> <span class="keyword">except</span> 来捕捉，这也就意味着其他还没被执行的任务会被全部取消掉。为了避免这个局面，我们将 return_exceptions 设置为 <span class="literal">True</span> 即可。</span><br><span class="line"></span><br><span class="line">到这里，发现了没，线程能实现的，协程都能做到。那就让我们温习一下这些知识点，用协程来实现一个经典的生产者消费者模型吧。</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">consumer</span>(<span class="params">queue, <span class="built_in">id</span></span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        val = <span class="keyword">await</span> queue.get()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; get a val: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>, val))</span><br><span class="line">        <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">producer</span>(<span class="params">queue, <span class="built_in">id</span></span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        val = random.randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">await</span> queue.put(val)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; put a val: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>, val))</span><br><span class="line">        <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    queue = asyncio.Queue()</span><br><span class="line"> </span><br><span class="line">    consumer_1 = asyncio.create_task(consumer(queue, <span class="string">&#x27;consumer_1&#x27;</span>))</span><br><span class="line">    consumer_2 = asyncio.create_task(consumer(queue, <span class="string">&#x27;consumer_2&#x27;</span>))</span><br><span class="line"> </span><br><span class="line">    producer_1 = asyncio.create_task(producer(queue, <span class="string">&#x27;producer_1&#x27;</span>))</span><br><span class="line">    producer_2 = asyncio.create_task(producer(queue, <span class="string">&#x27;producer_2&#x27;</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">10</span>)</span><br><span class="line">    consumer_1.cancel()</span><br><span class="line">    consumer_2.cancel()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(consumer_1, consumer_2, producer_1, producer_2, return_exceptions=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">producer_1 put a val: <span class="number">5</span></span><br><span class="line">producer_2 put a val: <span class="number">3</span></span><br><span class="line">consumer_1 get a val: <span class="number">5</span></span><br><span class="line">consumer_2 get a val: <span class="number">3</span></span><br><span class="line">producer_1 put a val: <span class="number">1</span></span><br><span class="line">producer_2 put a val: <span class="number">3</span></span><br><span class="line">consumer_2 get a val: <span class="number">1</span></span><br><span class="line">consumer_1 get a val: <span class="number">3</span></span><br><span class="line">producer_1 put a val: <span class="number">6</span></span><br><span class="line">producer_2 put a val: <span class="number">10</span></span><br><span class="line">consumer_1 get a val: <span class="number">6</span></span><br><span class="line">consumer_2 get a val: <span class="number">10</span></span><br><span class="line">producer_1 put a val: <span class="number">4</span></span><br><span class="line">producer_2 put a val: <span class="number">5</span></span><br><span class="line">consumer_2 get a val: <span class="number">4</span></span><br><span class="line">consumer_1 get a val: <span class="number">5</span></span><br><span class="line">producer_1 put a val: <span class="number">2</span></span><br><span class="line">producer_2 put a val: <span class="number">8</span></span><br><span class="line">consumer_1 get a val: <span class="number">2</span></span><br><span class="line">consumer_2 get a val: <span class="number">8</span></span><br><span class="line">Wall time: <span class="number">10</span> s</span><br></pre></td></tr></table></figure></li></ul><h2 id="并发编程之Futures"><a href="#并发编程之Futures" class="headerlink" title="并发编程之Futures"></a>并发编程之Futures</h2><ul><li><p>并发，通过线程和任务之间互相切换的方式实现，但同一时刻，只允许有一个线程或任务执行。并发通常应用于 I&#x2F;O 操作频繁的场景，比如你要从网站上下载多个文件，I&#x2F;O 操作的时间可能会比 CPU 运行处理的时间长得多。</p></li><li><p>而并行，则是指多个进程完全同步同时的执行。并行则更多应用于 CPU heavy 的场景，比如 MapReduce 中的并行计算，为了加快运行速度，一般会用多台机器、多个处理器来完成。</p></li><li><p>在 Python 中，并发并不是指同一时刻有多个操作（thread、task）同时进行。相反，某个特定的时刻，它只允许有一个操作发生，只不过线程 &#x2F; 任务之间会互相切换，直到完成。</p></li><li><p>对于 threading，操作系统知道每个线程的所有信息，因此它会做主在适当的时候做线程切换。很显然，这样的好处是代码容易书写，因为程序员不需要做任何切换操作的处理；但是切换线程的操作，也有可能出现在一个语句执行的过程中（比如 x +&#x3D; 1），这样就容易出现 race condition 的情况。</p></li><li><p>对于 asyncio，主程序想要切换任务时，必须得到此任务可以被切换的通知，这样一来也就可以避免刚刚提到的 race condition 的情况。</p></li><li><p>所谓的并行，指的才是同一时刻、同时发生。Python 中的 multi-processing 便是这个意思，对于 multi-processing，你可以简单地这么理解：比如你的电脑是 6 核处理器，那么在运行程序时，就可以强制 Python 开 6 个进程，同时执行，以加快运行速度</p></li><li><p>我们具体来看这段代码，它是多线程版本和单线程版的主要区别所在：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> executor:</span><br><span class="line">     executor.<span class="built_in">map</span>(download_one, sites)</span><br></pre></td></tr></table></figure><p>我们创建了一个线程池，总共有 5 个线程可以分配使用。executer.map() 与前面所讲的 Python 内置的 map() 函数类似，表示对 sites 中的每一个元素，并发地调用函数 download_one()。顺便提一下，在 download_one() 函数中，我们使用的 requests.get() 方法是线程安全的（thread-safe），因此在多线程的环境下，它也可以安全使用，并不会出现 race condition 的情况。</p></li><li><p>我们也可以用并行的方式去提高程序运行效率。你只需要在 download_all() 函数中，做出下面的变化即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> futures.ThreadPoolExecutor(workers) <span class="keyword">as</span> executor</span><br><span class="line">=&gt;</span><br><span class="line"><span class="keyword">with</span> futures.ProcessPoolExecutor() <span class="keyword">as</span> executor: </span><br></pre></td></tr></table></figure><p>在需要修改的这部分代码中，函数 ProcessPoolExecutor() 表示创建进程池，使用多个进程并行的执行程序。不过，这里我们通常省略参数 workers，因为系统会自动返回 CPU 的数量作为可以调用的进程数。</p></li><li><p>到底什么是 Futures<br>Python 中的 Futures 模块，位于 concurrent.futures 和 asyncio 中，它们都表示带有延迟的操作。Futures 会将处于等待状态的操作包裹起来放到队列中，这些操作的状态随时可以查询，当然，它们的结果或是异常，也能够在操作完成后被获取。Futures 中的 Executor 类，当我们执行 executor.submit(func) 时，它便会安排里面的 func() 函数执行，并返回创建好的 future 实例，以便你之后查询调用。</p></li><li><p>Futures 中的方法 done()，表示相对应的操作是否完成——True 表示完成，False 表示没有完成。不过，要注意，done() 是 non-blocking 的，会立即返回结果。相对应的 add_done_callback(fn)，则表示 Futures 完成后，相对应的参数函数 fn，会被通知并执行调用。</p></li><li><p>Futures 中还有一个重要的函数 result()，它表示当 future 完成后，返回其对应的结果或异常。而 as_completed(fs)，则是针对给定的 future 迭代器 fs，在其完成后，返回完成后的迭代器。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> concurrent.futures</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_one</span>(<span class="params">url</span>):</span><br><span class="line">    resp = requests.get(url)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Read &#123;&#125; from &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(resp.content), url))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_all</span>(<span class="params">sites</span>):</span><br><span class="line">    <span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> executor:</span><br><span class="line">        to_do = []</span><br><span class="line">        <span class="keyword">for</span> site <span class="keyword">in</span> sites:</span><br><span class="line">            future = executor.submit(download_one, site)</span><br><span class="line">            to_do.append(future)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> future <span class="keyword">in</span> concurrent.futures.as_completed(to_do):</span><br><span class="line">            future.result()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    sites = [</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Arts&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:History&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Society&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Biography&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Mathematics&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Technology&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Geography&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Science&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Computer_science&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Python_(programming_language)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Java_(programming_language)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/PHP&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Node.js&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/The_C_Programming_Language&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Go_(programming_language)&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">    start_time = time.perf_counter()</span><br><span class="line">    download_all(sites)</span><br><span class="line">    end_time = time.perf_counter()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Download &#123;&#125; sites in &#123;&#125; seconds&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(sites), end_time - start_time))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">Read <span class="number">129886</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Arts</span><br><span class="line">Read <span class="number">107634</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Biography</span><br><span class="line">Read <span class="number">224118</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Society</span><br><span class="line">Read <span class="number">158984</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Mathematics</span><br><span class="line">Read <span class="number">184343</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:History</span><br><span class="line">Read <span class="number">157949</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Technology</span><br><span class="line">Read <span class="number">167923</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Geography</span><br><span class="line">Read <span class="number">94228</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Science</span><br><span class="line">Read <span class="number">391905</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Python_(programming_language)</span><br><span class="line">Read <span class="number">321352</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Computer_science</span><br><span class="line">Read <span class="number">180298</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Node.js</span><br><span class="line">Read <span class="number">321417</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Java_(programming_language)</span><br><span class="line">Read <span class="number">468421</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/PHP</span><br><span class="line">Read <span class="number">56765</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/The_C_Programming_Language</span><br><span class="line">Read <span class="number">324039</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Go_(programming_language)</span><br><span class="line">Download <span class="number">15</span> sites <span class="keyword">in</span> <span class="number">0.21698231499976828</span> seconds</span><br></pre></td></tr></table></figure><p>这里，我们首先调用 executor.submit()，将下载每一个网站的内容都放进 future 队列 to_do，等待执行。然后是 as_completed() 函数，在 future 完成后，便输出结果。</p><p>不过，这里要注意，future 列表中每个 future 完成的顺序，和它在列表中的顺序并不一定完全一致。到底哪个先完成、哪个后完成，取决于系统的调度和每个 future 的执行时间。</p><ul><li>为什么多线程每次只能有一个线程执行？<br>同一时刻，Python 主程序只允许有一个线程执行，所以 Python 的并发，是通过多线程的切换完成的。Python 的解释器并不是线程安全的，为了解决由此带来的 race condition 等问题，Python 便引入了全局解释器锁，也就是同一时刻，只允许一个线程执行。当然，在执行 I&#x2F;O 操作时，如果一个线程被 block 了，全局解释器锁便会被释放，从而让另一个线程能够继续执行。</li></ul><h2 id="并发编程之Asyncio"><a href="#并发编程之Asyncio" class="headerlink" title="并发编程之Asyncio"></a>并发编程之Asyncio</h2><p>在处理 I&#x2F;O 操作时，使用多线程与普通的单线程相比，效率得到了极大的提高。你可能会想，既然这样，为什么还需要 Asyncio？</p><ol><li>比如，多线程运行过程容易被打断，因此有可能出现 race condition 的情况；</li><li>再如，线程切换本身存在一定的损耗，线程数不能无限增加，因此，如果你的 I&#x2F;O 操作非常 heavy，多线程很有可能满足不了高效率、高质量的需求。</li></ol><p>Sync VS Async</p><ul><li><p>所谓 Sync，是指操作一个接一个地执行，下一个操作必须等上一个操作完成后才能执行。</p></li><li><p>而 Async 是指不同操作间可以相互交替执行，如果其中的某个操作被 block 了，程序并不会等待，而是会找出可执行的操作继续执行。</p></li><li><p>事实上，Asyncio 和其他 Python 程序一样，是单线程的，它只有一个主线程，但是可以进行多个不同的任务（task），这里的任务，就是特殊的 future 对象。这些不同的任务，被一个叫做 event loop 的对象所控制。你可以把这里的任务，类比成多线程版本里的多个线程。<br>为了简化讲解这个问题，我们可以假设任务只有两个状态：一是预备状态；二是等待状态。所谓的预备状态，是指任务目前空闲，但随时待命准备运行。而等待状态，是指任务已经运行，但正在等待外部的操作完成，比如 I&#x2F;O 操作。<br>在这种情况下，event loop 会维护两个任务列表，分别对应这两种状态；并且选取预备状态的一个任务（具体选取哪个任务，和其等待的时间长短、占用的资源等等相关），使其运行，一直到这个任务把控制权交还给 event loop 为止。<br>当任务把控制权交还给 event loop 时，event loop 会根据其是否完成，把任务放到预备或等待状态的列表，然后遍历等待状态列表的任务，查看他们是否完成。<br>如果完成，则将其放到预备状态的列表；如果未完成，则继续放在等待状态的列表。这样，当所有任务被重新放置在合适的列表后，新一轮的循环又开始了：event loop 继续从预备状态的列表中选取一个任务使其执行…如此周而复始，直到所有任务完成。</p></li><li><p>值得一提的是，对于 Asyncio 来说，它的任务在运行时不会被外部的一些因素打断，因此 Asyncio 内的操作不会出现 race condition 的情况，这样你就不需要担心线程安全的问题了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download_one</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Read &#123;&#125; from &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(resp.content_length, url))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download_all</span>(<span class="params">sites</span>):</span><br><span class="line">    tasks = [asyncio.create_task(download_one(site)) <span class="keyword">for</span> site <span class="keyword">in</span> sites]</span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    sites = [</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Arts&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:History&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Society&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Biography&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Mathematics&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Technology&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Geography&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Portal:Science&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Computer_science&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Python_(programming_language)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Java_(programming_language)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/PHP&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Node.js&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/The_C_Programming_Language&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://en.wikipedia.org/wiki/Go_(programming_language)&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">    start_time = time.perf_counter()</span><br><span class="line">    asyncio.run(download_all(sites))</span><br><span class="line">    end_time = time.perf_counter()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Download &#123;&#125; sites in &#123;&#125; seconds&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(sites), end_time - start_time))</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>这里的 Async 和 await 关键字是 Asyncio 的最新写法，表示这个语句 &#x2F; 函数是 non-block 的，正好对应前面所讲的 event loop 的概念。如果任务执行的过程需要等待，则将其放入等待状态的列表中，然后继续执行预备状态列表里的任务。</p></li><li><p>主函数里的 asyncio.run(coro) 是 Asyncio 的 root call，表示拿到 event loop，运行输入的 coro，直到它结束，最后关闭这个 event loop。事实上，asyncio.run() 是 Python3.7+ 才引入的</p></li><li><p>这里的asyncio.create_task(coro)，表示对输入的协程 coro 创建一个任务，安排它的执行，并返回此任务对象。这个函数也是 Python 3.7+ 新增的，如果是之前的版本，你可以用asyncio.ensure_future(coro)等效替代。可以看到，这里我们对每一个网站的下载，都创建了一个对应的任务。</p></li><li><p>asyncio.gather(*aws, loop&#x3D;None, return_exception&#x3D;False)，则表示在 event loop 中运行aws序列的所有任务。当然，除了例子中用到的这几个函数，Asyncio 还提供了很多其他的用法，你可以查看 <a href="https://docs.python.org/3/library/asyncio-eventloop.html">相应文档</a> 进行了解。</p></li><li><p>Asyncio 有缺陷吗？想用好 Asyncio，特别是发挥其强大的功能，很多情况下必须得有相应的 Python 库支持。</p></li><li><p>多线程还是 Asyncio, 总的来说，你可以遵循以下伪代码的规范：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> io_bound:</span><br><span class="line">    <span class="keyword">if</span> io_slow:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Use Asyncio&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Use multi-threading&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> cpu_bound:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Use multi-processing&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>如果是 I&#x2F;O bound，并且 I&#x2F;O 操作很慢，需要很多任务 &#x2F; 线程协同实现，那么使用 Asyncio 更合适。</p></li><li><p>如果是 I&#x2F;O bound，但是 I&#x2F;O 操作很快，只需要有限数量的任务 &#x2F; 线程，那么使用多线程就可以了。</p></li><li><p>如果是 CPU bound，则需要使用多进程来提高程序运行效率。</p></li></ul><h2 id="Python-GIL（全局解释器锁）"><a href="#Python-GIL（全局解释器锁）" class="headerlink" title="Python GIL（全局解释器锁）"></a>Python GIL（全局解释器锁）</h2><ul><li>Python 的线程，的的确确封装了底层的操作系统线程，在 Linux 系统里是 Pthread（全称为 POSIX Thread），而在 Windows 系统里是 Windows Thread。另外，Python 的线程，也完全受操作系统管理，比如协调何时执行、管理内存资源、管理中断等等。所以，虽然 Python 的线程和 C++ 的线程本质上是不同的抽象，但它们的底层并没有什么不同。</li><li>GIL，是最流行的 Python 解释器 CPython 中的一个技术术语。它的意思是全局解释器锁，本质上是类似操作系统的 Mutex。每一个 Python 线程，在 CPython 解释器中执行时，都会先锁住自己的线程，阻止别的线程执行。当然，CPython 会做一些小把戏，轮流执行 Python 线程。这样一来，用户看到的就是“伪并行”——Python 线程在交错执行，来模拟真正并行的线程。</li><li>CPython 使用引用计数来管理内存，所有 Python 脚本中创建的实例，都会有一个引用计数，来记录有多少个指针指向它。当引用计数只有 0 时，则会自动释放内存。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.getrefcount(a)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>这个例子中，a 的引用计数是 3，因为有 a、b 和作为参数传递的 getrefcount 这三个地方，都引用了一个空列表。</li><li>CPython 引进 GIL 其实主要就是这么两个原因：一是设计者为了规避类似于内存管理这样的复杂的竞争风险问题（race condition）；二是因为 CPython 大量使用 C 语言库，但大部分 C 语言库都不是原生线程安全的（线程安全会降低性能和增加复杂度）。</li><li>GIL 是如何工作的: 一个 GIL 在 Python 程序的工作示例。其中，Thread 1、2、3 轮流执行，每一个线程在开始执行时，都会锁住 GIL，以阻止别的线程执行；同样的，每一个线程执行完一段后，会释放 GIL，以允许别的线程开始利用资源。</li><li>为什么 Python 线程会去主动释放 GIL 呢？CPython 中还有另一个机制，叫做 check_interval，意思是 CPython 解释器会去轮询检查线程 GIL 的锁住情况。每隔一段时间，Python 解释器就会强制当前线程去释放 GIL，这样别的线程才能有执行的机会。不同版本的 Python 中，check interval 的实现方式并不一样。早期的 Python 是 100 个 ticks，大致对应了 1000 个 bytecodes；而 Python 3 以后，interval 是 15 毫秒。当然，我们不必细究具体多久会强制释放 GIL，这不应该成为我们程序设计的依赖条件，我们只需明白，CPython 解释器会在一个“合理”的时间范围内释放 GIL 就可以了。</li><li>GIL 的设计，主要是为了方便 CPython 解释器层面的编写者，而不是 Python 应用层面的程序员。作为 Python 的使用者，我们还是需要 lock 等工具，来确保线程安全。</li><li>如何绕过 GIL: 1. 绕过 CPython，使用 JPython（Java 实现的 Python 解释器）等别的实现； 2. 把关键性能代码，放到别的语言（一般是 C++）中实现。</li><li>GIL 与多线程的关系: GIL 只支持单线程，而 Python 支持多线程，这两者之间究竟是什么关系呢？</li></ul><ol><li>其实，GIL 的存在与 Python 支持多线程并不矛盾。前面我们讲过，GIL 是指同一时刻，程序只能有一个线程运行；而 Python 中的多线程，是指多个线程交替执行，造成一个“伪并行”的结果，但是具体到某一时刻，仍然只有 1 个线程在运行，并不是真正的多线程并行</li><li>举个例子来理解。比如，我用 10 个线程来爬取 50 个网站的内容。线程 1 在爬取第 1 个网站时，被 I&#x2F;O block 住了，处于等待状态；这时，GIL 就会释放，而线程 2 就会开始执行，去爬取第 2 个网站，依次类推。等到线程 1 的 I&#x2F;O 操作完成时，主程序便又会切回线程 1，让其完成剩下的操作。这样一来，从用户角度看到的，便是我们所说的多线程。</li></ol><h2 id="Python-垃圾回收机制"><a href="#Python-垃圾回收机制" class="headerlink" title="Python 垃圾回收机制"></a>Python 垃圾回收机制</h2><ul><li><p>什么是内存泄漏呢？这里的泄漏，并不是说你的内存出现了信息安全问题，被恶意程序利用了，而是指程序本身没有设计好，导致程序未能释放已不再使用的内存。内存泄漏也不是指你的内存在物理上消失了，而是意味着代码在分配了某段内存后，因为设计错误，失去了对这段内存的控制，从而造成了内存的浪费。</p></li><li><p>计数引用, Python 中一切皆对象。因此，你所看到的一切变量，本质上都是对象的一个指针。当这个对象的引用计数（指针数）为 0 的时候，说明这个对象永不可达，自然它也就成为了垃圾，需要被回收。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前 python 程序占用的内存大小</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_memory_info</span>(<span class="params">hint</span>):</span><br><span class="line">    pid = os.getpid()</span><br><span class="line">    p = psutil.Process(pid)</span><br><span class="line"></span><br><span class="line">    info = p.memory_full_info()</span><br><span class="line">    memory = info.uss / <span class="number">1024.</span> / <span class="number">1024</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; memory used: &#123;&#125; MB&#x27;</span>.<span class="built_in">format</span>(hint, memory))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    show_memory_info(<span class="string">&#x27;initial&#x27;</span>)</span><br><span class="line">    a = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">&#x27;after a created&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">show_memory_info(<span class="string">&#x27;finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------------------------</span></span><br><span class="line">initial memory used: <span class="number">6.0625</span> MB</span><br><span class="line">after a created memory used: <span class="number">385.87890625</span> MB</span><br><span class="line">finished memory used: <span class="number">12.7421875</span> MB</span><br></pre></td></tr></table></figure><p>调用函数 func()，在列表 a 被创建之后，内存占用迅速增加到了 433 MB：而在函数调用结束后，内存则返回正常。函数内部声明的列表 a 是局部变量，在函数返回后，局部变量的引用会注销掉；此时，列表 a 所指代对象的引用数为 0，Python 便会执行垃圾回收，因此之前占用的大量内存就又回来了。</p></li><li><p>深入看一下 Python 内部的引用计数机制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line">a = []</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 两次引用，一次来自 a，一次来自 getrefcount</span></span><br><span class="line"><span class="built_in">print</span>(sys.getrefcount(a))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">a</span>):</span><br><span class="line">    <span class="comment"># 四次引用，a，python 的函数调用栈，函数参数，和 getrefcount</span></span><br><span class="line">    <span class="built_in">print</span>(sys.getrefcount(a))</span><br><span class="line"> </span><br><span class="line">func(a)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 两次引用，一次来自 a，一次来自 getrefcount，函数 func 调用已经不存在</span></span><br><span class="line"><span class="built_in">print</span>(sys.getrefcount(a))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>sys.getrefcount() 这个函数，可以查看一个变量的引用次数。这段代码本身应该很好理解，不过别忘了，getrefcount 本身也会引入一次计数。另一个要注意的是，在函数调用发生的时候，会产生额外的两次引用，一次来自函数栈，另一个是函数参数。 函数栈引用这里有点不解？</p></li><li><p>另外一个示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line">a = []</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sys.getrefcount(a)) <span class="comment"># 两次</span></span><br><span class="line"> </span><br><span class="line">b = a</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sys.getrefcount(a)) <span class="comment"># 三次</span></span><br><span class="line"> </span><br><span class="line">c = b</span><br><span class="line">d = b</span><br><span class="line">e = c</span><br><span class="line">f = e</span><br><span class="line">g = d</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sys.getrefcount(a)) <span class="comment"># 八次</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><p>需要你稍微注意一下，a、b、c、d、e、f、g 这些变量全部指代的是同一个对象，而 sys.getrefcount() 函数并不是统计一个指针，而是要统计一个对象被引用的次数，所以最后一共会有八次引用。</p></li><li><p>手动释放内存，应该怎么做呢？方法同样很简单。你只需要先调用 del a 来删除一个对象；然后强制调用 gc.collect()，即可手动启动垃圾回收。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"> </span><br><span class="line">show_memory_info(<span class="string">&#x27;initial&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">a = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>)]</span><br><span class="line"> </span><br><span class="line">show_memory_info(<span class="string">&#x27;after a created&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">del</span> a</span><br><span class="line">gc.collect()</span><br><span class="line"> </span><br><span class="line">show_memory_info(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initial memory used: <span class="number">48.1015625</span> MB</span><br><span class="line">after a created memory used: <span class="number">434.3828125</span> MB</span><br><span class="line">finish memory used: <span class="number">48.33203125</span> MB</span><br><span class="line"> </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">NameError                                 Traceback (most recent call last)</span><br><span class="line">&lt;ipython-<span class="built_in">input</span>-<span class="number">12</span>-153e15063d8a&gt; <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">     <span class="number">11</span> </span><br><span class="line">     <span class="number">12</span> show_memory_info(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line">---&gt; <span class="number">13</span> <span class="built_in">print</span>(a)</span><br><span class="line"> </span><br><span class="line">NameError: name <span class="string">&#x27;a&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure></li><li><p>面试官问：引用次数为 0 是垃圾回收启动的充要条件吗？还有没有其他可能性呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    show_memory_info(<span class="string">&#x27;initial&#x27;</span>)</span><br><span class="line">    a = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>)]</span><br><span class="line">    b = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">&#x27;after a, b created&#x27;</span>)</span><br><span class="line">    a.append(b)</span><br><span class="line">    b.append(a)</span><br><span class="line"> </span><br><span class="line">func()</span><br><span class="line">show_memory_info(<span class="string">&#x27;finished&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initial memory used: <span class="number">47.984375</span> MB</span><br><span class="line">after a, b created memory used: <span class="number">822.73828125</span> MB</span><br><span class="line">finished memory used: <span class="number">821.73046875</span> MB</span><br></pre></td></tr></table></figure><p>这里，a 和 b 互相引用，并且，作为局部变量，在函数 func 调用结束后，a 和 b 这两个指针从程序意义上已经不存在了。但是，很明显，依然有内存占用！为什么呢？因为互相引用，导致它们的引用数都不为 0。更隐蔽的情况是出现一个引用环，在工程代码比较复杂的情况下，引用环还真不一定能被轻易发现。</p></li><li><p>Python 本身能够处理这种情况，我们刚刚讲过的，可以显式调用 gc.collect() ，来启动垃圾回收。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    show_memory_info(<span class="string">&#x27;initial&#x27;</span>)</span><br><span class="line">    a = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>)]</span><br><span class="line">    b = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">&#x27;after a, b created&#x27;</span>)</span><br><span class="line">    a.append(b)</span><br><span class="line">    b.append(a)</span><br><span class="line"> </span><br><span class="line">func()</span><br><span class="line">gc.collect()</span><br><span class="line">show_memory_info(<span class="string">&#x27;finished&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initial memory used: <span class="number">49.51171875</span> MB</span><br><span class="line">after a, b created memory used: <span class="number">824.1328125</span> MB</span><br><span class="line">finished memory used: <span class="number">49.98046875</span> MB</span><br></pre></td></tr></table></figure></li><li><p>Python 使用标记清除（mark-sweep）算法和分代收集（generational），来启用针对循环引用的自动垃圾回收。</p></li><li><p>先来看标记清除算法。我们先用图论来理解不可达的概念。对于一个有向图，如果从一个节点出发进行遍历，并标记其经过的所有节点；那么，在遍历结束后，所有没有被标记的节点，我们就称之为不可达节点。显而易见，这些节点的存在是没有任何意义的，自然的，我们就需要对它们进行垃圾回收。当然，每次都遍历全图，对于 Python 而言是一种巨大的性能浪费。所以，在 Python 的垃圾回收实现中，mark-sweep 使用双向链表维护了一个数据结构，并且只考虑容器类的对象（只有容器类对象才有可能产生循环引用）。</p></li><li><p>分代收集算法，则是另一个优化手段。Python 将所有对象分为三代。刚刚创立的对象是第 0 代；经过一次垃圾回收后，依然存在的对象，便会依次从上一代挪到下一代。而每一代启动自动垃圾回收的阈值，则是可以单独指定的。当垃圾回收器中新增对象减去删除对象达到相应的阈值时，就会对这一代对象启动垃圾回收。分代收集基于的思想是，新生的对象更有可能被垃圾回收，而存活更久的对象也有更高的概率继续存活。因此，通过这种做法，可以节约不少计算量，从而提高 Python 的性能。</p></li><li><p>调试内存泄漏: objgraph，一个非常好用的可视化引用关系的包。在这个包中，我主要推荐两个函数，第一个是 show_refs()，它可以生成清晰的引用关系图。另一个非常有用的函数，是 show_backrefs()。</p></li></ul><h2 id="多进程与多线程的应用场景"><a href="#多进程与多线程的应用场景" class="headerlink" title="多进程与多线程的应用场景"></a>多进程与多线程的应用场景</h2><ul><li><p>如果你想对 CPU 密集型任务加速，使用多线程是无效的，请使用多进程。这里所谓的 CPU 密集型任务，是指会消耗大量 CPU 资源的任务，比如求 1 到 100000000 的乘积，或者是把一段很长的文字编码后又解码等等。使用多线程之所以无效，原因正是我们前面刚讲过的，Python 多线程的本质是多个线程互相切换，但同一时刻仍然只允许一个线程运行。因此，你使用多线程，和使用一个主线程，本质上来说并没有什么差别；反而在很多情况下，因为线程切换带来额外损耗，还会降低程序的效率。如果使用多进程，就可以允许多个进程之间 in parallel 地执行任务，所以能够有效提高程序的运行效率。</p></li><li><p>至于 I&#x2F;O 密集型任务，如果想要加速，请优先使用多线程或 Asyncio。当然，使用多进程也可以达到目的，但是完全没有这个必要。因为对 I&#x2F;O 密集型任务来说，大多数时间都浪费在了 I&#x2F;O 等待上。因此，在一个线程 &#x2F; 任务等待 I&#x2F;O 时，我们只需要切换线程 &#x2F; 任务去执行其他 I&#x2F;O 操作就可以了。不过，如果 I&#x2F;O 操作非常多、非常 heavy，需要建立的连接也比较多时，我们一般会选择 Asyncio。因为 Asyncio 的任务切换更加轻量化，并且它能启动的任务数也远比多线程启动的线程数要多。当然，如果 I&#x2F;O 的操作不是那么的 heavy，那么使用多线程也就足够了。</p></li></ul><h1 id="规范篇"><a href="#规范篇" class="headerlink" title="规范篇"></a>规范篇</h1><h2 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h2><ul><li>《8 号 Python 增强规范》（Python Enhacement Proposal #8），以下简称 PEP8；</li><li>《Google Python 风格规范》（Google Python Style Guide），以下简称 Google Style，这是源自 Google 内部的风格规范。公开发布的社区版本，是为了让 Google 旗下所有 Python 开源项目的编程风格统一。（<a href="http://google.github.io/styleguide/pyguide.html%EF%BC%89">http://google.github.io/styleguide/pyguide.html）</a></li><li>统一的编程规范能提高开发效率。而开发效率，关乎三类对象，也就是阅读者、编程者和机器。他们的优先级是阅读者的体验 &gt;&gt; 编程者的体验 &gt;&gt; 机器的体验。</li><li>对于命名原则，我想很多人应该都有所理解，PEP8 第 38 条规定命名必须有意义，不能是无意义的单字母。</li><li>Google Style 2.2 条规定，Python 代码中的 import 对象，只能是 package 或者 module。</li><li>正确的是在代码风格中，当你和 None 比较时候永远使用 is, 不要忘记，Python 中还有隐式布尔转换, 当你明确想要比较对象是否是 None 时，一定要显式地用 is None。</li></ul><h2 id="分解代码"><a href="#分解代码" class="headerlink" title="分解代码"></a>分解代码</h2><ul><li>PEP 是 Python Enhancement Proposal 的缩写，翻译过来叫“Python 增强规范”。正如我们写文章，会有句式、标点、段落格式、开头缩进等标准的规范一样，Python 书写自然也有一套较为官方的规范。PEP 8 就是这样一种规范，它存在的意义，就是让 Python 更易阅读，换句话，增强代码可读性。</li><li>Pycharm 已经内置了 PEP 8 规范检测器，它会自动对编码不规范的地方进行检查，然后指出错误，并推荐修改方式</li><li>Python 的缩进其实可以写成很多种，Tab、双空格、四空格、空格和 Tab 混合等。而 PEP 8 规范告诉我们，请选择四个空格的缩进，不要使用 Tab，更不要 Tab 和空格混着用。</li><li>每行最大长度请限制在 79 个字符。</li><li>空行规范: 全局的类和函数的上方需要空两个空行，而类的函数之间需要空一个空行。函数内部也可以使用空行，和英语的段落一样，用来区分不同意群之间的代码块。但是记住最多空一行，千万不要滥用。</li><li>Python 本身允许把多行合并为一行，使用分号隔开，但这是 PEP 8 不推荐的做法。所以，即使是使用控制语句 if &#x2F; while &#x2F; for，你的执行语句哪怕只有一行命令，也请另起一行，这样可以更大程度提升阅读效率。</li><li>至于代码的尾部，每个代码文件的最后一行为空行，并且只有这一个空行。</li><li>空格规范: 函数的参数列表中，调用函数的参数列表中会出现逗号，请注意逗号后要跟一个空格，这是英语的使用习惯，也能让每个参数独立阅读，更清晰。冒号经常被用来初始化字典，冒号后面也要跟一个空格。Python 中我们可以使用#进行单独注释，请记得要在#后、注释前加一个空格。对于操作符，例如+，-，*，&#x2F;，&amp;，|，&#x3D;，&#x3D;&#x3D;，!&#x3D;，请在两边都保留空格。不过与此对应，括号内的两端并不需要空格。</li><li>换行规范: 第一种，通过括号来将过长的运算进行封装，此时虽然跨行，但是仍处于一个逻辑引用之下。 第二种，则是通过换行符来实现。</li><li>文档规范: 首先，所有 import 尽量放在开头。其次，不要使用 import 一次导入多个模块。虽然我们可以在一行中 import 多个模块，并用逗号分隔，但请不要这么做。import time, os 是 PEP 8 不推荐的做法。如果你采用 from module import func 这样的语句，请确保 func 在本文件中不会出现命名冲突。不过，你其实可以通过 from module import func as new_func 来进行重命名，从而避免冲突。</li><li>注释规范: 对于大的逻辑块，我们可以在最开始相同的缩进处以 # 开始写注释。至于行注释，如空格规范中所讲，我们可以在一行后面跟两个空格，然后以 # 开头加入注释。不过，请注意，行注释并不是很推荐的方式。</li><li>文档描述: ，类和函数的注释，为的是让读者快速理解这个函数做了什么，它输入的参数和格式，输出的返回值和格式，以及其他需要注意的地方。至于 docstring 的写法，它是用三个双引号开始、三个双引号结尾。我们首先用一句话简单说明这个函数做什么，然后跟一段话来详细解释；再往后是参数列表、参数格式、返回值格式。</li><li>命名规范: 变量名请拒绝使用 a b c d 这样毫无意义的单字符，我们应该使用能够代表其意思的变量名,一般来说，变量使用小写，通过下划线串联起来，</li></ul><ol><li>例如：data_format、input_spec、image_data_set。唯一可以使用单字符的地方是迭代，比如 for i in range(n) 这种，为了精简可以使用。如果是类的私有变量，请记得前面增加两个下划线。</li><li>对于常量，最好的做法是全部大写，并通过下划线连接，例如：WAIT_TIME、SERVER_ADDRESS、PORT_NUMBER。</li><li>对于函数名，同样也请使用小写的方式，通过下划线连接起来，例如：launch_nuclear_missile()、check_input_validation()。</li><li>对于类名，则应该首字母大写，然后合并起来，例如：class SpatialDropout2D()、class FeatureSet()。</li></ol><ul><li>代码分解技巧: 编程中一个核心思想是，不写重复代码。重复代码大概率可以通过使用条件、循环、构造函数和类来解决。而另一个核心思想则是，减少迭代层数，尽可能让 Python 代码扁平化，毕竟，人的大脑无法处理过多的栈操作。</li><li>一个函数的粒度应该尽可能细，不要让一个函数做太多的事情。所以，对待一个复杂的函数，我们需要尽可能地把它拆分成几个功能简单的函数，然后合并起来。那么，应该如何拆分函数呢？</li><li>以一个简单的二分搜索来举例说明。我给定一个非递减整数数组，和一个 target，要求你找到数组中最小的一个数 x，可以满足 x*x &gt; target。一旦不存在，则返回 -1。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">solve</span>(<span class="params">arr, target</span>):</span><br><span class="line">    l, r = <span class="number">0</span>, <span class="built_in">len</span>(arr) - <span class="number">1</span></span><br><span class="line">    ret = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">        m = (l + r) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> arr[m] * arr[m] &gt; target:</span><br><span class="line">            ret = m</span><br><span class="line">            r = m - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = m + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ret == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[ret]</span><br></pre></td></tr></table></figure><p>给出的第一段代码这样的写法，在算法比赛和面试中已经 OK 了。不过，从工程角度来说，我们还能继续优化一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">comp</span>(<span class="params">x, target</span>):</span><br><span class="line">    <span class="keyword">return</span> x * x &gt; target</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">binary_search</span>(<span class="params">arr, target</span>):</span><br><span class="line">    l, r = <span class="number">0</span>, <span class="built_in">len</span>(arr) - <span class="number">1</span></span><br><span class="line">    ret = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">        m = (l + r) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> comp(arr[m], target):</span><br><span class="line">            ret = m</span><br><span class="line">            r = m - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = m + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve</span>(<span class="params">arr, target</span>):</span><br><span class="line">    <span class="built_in">id</span> = binary_search(arr, target)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">id</span> != -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[<span class="built_in">id</span>]</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><p>第二段代码中，我把不同功能的代码拿了出来。其中，comp() 函数作为核心判断，拿出来后可以让整个程序更清晰；同时，我也把二分搜索的主程序拿了出来，只负责二分搜索；最后的 solve() 函数拿到结果，决定返回不存在，还是返回值。这样一来，每个函数各司其职，阅读性也能得到一定提高。</p><ul><li>最后，我们再来看一下如何拆分类。老规矩，先看代码：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, job_title, job_description, company_name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">        self.job_title = job_title</span><br><span class="line">        self.job_description = description</span><br><span class="line">        self.company_name = company_name</span><br></pre></td></tr></table></figure>job 在其中出现了很多次，而且它们表达的是一个意义实体，这种情况下，我们可以考虑将这部分分解出来，作为单独的类。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, job_title, job_description, company_name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">        self.job = Job(job_title, job_description, company_name)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Job</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, job_title, job_description, company_name</span>):</span><br><span class="line">        </span><br><span class="line">        self.job_title = job_title</span><br><span class="line">        self.job_description = description</span><br><span class="line">        self.company_name = company_name</span><br></pre></td></tr></table></figure></li></ul><h2 id="合理利用assert"><a href="#合理利用assert" class="headerlink" title="合理利用assert"></a>合理利用assert</h2><ul><li><p>Python 的 assert 语句，可以说是一个 debug 的好工具，主要用于测试一个条件是否满足。如果测试的条件满足，则什么也不做，相当于执行了 pass 语句；如果测试条件不满足，便会抛出异常 AssertionError，并返回具体的错误信息（optional）。它的具体语法是下面这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">assert_stmt ::=  <span class="string">&quot;assert&quot;</span> expression [<span class="string">&quot;,&quot;</span> expression]</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">__debug__</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> expression: <span class="keyword">raise</span> AssertionError</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">2</span>,  <span class="string">&#x27;assertion is wrong&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">__debug__</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> expression1: <span class="keyword">raise</span> AssertionError(expression2)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>一定记住，不要在使用 assert 时加入括号，比如下面这个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span>(<span class="number">1</span> == <span class="number">2</span>, <span class="string">&#x27;This should fail&#x27;</span>)</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">&lt;ipython-<span class="built_in">input</span>-<span class="number">8</span>-2c057bd7fe24&gt;:<span class="number">1</span>: SyntaxWarning: assertion <span class="keyword">is</span> always true, perhaps remove parentheses?</span><br><span class="line">  <span class="keyword">assert</span>(<span class="number">1</span> == <span class="number">2</span>, <span class="string">&#x27;This should fail&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>在实际工作中，assert 还有一些很常见的用法，比如这里函数 func() 里的所有操作，都是基于输入必须是 list 这个前提。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params"><span class="built_in">input</span></span>):</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">isinstance</span>(<span class="built_in">input</span>, <span class="built_in">list</span>), <span class="string">&#x27;input must be type of list&#x27;</span></span><br><span class="line">    <span class="comment"># 下面的操作都是基于前提：input 必须是 list</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">input</span>) == <span class="number">1</span>:</span><br><span class="line">        ...</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(<span class="built_in">input</span>) == <span class="number">2</span>:</span><br><span class="line">        ...</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ... </span><br></pre></td></tr></table></figure></li><li><p>assert 错误示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">delete_course</span>(<span class="params">user, course_id</span>):</span><br><span class="line">    <span class="keyword">assert</span> user_is_admin(user), <span class="string">&#x27;user must be admin&#x27;</span></span><br><span class="line">    <span class="keyword">assert</span> course_exist(course_id), <span class="string">&#x27;course id must exist&#x27;</span></span><br><span class="line">    delete(course_id)</span><br></pre></td></tr></table></figure><p>assert 的检查是可以被关闭的，比如在运行 Python 程序时，加入-O这个选项就会让 assert 失效。一旦 assert 的检查被关闭，user_is_admin() 和 course_exist() 这两个函数便不会被执行。 任何用户都有权限删除专栏课程；并且，不管这个课程是否存在，他们都可以强行执行删除操作。</p></li></ul><p>正确的做法，是使用条件语句进行相应的检查，并合理抛出异常：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">delete_course</span>(<span class="params">user, course_id</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user_is_admin(user):</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;user must be admin&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> course_exist(course_id):</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;coursde id must exist&#x27;</span>)</span><br><span class="line">    delete(course_id)  </span><br></pre></td></tr></table></figure><p>再来看一个例子，如果你想打开一个文件，进行数据读取、处理等一系列操作，那么下面这样的写法，显然也是不正确的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">read_and_process</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="keyword">assert</span> file_exist(path), <span class="string">&#x27;file must exist&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path) <span class="keyword">as</span> f:</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure><p>因为 assert 的使用，表明你强行指定了文件必须存在，但事实上在很多情况下，这个假设并不成立。另外，打开文件操作，也有可能触发其他的异常。所以，正确的做法是进行异常处理，用 try 和 except 来解决：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">read_and_process</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path) <span class="keyword">as</span> f:</span><br><span class="line">            ...</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            ...  </span><br></pre></td></tr></table></figure><ul><li>总的来说，assert 并不适用 run-time error 的检查。assert 通常用来对代码进行必要的 self check，表明你很确定这种情况一定发生，或者一定不会发生。需要注意的是，使用 assert 时，一定不要加上括号，否则无论表达式对与错，assert 检查永远不会 fail。另外，程序中的 assert 语句，可以通过-O等选项被全局 disable。</li></ul><h2 id="上下文管理器"><a href="#上下文管理器" class="headerlink" title="上下文管理器"></a>上下文管理器</h2><p>在任何一门编程语言中，文件的输入输出、数据库的连接断开等，都是很常见的资源管理操作。但资源都是有限的，在写程序时，我们必须保证这些资源在使用过后得到释放，不然就容易造成资源泄露，轻者使得系统处理缓慢，重则会使系统崩溃。</p><ul><li><p>错误示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>): </span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;hello&#x27;</span>) </span><br></pre></td></tr></table></figure><p>这就是一个典型的资源泄露的例子。因为程序中同时打开了太多的文件，占据了太多的资源，造成系统崩溃。<br>为了解决这个问题，不同的编程语言都引入了不同的机制。而在 Python 中，对应的解决方式便是上下文管理器（context manager）。上下文管理器，能够帮助你自动分配并且释放资源，其中最典型的应用便是 with 语句。所以，上面代码的正确写法应该如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>另外一个典型的例子，是 Python 中的 threading.lock 类。举个例子，比如我想要获取一个锁，执行相应的操作，完成后再释放，那么代码就可以写成下面这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">some_lock = threading.Lock()</span><br><span class="line">some_lock.acquire()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    some_lock.release()</span><br><span class="line"></span><br><span class="line"><span class="comment">### 而对应的 with 语句，同样非常简洁：</span></span><br><span class="line">some_lock = threading.Lock()</span><br><span class="line"><span class="keyword">with</span> somelock:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li><li><p>上下文管理器的实现: 自定义了一个上下文管理类 FileManager，模拟 Python 的打开、关闭文件操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FileManager</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, mode</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;calling __init__ method&#x27;</span>)</span><br><span class="line">        self.name = name</span><br><span class="line">        self.mode = mode </span><br><span class="line">        self.file = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;calling __enter__ method&#x27;</span>)</span><br><span class="line">        self.file = <span class="built_in">open</span>(self.name, self.mode)</span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;calling __exit__ method&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> self.file:</span><br><span class="line">            self.file.close()</span><br><span class="line">            </span><br><span class="line"><span class="keyword">with</span> FileManager(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;ready to write to file&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">calling __init__ method</span><br><span class="line">calling __enter__ method</span><br><span class="line">ready to write to file</span><br><span class="line">calling __exit__ method</span><br></pre></td></tr></table></figure></li><li><p>当我们用类来创建上下文管理器时，必须保证这个类包括方法”<strong>enter</strong>()”和方法“<strong>exit</strong>()”。其中，方法“<strong>enter</strong>()”返回需要被管理的资源，方法“<strong>exit</strong>()”里通常会存在一些释放、清理资源的操作，比如这个例子中的关闭文件等等。</p></li><li><p>当我们用 with 语句，执行这个上下文管理器时：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> FileManager(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">&#x27;hello world&#x27;</span>)</span><br></pre></td></tr></table></figure><p>下面这四步操作会依次发生：</p></li></ul><ol><li>方法“<strong>init</strong>()”被调用，程序初始化对象 FileManager，使得文件名（name）是”test.txt”，文件模式 (mode) 是’w’；</li><li>方法“<strong>enter</strong>()”被调用，文件“test.txt”以写入的模式被打开，并且返回 FileManager 对象赋予变量 f；</li><li>字符串“hello world”被写入文件“test.txt”；</li><li>方法“<strong>exit</strong>()”被调用，负责关闭之前打开的文件流。</li></ol><p>值得一提的是，方法“<strong>exit</strong>()”中的参数“exc_type, exc_val, exc_tb”，分别表示 exception_type、exception_value 和 traceback。当我们执行含有上下文管理器的 with 语句时，如果有异常抛出，异常的信息就会包含在这三个变量中，传入方法“<strong>exit</strong>()”。</p><ul><li>数据库的连接操作，也常常用上下文管理器来表示<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DBConnectionManager</span>: </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, hostname, port</span>): </span><br><span class="line">        self.hostname = hostname </span><br><span class="line">        self.port = port </span><br><span class="line">        self.connection = <span class="literal">None</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>): </span><br><span class="line">        self.connection = DBClient(self.hostname, self.port) </span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>): </span><br><span class="line">        self.connection.close() </span><br><span class="line">  </span><br><span class="line"><span class="keyword">with</span> DBConnectionManager(<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;8080&#x27;</span>) <span class="keyword">as</span> db_client: </span><br></pre></td></tr></table></figure></li></ul><ol><li>方法“<strong>init</strong>()”负责对数据库进行初始化，也就是将主机名、接口（这里是 localhost 和 8080）分别赋予变量 hostname 和 port；</li><li>方法“<strong>enter</strong>()”连接数据库，并且返回对象 DBConnectionManager；</li><li>方法“<strong>exit</strong>()”则负责关闭数据库的连接。</li></ol><ul><li><p>基于生成器的上下文管理器<br>你可以使用装饰器 contextlib.contextmanager，来定义自己所需的基于生成器的上下文管理器，用以支持 with 语句。还是拿前面的类上下文管理器 FileManager 来说，我们也可以用下面形式来表示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> contextlib <span class="keyword">import</span> contextmanager</span><br><span class="line"> </span><br><span class="line"><span class="meta">@contextmanager</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">file_manager</span>(<span class="params">name, mode</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = <span class="built_in">open</span>(name, mode)</span><br><span class="line">        <span class="keyword">yield</span> f</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        f.close()</span><br><span class="line">        </span><br><span class="line"><span class="keyword">with</span> file_manager(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这段代码中，函数 file_manager() 是一个生成器，当我们执行 with 语句时，便会打开文件，并返回文件对象 f；当 with 语句执行完后，finally block 中的关闭文件操作便会执行。使用基于生成器的上下文管理器时，我们不再用定义“<strong>enter</strong>()”和“<strong>exit</strong>()”方法，但请务必加上装饰器 @contextmanager，这一点新手很容易疏忽。</p></li><li><p>讲完这两种不同原理的上下文管理器后，还需要强调的是，基于类的上下文管理器和基于生成器的上下文管理器，这两者在功能上是一致的。只不过:</p></li></ul><ol><li>于类的上下文管理器更加 flexible，适用于大型的系统开发；</li><li>而基于生成器的上下文管理器更加方便、简洁，适用于中小型程序。</li><li>无论你使用哪一种，请不用忘记在方法“<strong>exit</strong>()”或者是 finally block 中释放资源，这一点尤其重要。</li></ol><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><p>说起单元测试，就不得不提 Python <a href="https://docs.python.org/3/library/unittest.html">unittest</a> 库，它提供了我们需要的大多数工具。我们来看下面这个简单的测试，从代码中了解其使用方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将要被测试的排序函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sort</span>(<span class="params">arr</span>):</span><br><span class="line">    l = <span class="built_in">len</span>(arr)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, l):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, l):</span><br><span class="line">            <span class="keyword">if</span> arr[i] &gt;= arr[j]:</span><br><span class="line">                tmp = arr[i]</span><br><span class="line">                arr[i] = arr[j]</span><br><span class="line">                arr[j] = tmp</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 编写子类继承 unittest.TestCase</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestSort</span>(unittest.TestCase):</span><br><span class="line"> </span><br><span class="line">   <span class="comment"># 以 test 开头的函数将会被测试</span></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">test_sort</span>(<span class="params">self</span>):</span><br><span class="line">        arr = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">        sort(arr)</span><br><span class="line">        <span class="comment"># assert 结果跟我们期待的一样</span></span><br><span class="line">        self.assertEqual(arr, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment">## 如果在 Jupyter 下，请用如下方式运行单元测试</span></span><br><span class="line">    unittest.main(argv=[<span class="string">&#x27;first-arg-is-ignored&#x27;</span>], exit=<span class="literal">False</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## 如果是命令行下运行，则：</span></span><br><span class="line">    <span class="comment">## unittest.main()</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">..</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">2</span> tests <span class="keyword">in</span> <span class="number">0.002</span>s</span><br><span class="line"> </span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>首先，我们需要创建一个类TestSort，继承类‘unittest.TestCase’；然后，在这个类中定义相应的测试函数 test_sort()，进行测试。注意，测试函数要以‘test’开头，而测试函数的内部，通常使用 assertEqual()、assertTrue()、assertFalse() 和 assertRaise() 等 assert 语句对结果进行验证。</p><p>介绍 Python 单元测试的几个技巧，分别是 mock、side_effect 和 patch。这三者用法不一样，但都是一个核心思想，即用虚假的实现，来替换掉被测试函数的一些依赖项，让我们能把更多的精力放在需要被测试的功能上。</p><ol><li><p>mock 是单元测试中最核心重要的一环。mock 的意思，便是通过一个虚假对象，来代替被测试函数或模块需要的对象。举个例子，比如你要测一个后端 API 逻辑的功能性，但一般后端 API 都依赖于数据库、文件系统、网络等。这样，你就需要通过 mock，来创建一些虚假的数据库层、文件系统层、网络层对象，以便可以简单地对核心后端逻辑单元进行测试。Python mock 则主要使用 mock 或者 MagicMock 对象，这里我也举了一个代码示例。这个例子看上去比较简单，但是里面的思想很重要。下面我们一起来看下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> MagicMock</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(unittest.TestCase):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">m1</span>(<span class="params">self</span>):</span><br><span class="line">        val = self.m2()</span><br><span class="line">        self.m3(val)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">m2</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">m3</span>(<span class="params">self, val</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_m1</span>(<span class="params">self</span>):</span><br><span class="line">        a = A()</span><br><span class="line">        a.m2 = MagicMock(return_value=<span class="string">&quot;custom_val&quot;</span>)</span><br><span class="line">        a.m3 = MagicMock()</span><br><span class="line">        a.m1()</span><br><span class="line">        self.assertTrue(a.m2.called) <span class="comment"># 验证 m2 被 call 过</span></span><br><span class="line">        a.m3.assert_called_with(<span class="string">&quot;custom_val&quot;</span>) <span class="comment"># 验证 m3 被指定参数 call 过</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main(argv=[<span class="string">&#x27;first-arg-is-ignored&#x27;</span>], exit=<span class="literal">False</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">..</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">2</span> tests <span class="keyword">in</span> <span class="number">0.002</span>s</span><br><span class="line"> </span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>这段代码中，我们定义了一个类的三个方法 m1()、m2()、m3()。我们需要对 m1() 进行单元测试，但是 m1() 取决于 m2() 和 m3()。如果 m2() 和 m3() 的内部比较复杂, 你就不能只是简单地调用 m1() 函数来进行测试，可能需要解决很多依赖项的问题。</p></li><li><p>Mock Side Effect: 就是 mock 的函数，属性是可以根据不同的输入，返回不同的数值，而不只是一个 return_value。<br>比如下面这个示例，例子很简单，测试的是输入参数是否为负数，输入小于 0 则输出为 1 ，否则输出为 2。代码很简短，你一定可以看懂，这便是 Mock Side Effect 的用法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> MagicMock</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">side_effect</span>(<span class="params">arg</span>):</span><br><span class="line">    <span class="keyword">if</span> arg &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">mock = MagicMock()</span><br><span class="line">mock.side_effect = side_effect</span><br><span class="line"> </span><br><span class="line">mock(-<span class="number">1</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"> </span><br><span class="line">mock(<span class="number">1</span>)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>至于 patch，给开发者提供了非常便利的函数 mock 方法。它可以应用 Python 的 decoration 模式或是 context manager 概念，快速自然地 mock 所需的函数。它的用法也不难，我们来看代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> patch</span><br><span class="line"> </span><br><span class="line"><span class="meta">@patch(<span class="params"><span class="string">&#x27;sort&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_sort</span>(<span class="params">self, mock_sort</span>):</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>在这个 test 里面，mock_sort 替代 sort 函数本身的存在，所以，我们可以像开始提到的 mock object 一样，设置 return_value 和 side_effect。<br>另一种 patch 的常见用法，是 mock 类的成员函数，这个技巧我们在工作中也经常会用到，比如说一个类的构造函数非常复杂，而测试其中一个成员函数并不依赖所有初始化的 object。它的用法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> patch.<span class="built_in">object</span>(A, <span class="string">&#x27;__init__&#x27;</span>, <span class="keyword">lambda</span> x: <span class="literal">None</span>):</span><br><span class="line">      …</span><br></pre></td></tr></table></figure><p>代码应该也比较好懂。在 with 语句里面，我们通过 patch，将 A 类的构造函数 mock 为一个 do nothing 的函数，这样就可以很方便地避免一些复杂的初始化（initialization）。</p></li></ol><ul><li>Test Coverage: 衡量代码中语句被 cover 的百分比。 <a href="https://coverage.readthedocs.io/en/v4.5.x/">https://coverage.readthedocs.io/en/v4.5.x/</a> 。</li><li>模块化: 正确的测试方法，应该是先模块化代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="comment"># pre process</span></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># sort</span></span><br><span class="line">    l = <span class="built_in">len</span>(arr)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, l):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, j):</span><br><span class="line">            <span class="keyword">if</span> arr[i] &gt;= arr[j]:</span><br><span class="line">                tmp = arr[i]</span><br><span class="line">                arr[i] = arr[j]</span><br><span class="line">                arr[j] = tmp</span><br><span class="line">    <span class="comment"># post process</span></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    Return arr</span><br></pre></td></tr></table></figure>这段代码的大概意思是，先有个预处理，再排序，最后再处理一下然后返回。如果现在要求你，给这个函数写个单元测试，你是不是会一筹莫展呢？这个函数确实有点儿复杂，以至于你都不知道应该是怎样的输入，并要期望怎样的输出。这种代码写单元测试是非常痛苦的，更别谈 cover 每条语句的要求了。所以，正确的测试方法，应该是先模块化代码，写成下面的形式：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">arr</span>):</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sort</span>(<span class="params">arr</span>):</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">postprocess</span>(<span class="params">arr</span>):</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">self</span>):</span><br><span class="line">    arr = preprocess(arr)</span><br><span class="line">    arr = sort(arr)</span><br><span class="line">    arr = postprocess(arr)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure>接着再进行相应的测试，测试三个子函数的功能正确性；然后通过 mock 子函数，调用 work() 函数，来验证三个子函数被 call 过。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> patch</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_preprocess</span>(<span class="params">self</span>):</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_sort</span>(<span class="params">self</span>):</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_postprocess</span>(<span class="params">self</span>):</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line"><span class="meta">@patch(<span class="params"><span class="string">&#x27;%s.preprocess&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@patch(<span class="params"><span class="string">&#x27;%s.sort&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@patch(<span class="params"><span class="string">&#x27;%s.postprocess&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_work</span>(<span class="params">self,mock_post_process, mock_sort, mock_preprocess</span>):</span><br><span class="line">    work()</span><br><span class="line">    self.assertTrue(mock_post_process.called)</span><br><span class="line">    self.assertTrue(mock_sort.called)</span><br><span class="line">    self.assertTrue(mock_preprocess.called)</span><br></pre></td></tr></table></figure></li></ul><h2 id="pdb-amp-cProfile"><a href="#pdb-amp-cProfile" class="headerlink" title="pdb &amp; cProfile"></a>pdb &amp; cProfile</h2><p>在实际生产环境中，对代码进行调试和性能分析，是一个永远都逃不开的话题。调试和性能分析的主要场景，通常有这么三个：</p><ol><li>一是代码本身有问题，需要我们找到 root cause 并修复；</li><li>二是代码效率有问题，比如过度浪费资源，增加 latency，因此需要我们 debug；</li><li>三是在开发新的 feature 时，一般都需要测试。</li></ol><ul><li><p>pdb 的必要性: 在程序中相应的地方打印，的确是调试程序的一个常用手段，但这只适用于小型程序。因为你每次都得重新运行整个程序，或是一个完整的功能模块，才能看到打印出来的变量值。如果程序不大，每次运行都非常快，那么使用 print()，的确是很方便的。</p></li><li><p>如何使用 pdb: 要启动 pdb 调试，我们只需要在程序中，加入“import pdb”和“pdb.set_trace()”这两行代码就行了，比如下面这个简单的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="keyword">import</span> pdb</span><br><span class="line">pdb.set_trace()</span><br><span class="line">c = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(a + b + c)</span><br></pre></td></tr></table></figure><p>当我们运行这个程序时时，它的输出界面是下面这样的，表示程序已经运行到了“pdb.set_trace()”这行，并且暂停了下来，等待用户输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; /Users/feiyang/test.py(<span class="number">5</span>)&lt;module&gt;()</span><br><span class="line">-&gt; c = <span class="number">3</span></span><br></pre></td></tr></table></figure><p>这时，我们就可以执行，在 IDE 断点调试器中可以执行的一切操作，比如打印，语法是”p <expression>“：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(pdb) p a</span><br><span class="line"><span class="number">1</span></span><br><span class="line">(pdb) p b</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>你可以看到，我打印的是 a 和 b 的值，分别为 1 和 2，与预期相符。为什么不打印 c 呢？显然，打印 c 会抛出异常，因为程序目前只运行了前面几行，此时的变量 c 还没有被定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(pdb) p c</span><br><span class="line">*** NameError: name <span class="string">&#x27;c&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure><p>除了打印，常见的操作还有“n”，表示继续执行代码到下一行，用法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(pdb) n</span><br><span class="line">-&gt; <span class="built_in">print</span>(a + b + c)</span><br></pre></td></tr></table></figure><p>而命令”l“，则表示列举出当前代码行上下的 11 行源代码，方便开发者熟悉当前断点周围的代码状态：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(pdb) l</span><br><span class="line">  <span class="number">1</span>  a = <span class="number">1</span></span><br><span class="line">  <span class="number">2</span>  b = <span class="number">2</span></span><br><span class="line">  <span class="number">3</span>  <span class="keyword">import</span> pdb</span><br><span class="line">  <span class="number">4</span>  pdb.set_trace()</span><br><span class="line">  <span class="number">5</span>  -&gt;c = <span class="number">3</span></span><br><span class="line">  <span class="number">6</span>  <span class="built_in">print</span>(a + b + c)</span><br></pre></td></tr></table></figure><p>命令“s“，就是 step into 的意思，即进入相对应的代码内部。这时，命令行中会显示”–Call–“的字样，当你执行完内部的代码块后，命令行中则会出现”–Return–“的字样。我们来看下面这个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;enter func()&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="keyword">import</span> pdb</span><br><span class="line">pdb.set_trace()</span><br><span class="line">func()</span><br><span class="line">c = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(a + b + c)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># pdb</span></span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">9</span>)&lt;module&gt;()</span><br><span class="line">-&gt; func()</span><br><span class="line">(pdb) s</span><br><span class="line">--Call--</span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">1</span>)func()</span><br><span class="line">-&gt; <span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">(Pdb) l</span><br><span class="line">  <span class="number">1</span>  -&gt;<span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">  <span class="number">2</span>  <span class="built_in">print</span>(<span class="string">&#x27;enter func()&#x27;</span>)</span><br><span class="line">  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span></span><br><span class="line">  <span class="number">5</span>  a = <span class="number">1</span></span><br><span class="line">  <span class="number">6</span>  b = <span class="number">2</span></span><br><span class="line">  <span class="number">7</span>  <span class="keyword">import</span> pdb</span><br><span class="line">  <span class="number">8</span>  pdb.set_trace()</span><br><span class="line">  <span class="number">9</span>  func()</span><br><span class="line"> <span class="number">10</span>  c = <span class="number">3</span></span><br><span class="line"> <span class="number">11</span>  <span class="built_in">print</span>(a + b + c)</span><br><span class="line"> </span><br><span class="line">(Pdb) n</span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">2</span>)func()</span><br><span class="line">-&gt; <span class="built_in">print</span>(<span class="string">&#x27;enter func()&#x27;</span>)</span><br><span class="line">(Pdb) n</span><br><span class="line">enter func()</span><br><span class="line">--Return--</span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">2</span>)func()-&gt;<span class="literal">None</span></span><br><span class="line">-&gt; <span class="built_in">print</span>(<span class="string">&#x27;enter func()&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">(Pdb) n</span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">10</span>)&lt;module&gt;()</span><br><span class="line">-&gt; c = <span class="number">3</span></span><br></pre></td></tr></table></figure><p>这里，我们使用命令”s“进入了函数 func() 的内部，显示”–Call–“；而当我们执行完函数 func() 内部语句并跳出后，显示”–Return–“。</p></li></ul><ol><li>与之相对应的命令”r“，表示 step out，即继续执行，直到当前的函数完成返回。</li><li>命令”b [ ([filename:]lineno | function) [, condition] ]“可以用来设置断点。比方说，我想要在代码中的第 10 行，再加一个断点，那么在 pdb 模式下输入”b 11“即可。</li><li>而”c“则表示一直执行程序，直到遇到下一个断点。</li></ol><ul><li><p>可以参考对应的官方文档（<a href="https://docs.python.org/3/library/pdb.html#module-pdb%EF%BC%89%EF%BC%8C%E6%9D%A5%E7%86%9F%E6%82%89%E8%BF%99%E4%BA%9B%E7%94%A8%E6%B3%95%E3%80%82">https://docs.python.org/3/library/pdb.html#module-pdb），来熟悉这些用法。</a></p></li><li><p>用 cProfile 进行性能分析: 这里所谓的 profile，是指对代码的每个部分进行动态的分析，比如准确计算出每个模块消耗的时间等。这样你就可以知道程序的瓶颈所在，从而对其进行修正或优化。<br>比如我想计算斐波拉契数列，运用递归思想，我们很容易就能写出下面这样的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">1</span>) + fib(n-<span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fib_seq</span>(<span class="params">n</span>):</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        res.extend(fib_seq(n-<span class="number">1</span>))</span><br><span class="line">    res.append(fib(n))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line">fib_seq(<span class="number">30</span>)</span><br></pre></td></tr></table></figure><p>接下来，我想要测试一下这段代码总的效率以及各个部分的效率。那么，我就只需在开头导入 cProfile 这个模块，并且在最后运行 cProfile.run() 就可以了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cProfile</span><br><span class="line"><span class="comment"># def fib(n)</span></span><br><span class="line"><span class="comment"># def fib_seq(n):</span></span><br><span class="line">cProfile.run(<span class="string">&#x27;fib_seq(30)&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结果如下</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/Users/yang.fei/python/my_test/venv/bin/python /Users/yang.fei/python/my_test/test.py</span><br><span class="line">         7049218 function calls (96 primitive calls) in 1.777 seconds</span><br><span class="line"></span><br><span class="line">   Ordered by: standard name</span><br><span class="line"></span><br><span class="line">   ncalls  tottime  percall  cumtime  percall filename:lineno(function)</span><br><span class="line">        1    0.000    0.000    1.777    1.777 &lt;string&gt;:1(&lt;module&gt;)</span><br><span class="line">     31/1    0.000    0.000    1.777    1.777 test.py:12(fib_seq)</span><br><span class="line">7049123/31    1.777    0.000    1.777    0.057 test.py:3(fib)</span><br><span class="line">        1    0.000    0.000    1.777    1.777 &#123;built-in method builtins.exec&#125;</span><br><span class="line">       31    0.000    0.000    0.000    0.000 &#123;method &#x27;append&#x27; of &#x27;list&#x27; objects&#125;</span><br><span class="line">        1    0.000    0.000    0.000    0.000 &#123;method &#x27;disable&#x27; of &#x27;_lsprof.Profiler&#x27; objects&#125;</span><br><span class="line">       30    0.000    0.000    0.000    0.000 &#123;method &#x27;extend&#x27; of &#x27;list&#x27; objects&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或者更简单一些，直接在运行脚本的命令中，加入选项“-m cProfile”也很方便： python3 -m cProfile xxx.py</p><ul><li>参数介绍：</li></ul><ol><li>ncalls，是指相应代码 &#x2F; 函数被调用的次数；</li><li>tottime，是指对应代码 &#x2F; 函数总共执行所需要的时间（注意，并不包括它调用的其他代码 &#x2F; 函数的执行时间）；</li><li>tottime percall，就是上述两者相除的结果，也就是tottime &#x2F; ncalls；</li><li>cumtime，则是指对应代码 &#x2F; 函数总共执行所需要的时间，这里包括了它调用的其他代码 &#x2F; 函数的执行时间；</li><li>cumtime percall，则是 cumtime 和 ncalls 相除的平均结果。</li></ol><p>了解这些参数后，再来看结果。我们可以清晰地看到，这段程序执行效率的瓶颈，在于第三行的函数 fib()，它被调用了 700 多万次。</p><ul><li>有没有什么办法可以提高改进呢？答案是肯定的。通过观察，我们发现，程序中有很多对 fib() 的调用，其实是重复的，那我们就可以用字典来保存计算过的结果，防止重复。改进后的代码如下所示：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">memoize</span>(<span class="params">f</span>):</span><br><span class="line">    memo = &#123;&#125;</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">helper</span>(<span class="params">x</span>):</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> memo:            </span><br><span class="line">            memo[x] = f(x)</span><br><span class="line">        <span class="keyword">return</span> memo[x]</span><br><span class="line">    <span class="keyword">return</span> helper</span><br><span class="line"> </span><br><span class="line"><span class="meta">@memoize</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">1</span>) + fib(n-<span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fib_seq</span>(<span class="params">n</span>):</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        res.extend(fib_seq(n-<span class="number">1</span>))</span><br><span class="line">    res.append(fib(n))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line">fib_seq(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">########### 这次快多了 ############</span></span><br><span class="line"></span><br><span class="line">/Users/yang.fei/python/my_test/venv/<span class="built_in">bin</span>/python /Users/yang.fei/python/my_test/test.py</span><br><span class="line">         <span class="number">215</span> function calls (<span class="number">127</span> primitive calls) <span class="keyword">in</span> <span class="number">0.000</span> seconds</span><br><span class="line"></span><br><span class="line">   Ordered by: standard name</span><br><span class="line"></span><br><span class="line">   ncalls  tottime  percall  cumtime  percall filename:lineno(function)</span><br><span class="line">        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &lt;string&gt;:<span class="number">1</span>(&lt;module&gt;)</span><br><span class="line">       <span class="number">31</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> test.py:<span class="number">15</span>(fib)</span><br><span class="line">     <span class="number">31</span>/<span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> test.py:<span class="number">25</span>(fib_seq)</span><br><span class="line">    <span class="number">89</span>/<span class="number">31</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> test.py:<span class="number">7</span>(helper)</span><br><span class="line">        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;built-<span class="keyword">in</span> method builtins.<span class="built_in">exec</span>&#125;</span><br><span class="line">       <span class="number">31</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;method <span class="string">&#x27;append&#x27;</span> of <span class="string">&#x27;list&#x27;</span> objects&#125;</span><br><span class="line">        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;method <span class="string">&#x27;disable&#x27;</span> of <span class="string">&#x27;_lsprof.Profiler&#x27;</span> objects&#125;</span><br><span class="line">       <span class="number">30</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;method <span class="string">&#x27;extend&#x27;</span> of <span class="string">&#x27;list&#x27;</span> objects&#125;</span><br></pre></td></tr></table></figure></li><li>当然，cProfile 还有很多其他功能，还可以结合 stats 类来使用，你可以阅读相应的 <a href="https://docs.python.org/3.7/library/profile.html">官方文档</a> 来了解</li></ul><h2 id="选择异常处理方式"><a href="#选择异常处理方式" class="headerlink" title="选择异常处理方式"></a>选择异常处理方式</h2><ul><li>问题一：应该使用哪种异常处理方式？</li></ul><ol><li><p>第一种，在代码中对数据进行检测，并直接处理与抛出异常。方法一旦抛出异常，那么程序就会终止；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [condition1]:</span><br><span class="line">    <span class="keyword">raise</span> Exception1(<span class="string">&#x27;exception 1&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> [condition2]:</span><br><span class="line">    <span class="keyword">raise</span> Exception2(<span class="string">&#x27;exception 2&#x27;</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>第二种，在异常处理代码中进行处理。如果抛出异常，会被程序捕获（catch），程序还会继续运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>问题二：先写出能跑起来的代码，后期再优化可以吗？<br>很明显，这种认知是错误的。我们从一开始写代码时，就必须对功能和规范这两者双管齐下。</p></li><li><p>问题三：代码中写多少注释才合适？<br>通常来说，我们会在类的开头、函数的开头或者是某一个功能块的开头加上一段描述性的注释，来说明这段代码的功能，并指明所有的输入和输出。除此之外，我们也要求在一些比较 tricky 的代码上方加上注释，帮助阅读者理解代码的含义。另外，必须提醒一点，如果在写好之后修改了代码，那么代码对应的注释一定也要做出相应的修改，不然很容易造成“文不对题”的现象，给别人也给你自己带来困扰。</p></li><li><p>问题四：项目的 API 文档重要吗？<br>项目的文档，主要是对相应的系统、产品或是功能模块做一个概述，有助于后人理解。以一个 service 为例，其对应的文档通常会包括下面几部分：</p></li></ul><ol><li>系统的概述，包括各个组成部分以及工作流程的介绍；</li><li>每个组成部分的具体介绍，包括必要性、设计原理等等；</li><li>系统的 performance，包括 latency 等等参数；</li><li>主要说明如何对系统的各个部分进行修改，主要给出相应的 code pointer 及对应的测试方案。</li></ol><h1 id="实战篇"><a href="#实战篇" class="headerlink" title="实战篇"></a>实战篇</h1><h2 id="REST-简介"><a href="#REST-简介" class="headerlink" title="REST 简介"></a>REST 简介</h2><ul><li>REST 的全称是表征层状态转移（REpresentational State Transfer），本意是指一种操作资源方法。不过，你不用纠结于这个绕口的名字。换种方式来说，REST 的实质可以理解为：通过 URL 定位资源，用 GET、POST、PUT、DELETE 等动词来描述操作。而满足 REST 要求的接口，就被称为 RESTful 的接口。</li><li>总的来说，RESTful 接口通常以 HTTP GET 和 POST 形式出现。但并非所有的 GET、POST 请求接口，都是 RESTful 的接口。</li><li>REST 接口的另一个重要要求：无状态。无状态的意思是，每个 REST 请求都是独立的，不需要服务器在会话（Session）中缓存中间状态来完成这个请求。</li><li>一个 HTTP 请求完成一次完整操作。</li></ul><h2 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h2><ul><li>WebSocket 是一种在单个 TCP&#x2F;TSL 连接上，进行全双工、双向通信的协议。WebSocket 可以让客户端与服务器之间的数据交换变得更加简单高效，服务端也可以主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就可以直接创建持久性的连接，并进行双向数据传输。</li></ul><h2 id="数据结构与算法全景"><a href="#数据结构与算法全景" class="headerlink" title="数据结构与算法全景"></a>数据结构与算法全景</h2><blockquote><p>基础数据结构：数组，堆，栈，队列，链表</p></blockquote><ul><li>数组自不必多说，Python 中的基础数组，满足 O(1) 的随机查找，和 O(n) 的随机插入。</li><li>堆，严格来讲，是一种特殊的二叉树，满足 O(nlogn) 的随机插入和删除，以及 O(1) 时间复杂度拿到最大值或者最小值。堆可以用来实现优先队列，还可以在项目中实现多任务调度，有着非常广泛的应用。</li><li>栈，是一种先进后出的数据结构，入栈和出栈操作都是 O(1) 时间复杂度。</li><li>队列，和栈对应，不过功能刚好相反，它是一种先进先出的数据结构，一如其名，先排队者先服务。入队和出队也是 O(1) 的时间复杂度。栈和队列都能用数组来实现，但是对空间的规划需要注意，特别是用数组实现的队列，我们通常用的是循环队列。</li><li>链表，则是另一种线性表，和数组的不同是，它不支持随机访问，你不能通过下标来获取链表的元素。链表的元素通过指针相连，单链表中元素可以指向后者，双链表则是让相邻的元素互相连接。</li></ul><blockquote><p>进阶数据结构：无向图，有向图，树，DAG 图，字典树，哈希表</p></blockquote><ul><li><p>无向图，是由顶点和边组成的数据结构，一条边连接两个顶点（如果两个顶点是一个，这条边称为自环）。一如其名，“无向”，所以它的边没有指向性。</p></li><li><p>有向图，和无向图一样都是“图”这种数据结构，不同的是有向图的边有指向性，方向为一个顶点指向另一个顶点。</p></li><li><p>树这种数据结构，则可以分为有根树和无根树。前者中，最常见的就是我们的二叉树，从顶点开始一级级向下，每个父结点最多有两个子结点。至于无根树，则是一种特殊的无向图，无环连通的无向图被称为无根树，它有很多特别的性质和优点，在离散数学中应用广泛。</p></li><li><p>DAG 图，也叫做有向无环图，是一种特殊应用的数据结构，在图的动态规划问题中出现甚多。遍历 DAG 图的方式，也就是我们常说的拓扑排序，是一种图算法。DAG 可以认为是链表的图版本，如果说区块链是链表，那么区块链 3.0 时代可能就是 DAG 图。</p></li><li><p>字典树，又被称为 Trie 树，是一种边为字符的有向图，它在字符串处理中有着非常强大的应用。广为人知的 AC 自动机，就是用 Trie 树来解决多模式字符串匹配问题。Trie 树在工业界也常被拿来做搜索提示，例如你在百度中搜索 “极客时”，就会自动跳出 “极客时间”。</p></li><li><p>哈希表，这一定是程序员应用最广、自觉最简单的一个数据结构，比如 Python 的 dict() 就可以拿来即用，简单而自然。不过，哈希表其实有着非常深刻的内涵，冲突算法、哈希算法、扩容算法，都很值得我们去深究一下。</p></li><li><p>算法：二分搜索</p></li><li><p>算法：深度优先搜索（DFS）和广度优先搜索（BFS）</p></li><li><p>算法：贪心和动态规划</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aws</title>
      <link href="/post/aws/"/>
      <url>/post/aws/</url>
      
        <content type="html"><![CDATA[<p>Record some knowledge of AWS</p><span id="more"></span><h1 id="Documents"><a href="#Documents" class="headerlink" title="Documents"></a>Documents</h1><ul><li>AWS CLI Command Reference <a href="https://docs.aws.amazon.com/cli/latest/index.html">https://docs.aws.amazon.com/cli/latest/index.html</a></li><li>AWS Documentation <a href="https://docs.aws.amazon.com/index.html">https://docs.aws.amazon.com/index.html</a></li><li><a href="https://mp.weixin.qq.com/s/Qo3_35pyn9acw8NiUuITNg">AWS Official Wechat Account</a></li><li><a href="https://mp.weixin.qq.com/s/tGRSVWiZenROqE7GTfjSgQ">AWS cerificate</a></li></ul><h1 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h1><ul><li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html</a><br>From my understand about role, every user is general people. role like some profession. When switch role, like you become police with some privilege. When you takeoff uniform, just like you switch out role, you loose these privilege.</p></li><li><p><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html">IAM roles for Amazon EC2</a><br>For EC2 instance, it’s very easy to use role without any secret token. When some group of EC2 have permission to assume to some role, when cluster scale up or scale down, all EC2 instances are same with the role permission</p></li><li><p><a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html">Using an IAM role in the AWS CLI</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[profile crossaccountrole]</span><br><span class="line">role_arn = arn:aws:iam::234567890123:role/SomeRole</span><br><span class="line">source_profile = default</span><br><span class="line">mfa_serial = arn:aws:iam::123456789012:mfa/saanvi</span><br><span class="line">external_id = 123456</span><br></pre></td></tr></table></figure></li></ul><h1 id="S3"><a href="#S3" class="headerlink" title="S3"></a>S3</h1><ul><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_understand-policy-summary-access-level-summaries.html#access_policies_access-level">AWS Access Levels</a></li><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_s3_rw-bucket-console.html">Amazon S3: Allows Read and Write Access to Objects in an S3 Bucket, Programmatically and in the Console</a></li><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html">S3 action and permission table</a></li><li><a href="https://aws.amazon.com/premiumsupport/knowledge-center/ec2-instance-access-s3-bucket/">EC2 access S3</a></li><li><a href="https://aws.amazon.com/premiumsupport/knowledge-center/read-access-objects-s3-bucket/">S3 grant public read</a></li></ul><h1 id="Policy-difference"><a href="#Policy-difference" class="headerlink" title="Policy difference"></a>Policy difference</h1><ul><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#aws-managed-policies">https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#aws-managed-policies</a></li></ul><h2 id="multiple-resources"><a href="#multiple-resources" class="headerlink" title="multiple resources"></a>multiple resources</h2><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html">https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;arn:aws:dynamodb:us-east-2:account-ID-without-hyphens:table/books_table&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;arn:aws:dynamodb:us-east-2:account-ID-without-hyphens:table/magazines_table&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aws </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fluent Python</title>
      <link href="/post/fluent-python/"/>
      <url>/post/fluent-python/</url>
      
        <content type="html"><![CDATA[<p>Record some trick of python3</p><span id="more"></span> <h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ul><li>Fluent Python <a href="https://evanli.github.io/programming-book-3/Python/Fluent%20Python.pdf">https://evanli.github.io/programming-book-3/Python/Fluent%20Python.pdf</a></li><li>python3-cookbook <a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/preface.html">https://python3-cookbook.readthedocs.io/zh_CN/latest/preface.html</a></li></ul><h1 id="Building-Lists-of-Lists"><a href="#Building-Lists-of-Lists" class="headerlink" title="Building Lists of Lists"></a>Building Lists of Lists</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>board = [[<span class="string">&#x27;_&#x27;</span>] * <span class="number">3</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>board</span><br><span class="line">[[<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>]] &gt;&gt;&gt; board[<span class="number">1</span>][<span class="number">2</span>] = <span class="string">&#x27;X&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>board [[<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;X&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># A list with three references to the same list is useless</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board = [[<span class="string">&#x27;_&#x27;</span>] * <span class="number">3</span>] * <span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board</span><br><span class="line">[[<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board[<span class="number">1</span>][<span class="number">2</span>] = <span class="string">&#x27;O&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board</span><br><span class="line">[[<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;O&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;O&#x27;</span>], [<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;O&#x27;</span>]]</span><br></pre></td></tr></table></figure><h1 id="A-x3D-Assignment-Puzzler"><a href="#A-x3D-Assignment-Puzzler" class="headerlink" title="A +&#x3D; Assignment Puzzler"></a>A +&#x3D; Assignment Puzzler</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>, <span class="number">2</span>, [<span class="number">10</span>, <span class="number">20</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>] += [<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;tuple&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, [<span class="number">10</span>, <span class="number">20</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure><h1 id="difference-between-dir-and-dict-in-python"><a href="#difference-between-dir-and-dict-in-python" class="headerlink" title="difference between dir and dict in python"></a>difference between dir and <strong>dict</strong> in python</h1><ul><li><a href="https://stackoverflow.com/questions/14361256/whats-the-biggest-difference-between-dir-and-dict-in-python">https://stackoverflow.com/questions/14361256/whats-the-biggest-difference-between-dir-and-dict-in-python</a><br>The same applies to many built-in types; lists do not have a <strong>dict</strong> attribute, but you can still list all the attributes using dir()</li></ul><h1 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h1><p>The Python IDE for Professional Developers <a href="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/</a><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200516212642.png"></p><ul><li>wechat article <a href="https://mp.weixin.qq.com/s/dc2vR8mcVsXJirIcRpsLYg">https://mp.weixin.qq.com/s/dc2vR8mcVsXJirIcRpsLYg</a></li></ul><h1 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h1><p>Record issue that I cannot find in google</p><h2 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h2><p>after operation in some one folder, there is .DS_Store. Then I run following code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> fn <span class="keyword">in</span> os.listdir(<span class="string">&quot;migrations/versions&quot;</span>):</span><br><span class="line">    <span class="keyword">if</span> fn == <span class="string">&quot;__pycache__&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;migrations/versions/<span class="subst">&#123;fn&#125;</span>&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        first_line = f.readline()</span><br><span class="line"></span><br><span class="line"><span class="comment"># error is UnicodeDecodeError: &#x27;utf-8&#x27; codec can&#x27;t decode byte 0xa9 in position 1087: invalid start byte</span></span><br><span class="line">    first_line = f.readline()</span><br><span class="line">  File <span class="string">&quot;/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/codecs.py&quot;</span>, line <span class="number">322</span>, <span class="keyword">in</span> decode</span><br><span class="line">    (result, consumed) = self._buffer_decode(data, self.errors, final)</span><br><span class="line">UnicodeDecodeError: <span class="string">&#x27;utf-8&#x27;</span> codec can<span class="string">&#x27;t decode byte 0xb2 in position 319: invalid start byte</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>after deleting .DS_Store, all is good.</p><h2 id="pycharm-stuck"><a href="#pycharm-stuck" class="headerlink" title="pycharm stuck"></a>pycharm stuck</h2><p>If you open PyCharm is always stuck, you can try delete this <a href="https://rider-support.jetbrains.com/hc/en-us/articles/207097529-What-is-the-idea-folder-">.idea folder</a></p><h2 id="faster-your-pycharm"><a href="#faster-your-pycharm" class="headerlink" title="faster your pycharm"></a>faster your pycharm</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201017094259.png"></p>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask</title>
      <link href="/post/flask/"/>
      <url>/post/flask/</url>
      
        <content type="html"><![CDATA[<p>For develop some internal tools.</p><span id="more"></span> <h1 id="reference-docs"><a href="#reference-docs" class="headerlink" title="reference docs"></a>reference docs</h1><ul><li><a href="https://flask.palletsprojects.com/en/1.1.x/">https://flask.palletsprojects.com/en/1.1.x/</a></li><li><a href="https://flask-appbuilder.readthedocs.io/en/latest/intro.html">https://flask-appbuilder.readthedocs.io/en/latest/intro.html</a></li><li><a href="https://github.com/luhuisicnu/The-Flask-Mega-Tutorial-zh">https://github.com/luhuisicnu/The-Flask-Mega-Tutorial-zh</a> 2017年新版The Flask Mega-Tutorial教程</li></ul><h1 id="pyvenv"><a href="#pyvenv" class="headerlink" title="pyvenv"></a>pyvenv</h1><p>Recommend to use pyvenv to develop flask, easy to manage the python version and packages</p><ul><li><a href="https://docs.python.org/3/library/venv.html#module-venv">https://docs.python.org/3/library/venv.html#module-venv</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv /path/to/new/virtual/environment</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /path/to/new/virtual/environment</span><br></pre></td></tr></table></figure><h1 id="install-flask"><a href="#install-flask" class="headerlink" title="install flask"></a>install flask</h1><ul><li><a href="https://flask-appbuilder.readthedocs.io/en/latest/installation.html#">https://flask-appbuilder.readthedocs.io/en/latest/installation.html#</a></li><li><a href="https://flask.palletsprojects.com/en/1.1.x/installation/#installation">https://flask.palletsprojects.com/en/1.1.x/installation/#installation</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># under virtual env</span></span><br><span class="line">pip install Flask</span><br><span class="line"></span><br><span class="line">pip install flask-appbuilder</span><br><span class="line"></span><br><span class="line">flask fab create-app</span><br><span class="line"></span><br><span class="line">flask run</span><br></pre></td></tr></table></figure><h1 id="SQLAlchemy"><a href="#SQLAlchemy" class="headerlink" title="SQLAlchemy"></a>SQLAlchemy</h1><ul><li>English Documentation <a href="https://docs.sqlalchemy.org/en/13/index.html">https://docs.sqlalchemy.org/en/13/index.html</a></li><li>中文文档 <a href="https://www.osgeo.cn/sqlalchemy/index.html">https://www.osgeo.cn/sqlalchemy/index.html</a></li></ul><p>Sometimes, if it’s not easy to add constriant condition on model.py in database level, we can try from application level by built-in methods pre_add <a href="https://flask-appbuilder.readthedocs.io/en/latest/api.html#flask_appbuilder.baseviews.BaseCRUDView.pre_add">https://flask-appbuilder.readthedocs.io/en/latest/api.html#flask_appbuilder.baseviews.BaseCRUDView.pre_add</a></p><h1 id="security"><a href="#security" class="headerlink" title="security"></a>security</h1><p>Put sensitive data in file <code>.env</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY=secret key</span><br></pre></td></tr></table></figure><p>Use os module method getenv()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">secret_key = os.getenv(<span class="string">&quot;SECRET_KEY&quot;</span>,<span class="string">&quot;default value&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h1><ul><li><p><a href="https://stackoom.com/question/3VWj6/%E4%BD%BF%E7%94%A8JSON%E5%9C%A8flask-appbuilder%E4%B8%AD%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B">Use JSON</a></p></li><li><p><a href="https://www.mysqltutorial.org/mysql-unique/">UNIQUE Index</a> by <em>UniqueConstraint</em> <a href="https://stackoverflow.com/questions/10059345/sqlalchemy-unique-across-multiple-columns">https://stackoverflow.com/questions/10059345/sqlalchemy-unique-across-multiple-columns</a> </p></li><li><p>One issue in update row <a href="https://github.com/dpgaspar/Flask-AppBuilder/issues/1397">https://github.com/dpgaspar/Flask-AppBuilder/issues/1397</a></p></li><li><p><a href="https://portingguide.readthedocs.io/en/latest/dicts.html">has_key</a> dict check key</p></li><li><p>if there is error in log.info( error program ), console will not show that</p></li><li><p>error example: finally is None</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cut_string</span>(<span class="params">s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">  begin = s.find(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">  end = s.rfind(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">  s = s[begin + <span class="number">1</span>:end]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(s) &gt; <span class="number">255</span>:</span><br><span class="line">    cut_string(s)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure></li><li><p>flake8 complains on boolean comparison “&#x3D;&#x3D;” in filter clause  <a href="https://stackoverflow.com/questions/18998010/flake8-complains-on-boolean-comparison-in-filter-clause">sqlalchemy query condition is false</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Terraform 入门</title>
      <link href="/post/terraform/"/>
      <url>/post/terraform/</url>
      
        <content type="html"><![CDATA[<p>Use Infrastructure as Code to provision and manage any cloud, infrastructure, or service 用代码来创建和管理云资源</p><span id="more"></span><h1 id="入门介绍视频"><a href="#入门介绍视频" class="headerlink" title="入门介绍视频"></a>入门介绍视频</h1><p>这个视频给你一个基础的入门概念。Best video for learn terraform: Terraform Course - Automate your AWS cloud infrastructure <a href="https://www.youtube.com/watch?v=SLB_c_ayRMo">https://www.youtube.com/watch?v=SLB_c_ayRMo</a></p><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p><a href="https://www.terraform.io/">https://www.terraform.io/</a>  官方文档<br><a href="https://lonegunmanb.github.io/introduction-terraform/">https://lonegunmanb.github.io/introduction-terraform/</a> 一位有情怀的大佬巨著，必看。<br><a href="https://www.alibabacloud.com/help/zh/doc-detail/91285.htm?spm=a2c63.p38356.b99.372.8b994d00YwQjZI">https://www.alibabacloud.com/help/zh/doc-detail/91285.htm?spm=a2c63.p38356.b99.372.8b994d00YwQjZI</a> 中文版,阿里云文档<br><a href="https://learn.hashicorp.com/terraform/getting-started/intro">https://learn.hashicorp.com/terraform/getting-started/intro</a>  小白学习必看<br><a href="https://whyliyi.github.io/2020/01/27/terraform-resource.html">https://whyliyi.github.io/2020/01/27/terraform-resource.html</a> terraform 中文系列<br><a href="https://wsgzao.github.io/post/terraform/">https://wsgzao.github.io/post/terraform/</a> 奥哥的大作</p><h1 id="terraform-几种用法"><a href="#terraform-几种用法" class="headerlink" title="terraform 几种用法"></a>terraform 几种用法</h1><ol><li>如果是单人操作，backed 就直接本地存储 state。简单方便</li><li>如果是团队合作，backend 可以设置为 S3，大家共享 state， 也会有锁来确保不会起冲突。</li><li>如果财大气粗，可以花钱购买 terraform enterprise(TFE)，大家的修改都会上传到 TFE, 有一个队列来依次执行。TFE 可视化效果非常好,还可以 discard 一些 change, 或者 lock TF  workspace</li></ol><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116110942.jpg"></p><h1 id="基础的命令"><a href="#基础的命令" class="headerlink" title="基础的命令"></a>基础的命令</h1><p>Why not use ansible ? because changes to resources aren’t tracked. terraform code 是存在 git 上的，我们可以轻松检查历史记录，和回退<br>Why didn’t we choose CloudFormation? Its support is limited to AWS. terraform 还支持模块化，复用性可以提升我们效率。而且 terraform 支持多数的云，方便多平台操作。</p><p>Terraform config is code we write, state file is a json file. store these on the remote.<br>Plan is safe to do any where, apply we don’t comment any want. don’t apply locally, don’t apply locally, don’t apply locally!</p><table><thead><tr><th>Commands</th><th>Description</th></tr></thead><tbody><tr><td>terraform init</td><td>Initiate Terraform. Terraform must be initiated before you plan&#x2F;apply terraform.</td></tr><tr><td>terraform plan</td><td>You will be able to examine Terraform’s execution plan before you deploy it to AWS.</td></tr><tr><td>terraform apply</td><td>Deploy your final execution plan to AWS.</td></tr><tr><td>terraform init -upgrade</td><td>Update providers.</td></tr><tr><td>terraform state show</td><td>Inspect the current state.</td></tr><tr><td>terraform graph</td><td>Displays the visual dependency graph of Terraform resources according to configuration files in DIR (or the current directory if omitted).</td></tr><tr><td>terraform destroy</td><td>Destroy all resources created by terraform and also destroy the changes in your state file.</td></tr><tr><td>terraform plan-out <name of file></td><td>To save the displayed plan (from the ‘terraform plan’ command) for reference.</td></tr></tbody></table><h1 id="precedence-优先级"><a href="#precedence-优先级" class="headerlink" title="precedence 优先级"></a>precedence 优先级</h1><p><a href="https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence">https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence</a></p><h1 id="Local-Values"><a href="#Local-Values" class="headerlink" title="Local Values"></a>Local Values</h1><p><a href="https://www.terraform.io/docs/configuration/locals.html">https://www.terraform.io/docs/configuration/locals.html</a></p><h1 id="Terraform-version-compatibility"><a href="#Terraform-version-compatibility" class="headerlink" title="Terraform version compatibility"></a>Terraform version compatibility</h1><table><thead><tr><th>Terraform Version</th><th>Remote State Version</th><th>Able to read</th></tr></thead><tbody><tr><td>0.11.14</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.11.14</td><td>0.13.x</td><td>Yes</td></tr><tr><td>0.11.14</td><td>0.14.x</td><td>Yes</td></tr><tr><td>0.12.2</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.12.x</td><td>&gt; 0.12.x</td><td>No</td></tr><tr><td>0.12.30</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.12.30</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.12.30</td><td>0.13.x</td><td>Yes</td></tr><tr><td>0.12.30</td><td>0.14.x</td><td>Yes</td></tr><tr><td>0.13.x</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.13.x</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.13.x</td><td>&gt; 0.13.x</td><td>No</td></tr><tr><td>0.13.6</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.13.6</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.13.6</td><td>0.13.x</td><td>Yes</td></tr><tr><td>0.13.6</td><td>0.14.x</td><td>Yes</td></tr><tr><td>0.14.x</td><td>&gt;&#x3D; 0.11.14</td><td>Yes</td></tr></tbody></table><p>Recommendation:</p><ol><li>Move workspaces to atleast 0.12.30. Once the workspaces are moved to 0.12.30 they will no longer face compatibility issues with different state versions.</li><li>If you are moving to Terraform 0.13, use  &gt;&#x3D; 0.13.6</li><li>All 0.14 states are compatible.</li></ol><h1 id="terraenv"><a href="#terraenv" class="headerlink" title="terraenv"></a>terraenv</h1><p>This is a good multi-version control tools for terraform. <a href="https://github.com/aaratn/terraenv">https://github.com/aaratn/terraenv</a></p><h1 id="verbose-debug"><a href="#verbose-debug" class="headerlink" title="verbose debug"></a>verbose debug</h1><p>特别是在遇到权限不足的时候，如果想检查是具体哪个 service 权限不足。就需要 debug 输出详细的过程<br><a href="https://www.terraform.io/docs/internals/debugging.html">https://www.terraform.io/docs/internals/debugging.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> TF_LOG=DEBUG</span><br><span class="line">terraform plan</span><br></pre></td></tr></table></figure><h1 id="input-variables-几种方式"><a href="#input-variables-几种方式" class="headerlink" title="input variables 几种方式"></a>input variables 几种方式</h1><p><a href="https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence">https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence</a></p><h1 id="terraform-modules"><a href="#terraform-modules" class="headerlink" title="terraform modules"></a>terraform modules</h1><p><a href="https://learn.hashicorp.com/tutorials/terraform/module?in=terraform/modules">https://learn.hashicorp.com/tutorials/terraform/module?in=terraform/modules</a></p><h1 id="Terraform-Associate"><a href="#Terraform-Associate" class="headerlink" title="Terraform Associate"></a>Terraform Associate</h1><p><a href="https://www.hashicorp.com/certification/terraform-associate">HashiCorp Certified: Terraform Associate</a><br>因为工作中用到了 terraform ，还算比较熟悉，最终通过了考试 <a href="https://www.credly.com/badges/d20f3c6a-673a-40cc-aa69-2cb3ac127389/public_url">HashiCorp Certified: Terraform Associate</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aws </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch(elk) technology and practice</title>
      <link href="/post/elk-geek/"/>
      <url>/post/elk-geek/</url>
      
        <content type="html"><![CDATA[<p>Elasticsearch is a search engine based on the Lucene library. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in Java. This blog is record  what I learn from this <a href="https://time.geekbang.org/course/intro/100030501">geek Course</a></p><span id="more"></span> <p>The <a href="https://time.geekbang.org/column/article/104136">recommendation</a> for learning Elasticsearch. </p><h1 id="Getting-started-with-elasticsearch"><a href="#Getting-started-with-elasticsearch" class="headerlink" title="Getting started with elasticsearch"></a>Getting started with elasticsearch</h1><p>This course github <a href="https://github.com/geektime-geekbang/geektime-ELK">https://github.com/geektime-geekbang/geektime-ELK</a><br>Elasticsearch <a href="https://www.elastic.co/">https://www.elastic.co/</a></p><ul><li>Elasticsearch Certification <a href="https://www.elastic.co/cn/training/certification">https://www.elastic.co/cn/training/certification</a></li><li>ElasticSearch Engineering I training  <a href="https://www.elastic.co/cn/training/elasticsearch-engineer-1">https://www.elastic.co/cn/training/elasticsearch-engineer-1</a></li><li>ElasticSearch Engineering II training  <a href="https://www.elastic.co/cn/training/elasticsearch-engineer-2">https://www.elastic.co/cn/training/elasticsearch-engineer-2</a></li></ul><h2 id="Install-elasticsearch"><a href="#Install-elasticsearch" class="headerlink" title="Install elasticsearch"></a>Install elasticsearch</h2><p>Install can refer <a href="https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html">offical docs</a>  </p><p>From version 7.0, don’t need install java by yourself.</p><table><thead><tr><th align="center">directory</th><th align="center">Vaconfig filelue</th><th align="center">description</th></tr></thead><tbody><tr><td align="center">bin</td><td align="center"></td><td align="center">execution file</td></tr><tr><td align="center">config</td><td align="center">elasticsearch.yml</td><td align="center">es cluster config</td></tr><tr><td align="center">JDK</td><td align="center"></td><td align="center">Java env</td></tr><tr><td align="center">data</td><td align="center">path.data</td><td align="center">es data file</td></tr><tr><td align="center">lib</td><td align="center"></td><td align="center">Java lib</td></tr><tr><td align="center">logs</td><td align="center">path.log</td><td align="center">log file</td></tr><tr><td align="center">modules</td><td align="center"></td><td align="center">including all es modules</td></tr><tr><td align="center">plugins</td><td align="center"></td><td align="center">including all installed plugins</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adjust JVM - config/jvm.options</span></span><br><span class="line">default is 1GB</span><br></pre></td></tr></table></figure><p>Config recommendation</p><ol><li>Xms equal to Xmx</li><li>Xmx don’t larger than 50% of memory</li><li>Xmx no larger than 30GB can refer <a href="https://www.elastic.co/blog/a-heap-of-trouble">https://www.elastic.co/blog/a-heap-of-trouble</a></li></ol><h2 id="plugins"><a href="#plugins" class="headerlink" title="plugins"></a>plugins</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#启动单节点 start single nodes</span></span><br><span class="line">bin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data</span><br><span class="line"></span><br><span class="line">bin/elasticsearch-plugin list</span><br><span class="line">bin/elasticsearch-plugin install analysis-icu</span><br><span class="line"></span><br><span class="line"><span class="comment">#start kibana</span></span><br><span class="line">bin/kibana</span><br><span class="line"></span><br><span class="line">bin/kibana-plugin install plugin_location</span><br><span class="line">bin/kibana-plugin list</span><br><span class="line">bin/kibana-plugin remove</span><br><span class="line"></span><br><span class="line"><span class="comment"># dev tools in kibana</span></span><br><span class="line"><span class="comment">#查看安装的插件 check installed plugins</span></span><br><span class="line">GET http://localhost:9200/_cat/plugins?v</span><br><span class="line"><span class="comment">#查看集群 check cluster </span></span><br><span class="line">GET http://localhost:9200</span><br><span class="line"><span class="comment">#查看nodes check nodes</span></span><br><span class="line">GET _cat/nodes</span><br><span class="line">GET _cluster/health</span><br></pre></td></tr></table></figure><p>Run multiple nodes in the same machine</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.dat= node0_data -d</span><br><span class="line">bin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.dat= node1_data -d</span><br><span class="line">bin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.dat= node2_data -d</span><br><span class="line">bin/elasticsearch -E node.name=node3 -E cluster.name=geektime -E path.dat= node3_data -d</span><br></pre></td></tr></table></figure><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>Use docker-compose start cerebro kibana and 2 elasticsearch</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">cerebro:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lmenezes/cerebro:0.8.5</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cerebro</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9000:9000&quot;</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">-Dhosts.0.host=http://elasticsearch:9200</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line">  <span class="attr">kibana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/kibana/kibana:7.1.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kibana7</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">I18N_LOCALE=zh-CN</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">XPACK_GRAPH_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TIMELION_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">XPACK_MONITORING_COLLECTION_ENABLED=&quot;true&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5601:5601&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.1.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es7_01</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.name=geektime</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">node.name=es7_01</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.initial_master_nodes=es7_01,es7_02</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7data1:/usr/share/elasticsearch/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line">  <span class="attr">elasticsearch2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.1.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es7_02</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.name=geektime</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">node.name=es7_02</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.initial_master_nodes=es7_01,es7_02</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7data2:/usr/share/elasticsearch/data</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">es7net</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">es7data1:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">es7data2:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">es7net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h2><blockquote><p>Make sure all the version is the same for elasticsearch logstash and kibana<br>Now the latest version is 7.6, because this course use 7.1, <a href="https://www.elastic.co/downloads/past-releases/logstash-7-1-0">https://www.elastic.co/downloads/past-releases/logstash-7-1-0</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download logstash，（7.1.0）in mac you need also install JAVA</span></span><br><span class="line"><span class="comment"># cd movielens, modify logstash.conf config</span></span><br><span class="line"><span class="comment"># modify your path of movies.csv</span></span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; <span class="string">&quot;YOUR_FULL_PATH_OF_movies.csv&quot;</span></span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    sincedb_path =&gt; <span class="string">&quot;/dev/null&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># First start Elasticsearch cluster，then start logstash </span></span><br><span class="line">sudo ./bin/logstash -f /YOUR_PATH_of_logstash.conf</span><br></pre></td></tr></table></figure><ul><li>Download MovieLens data set：<a href="https://grouplens.org/datasets/movielens/">https://grouplens.org/datasets/movielens/</a></li><li>Logstash download：<a href="https://www.elastic.co/cn/downloads/logstash">https://www.elastic.co/cn/downloads/logstash</a></li><li>Logstash docs：<a href="https://www.elastic.co/guide/en/logstash/current/index.html">https://www.elastic.co/guide/en/logstash/current/index.html</a></li></ul><h1 id="Elasticsearch-basic"><a href="#Elasticsearch-basic" class="headerlink" title="Elasticsearch basic"></a>Elasticsearch basic</h1><p>Document is the smallest unit of elasticsearch. Document will transform to json and store in es. Every document has unique ID.</p><ul><li>Mutiple Tyeps <a href="https://www.elastic.co/cn/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0">https://www.elastic.co/cn/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0</a></li><li>CAT Index API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-indices.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-indices.html</a><br>Index 相关 API<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#查看索引相关信息 check index info</span><br><span class="line">GET kibana_sample_data_ecommerce</span><br><span class="line"></span><br><span class="line">#查看索引的文档总数 check index count</span><br><span class="line">GET kibana_sample_data_ecommerce/_count</span><br><span class="line"></span><br><span class="line">#查看前10条文档，了解文档格式 check first 10 index </span><br><span class="line">POST kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#_cat indices API</span><br><span class="line">#查看indices </span><br><span class="line">GET /_cat/indices/kibana*?v&amp;s=index</span><br><span class="line"></span><br><span class="line">#查看状态为绿的索引 </span><br><span class="line">GET /_cat/indices?v&amp;health=green</span><br><span class="line"></span><br><span class="line">#按照文档个数排序</span><br><span class="line">GET /_cat/indices?v&amp;s=docs.count:desc</span><br><span class="line"></span><br><span class="line">#查看具体的字段</span><br><span class="line">GET /_cat/indices/kibana*?pri&amp;v&amp;h=health,index,pri,rep,docs.count,mt</span><br><span class="line"></span><br><span class="line">#How much memory is used per index?</span><br><span class="line">GET /_cat/indices?v&amp;h=i,tm&amp;s=tm:desc</span><br></pre></td></tr></table></figure></li></ul><h2 id="Node-amp-Shard"><a href="#Node-amp-Shard" class="headerlink" title="Node &amp; Shard"></a>Node &amp; Shard</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html</a></p><ol><li>Master-eligible node: A node that has node.master set to true (default), which makes it eligible to be elected as the master node, which controls the cluster.</li><li>Data node: A node that has node.data set to true (default). Data nodes hold data and perform data related operations such as CRUD, search, and aggregations.</li><li>Ingest node: A node that has node.ingest set to true (default). Ingest nodes are able to apply an ingest pipeline to a document in order to transform and enrich the document before indexing. With a heavy ingest load, it makes sense to use dedicated ingest nodes and to mark the master and data nodes as node.ingest: false.</li><li>Machine learning node: A node that has xpack.ml.enabled and node.ml set to true, which is the default behavior in the Elasticsearch default distribution. If you want to use machine learning features, there must be at least one machine learning node in your cluster. For more information about machine learning features, see Machine learning in the Elastic Stack.</li></ol><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html</a></p><ol><li>primary shard: Each document is stored in a single primary shard. When you index a document, it is indexed first on the primary shard, then on all replicas of the primary shard. By default, an index has one primary shard. You can specify more primary shards to scale the number of documents that your index can handle. You cannot change the number of primary shards in an index, once the index is created. However, an index can be split into a new index using the split API. See also routing</li><li>replica shard: Each primary shard can have zero or more replicas. A replica is a copy of the primary shard, and has two purposes:</li></ol><ul><li>increase failover: a replica shard can be promoted to a primary shard if the primary fails</li><li>increase performance: get and search requests can be handled by primary or replica shards.</li></ul><p>By default, each primary shard has one replica, but the number of replicas can be changed dynamically on an existing index. A replica shard will never be started on the same node as its primary shard.</p><h2 id="cluster-health"><a href="#cluster-health" class="headerlink" title="cluster-health"></a>cluster-health</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">get _cat/nodes?v</span><br><span class="line">GET /_nodes/es7_01,es7_02</span><br><span class="line">GET /_cat/nodes?v</span><br><span class="line">GET /_cat/nodes?v&amp;h=id,ip,port,v,m</span><br><span class="line"></span><br><span class="line">GET _cluster/health</span><br><span class="line">GET _cluster/health?level=shards</span><br><span class="line">GET /_cluster/health/kibana_sample_data_ecommerce,kibana_sample_data_flights</span><br><span class="line">GET /_cluster/health/kibana_sample_data_flights?level=shards</span><br><span class="line"></span><br><span class="line">#### cluster state</span><br><span class="line">The cluster state API allows access to metadata representing the state of the whole cluster. This includes information such as</span><br><span class="line">GET /_cluster/state</span><br><span class="line"></span><br><span class="line">#cluster get settings</span><br><span class="line">GET /_cluster/settings</span><br><span class="line">GET /_cluster/settings?include_defaults=true</span><br><span class="line"></span><br><span class="line">GET _cat/shards</span><br><span class="line">GET _cat/shards?h=index,shard,prirep,state,unassigned.reason</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>CAT Nodes API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-nodes.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-nodes.html</a></li><li>Cluster API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html</a></li><li>CAT Shards API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-shards.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-shards.html</a></li></ul><h2 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h2><ul><li>Document API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">############Create Document############</span><br><span class="line">#create document. 自动生成 _id</span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;</span><br><span class="line">&quot;user&quot; : &quot;Mike&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-04-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Kibana&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#create document. 指定Id。如果id已经存在，报错</span><br><span class="line">PUT users/_doc/1?op_type=create</span><br><span class="line">&#123;</span><br><span class="line">    &quot;user&quot; : &quot;Jack&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#create document. 指定 ID 如果已经存在，就报错</span><br><span class="line">PUT users/_create/1</span><br><span class="line">&#123;</span><br><span class="line">     &quot;user&quot; : &quot;Jack&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### Get Document by ID</span><br><span class="line">#Get the document by ID</span><br><span class="line">GET users/_doc/1</span><br><span class="line"></span><br><span class="line">###  Index &amp; Update</span><br><span class="line">#Update 指定 ID  (先删除，在写入)</span><br><span class="line">GET users/_doc/1</span><br><span class="line"></span><br><span class="line">PUT users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">&quot;user&quot; : &quot;Mike&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#GET users/_doc/1</span><br><span class="line">#在原文档上增加字段</span><br><span class="line">POST users/_update/1/</span><br><span class="line">&#123;</span><br><span class="line">    &quot;doc&quot;:&#123;</span><br><span class="line">        &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">        &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### Delete by Id</span><br><span class="line"># 删除文档</span><br><span class="line">DELETE users/_doc/1</span><br><span class="line"></span><br><span class="line">### Bulk 操作</span><br><span class="line">#执行两次，查看每次的结果</span><br><span class="line"></span><br><span class="line">#执行第1次</span><br><span class="line">POST _bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line">&#123; &quot;delete&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;create&quot; : &#123; &quot;_index&quot; : &quot;test2&quot;, &quot;_id&quot; : &quot;3&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value3&quot; &#125;</span><br><span class="line">&#123; &quot;update&quot; : &#123;&quot;_id&quot; : &quot;1&quot;, &quot;_index&quot; : &quot;test&quot;&#125; &#125;</span><br><span class="line">&#123; &quot;doc&quot; : &#123;&quot;field2&quot; : &quot;value2&quot;&#125; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#执行第2次</span><br><span class="line">POST _bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line">&#123; &quot;delete&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;create&quot; : &#123; &quot;_index&quot; : &quot;test2&quot;, &quot;_id&quot; : &quot;3&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value3&quot; &#125;</span><br><span class="line">&#123; &quot;update&quot; : &#123;&quot;_id&quot; : &quot;1&quot;, &quot;_index&quot; : &quot;test&quot;&#125; &#125;</span><br><span class="line">&#123; &quot;doc&quot; : &#123;&quot;field2&quot; : &quot;value2&quot;&#125; &#125;</span><br><span class="line"></span><br><span class="line">### mget 操作</span><br><span class="line">GET /_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#URI中指定index</span><br><span class="line">GET /test/_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET /_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">            &quot;_source&quot; : false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;,</span><br><span class="line">            &quot;_source&quot; : [&quot;field3&quot;, &quot;field4&quot;]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;3&quot;,</span><br><span class="line">            &quot;_source&quot; : &#123;</span><br><span class="line">                &quot;include&quot;: [&quot;user&quot;],</span><br><span class="line">                &quot;exclude&quot;: [&quot;user.location&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### msearch 操作</span><br><span class="line">POST kibana_sample_data_ecommerce/_msearch</span><br><span class="line">&#123;&#125;</span><br><span class="line">&#123;&quot;query&quot; : &#123;&quot;match_all&quot; : &#123;&#125;&#125;,&quot;size&quot;:1&#125;</span><br><span class="line">&#123;&quot;index&quot; : &quot;kibana_sample_data_flights&quot;&#125;</span><br><span class="line">&#123;&quot;query&quot; : &#123;&quot;match_all&quot; : &#123;&#125;&#125;,&quot;size&quot;:2&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 清除测试数据</span><br><span class="line">#清除数据 delete data</span><br><span class="line">DELETE users</span><br><span class="line">DELETE test</span><br><span class="line">DELETE test2</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="inverted-index"><a href="#inverted-index" class="headerlink" title="inverted-index"></a>inverted-index</h2><ul><li><a href="https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95">https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a></li><li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/inverted-index.html">https://www.elastic.co/guide/cn/elasticsearch/guide/current/inverted-index.html</a></li></ul><p>Demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Mastering Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Elasticsearch Server&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Elasticsearch Essentials&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="analyzer"><a href="#analyzer" class="headerlink" title="analyzer"></a>analyzer</h2><p>Demo for practice</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#Simple Analyzer – 按照非字母切分（符号被过滤），小写处理</span><br><span class="line">#Stop Analyzer – 小写处理，停用词过滤（the，a，is）</span><br><span class="line">#Whitespace Analyzer – 按照空格切分，不转小写</span><br><span class="line">#Keyword Analyzer – 不分词，直接将输入当作输出</span><br><span class="line">#Patter Analyzer – 正则表达式，默认 \W+ (非字符分隔)</span><br><span class="line">#Language – 提供了30多种常见语言的分词器</span><br><span class="line">#2 running Quick brown-foxes leap over lazy dogs in the summer evening</span><br><span class="line"></span><br><span class="line">#查看不同的analyzer的效果</span><br><span class="line">#standard</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#simpe</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;simple&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;stop&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#stop</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#keyword</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;keyword&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;pattern&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#english</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;english&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;icu_analyzer&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的确实在理”&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的确实在理”&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;icu_analyzer&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;这个苹果不大好吃&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer-anatomy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer-anatomy.html</a></li></ul><h2 id="URI-Search"><a href="#URI-Search" class="headerlink" title="URI Search"></a>URI Search</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a></li><li><a href="https://searchenginewatch.com/sew/news/2065080/search-engines-101">https://searchenginewatch.com/sew/news/2065080/search-engines-101</a></li><li><a href="https://www.huffpost.com/entry/search-engines-101-part-i_b_1104525">https://www.huffpost.com/entry/search-engines-101-part-i_b_1104525</a></li><li><a href="https://www.entrepreneur.com/article/176398">https://www.entrepreneur.com/article/176398</a></li><li><a href="https://www.searchtechnologies.com/meaning-of-relevancy">https://www.searchtechnologies.com/meaning-of-relevancy</a></li></ul><table><thead><tr><th align="center">Grammer</th><th align="center">search range</th></tr></thead><tbody><tr><td align="center">&#x2F;_search</td><td align="center">all index in cluster</td></tr><tr><td align="center">&#x2F;index1&#x2F;_search</td><td align="center">only index1</td></tr><tr><td align="center">&#x2F;index,index2&#x2F;_search</td><td align="center">index1 and index2</td></tr><tr><td align="center">&#x2F;index*&#x2F;_search</td><td align="center">regex index*</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#URI Query</span><br><span class="line">GET kibana_sample_data_ecommerce/_search?q=customer_first_name:Eddie</span><br><span class="line">GET kibana*/_search?q=customer_first_name:Eddie</span><br><span class="line">GET /_all/_search?q=customer_first_name:Eddie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#REQUEST Body</span><br><span class="line">POST kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;: &#123;</span><br><span class="line">&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a></li></ul><table><thead><tr><th align="center">fields</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">q</td><td align="center">query string syntax</td></tr><tr><td align="center">df</td><td align="center">default field</td></tr><tr><td align="center">sort</td><td align="center">sort by xx</td></tr><tr><td align="center">from size</td><td align="center">for page</td></tr><tr><td align="center">profile</td><td align="center">check the query process</td></tr><tr><td align="center">A B</td><td align="center">A OR B</td></tr><tr><td align="center">“A B”</td><td align="center">A AND B</td></tr><tr><td align="center">title:(A AND B)</td><td align="center">title&#x3D;”A AND B”</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">#基本查询</span><br><span class="line">GET /movies/_search?q=2012&amp;df=title&amp;sort=year:desc&amp;from=0&amp;size=10&amp;timeout=1s</span><br><span class="line"></span><br><span class="line">#带profile</span><br><span class="line">GET /movies/_search?q=2012&amp;df=title</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#泛查询，正对_all,所有字段</span><br><span class="line">GET /movies/_search?q=2012</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#指定字段</span><br><span class="line">GET /movies/_search?q=title:2012&amp;sort=year:desc&amp;from=0&amp;size=10&amp;timeout=1s</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查找美丽心灵, Mind为泛查询</span><br><span class="line">GET /movies/_search?q=title:Beautiful Mind</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 泛查询</span><br><span class="line">GET /movies/_search?q=title:2012</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#使用引号，Phrase查询</span><br><span class="line">GET /movies/_search?q=title:&quot;Beautiful Mind&quot;</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#分组，Bool查询</span><br><span class="line">GET /movies/_search?q=title:(Beautiful Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#布尔操作符</span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET /movies/_search?q=title:(Beautiful AND Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET /movies/_search?q=title:(Beautiful NOT Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET /movies/_search?q=title:(Beautiful %2BMind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#范围查询 ,区间写法</span><br><span class="line">GET /movies/_search?q=title:beautiful AND year:[2002 TO 2018%7D</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#通配符查询</span><br><span class="line">GET /movies/_search?q=title:b*</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//模糊匹配&amp;近似度匹配</span><br><span class="line">GET /movies/_search?q=title:beautifl~1</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /movies/_search?q=title:&quot;Lord Rings&quot;~2</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Request-Body"><a href="#Request-Body" class="headerlink" title="Request Body"></a>Request Body</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">#ignore_unavailable=true，可以忽略尝试访问不存在的索引“404_idx”导致的报错</span><br><span class="line">#查询movies分页</span><br><span class="line">POST /movies,404_idx/_search?ignore_unavailable=true</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;: &#123;</span><br><span class="line">&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;from&quot;:10,</span><br><span class="line">  &quot;size&quot;:20,</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对日期排序</span><br><span class="line">POST kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;sort&quot;:[&#123;&quot;order_date&quot;:&quot;desc&quot;&#125;],</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#source filtering</span><br><span class="line">POST kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_source&quot;:[&quot;order_date&quot;],</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#脚本字段 painless script</span><br><span class="line">GET kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;script_fields&quot;: &#123;</span><br><span class="line">    &quot;new_field&quot;: &#123;</span><br><span class="line">      &quot;script&quot;: &#123;</span><br><span class="line">        &quot;lang&quot;: &quot;painless&quot;,</span><br><span class="line">        &quot;source&quot;: &quot;doc[&#x27;order_date&#x27;].value+&#x27;hello&#x27;&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST movies/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;last christmas&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;</span><br><span class="line">        &quot;query&quot;: &quot;last christmas&quot;,</span><br><span class="line">        &quot;operator&quot;: &quot;and&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;title&quot;:&#123;</span><br><span class="line">        &quot;query&quot;: &quot;one love&quot;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># slop can increase search area</span><br><span class="line">POST movies/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;title&quot;:&#123;</span><br><span class="line">        &quot;query&quot;: &quot;one love&quot;,</span><br><span class="line">        &quot;slop&quot;: 1</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Simple-Query-String"><a href="#Simple-Query-String" class="headerlink" title="Simple Query String"></a>Simple Query String</h2><ul><li>Not support AND OR NOT, will transform thses to string</li><li>Support + for AND, | for OR, - for NOT</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">PUT /users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;Ruan Yiming&quot;,</span><br><span class="line">  &quot;about&quot;:&quot;java, golang, node, swift, elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /users/_doc/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;Li Yiming&quot;,</span><br><span class="line">  &quot;about&quot;:&quot;Hadoop&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;query_string&quot;: &#123;</span><br><span class="line">      &quot;default_field&quot;: &quot;name&quot;,</span><br><span class="line">      &quot;query&quot;: &quot;Ruan AND Yiming&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;query_string&quot;: &#123;</span><br><span class="line">      &quot;fields&quot;:[&quot;name&quot;,&quot;about&quot;],</span><br><span class="line">      &quot;query&quot;: &quot;(Ruan AND Yiming) OR (Java AND Elasticsearch)&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Simple Query 默认的operator是 Or</span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;simple_query_string&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;Ruan AND Yiming&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;name&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;simple_query_string&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;Ruan Yiming&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;name&quot;],</span><br><span class="line">      &quot;default_operator&quot;: &quot;AND&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /movies/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;:&#123;</span><br><span class="line">&quot;query_string&quot;:&#123;</span><br><span class="line">&quot;default_field&quot;: &quot;title&quot;,</span><br><span class="line">&quot;query&quot;: &quot;Beafiful AND Mind&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 多fields</span><br><span class="line">GET /movies/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;:&#123;</span><br><span class="line">&quot;query_string&quot;:&#123;</span><br><span class="line">&quot;fields&quot;:[</span><br><span class="line">&quot;title&quot;,</span><br><span class="line">&quot;year&quot;</span><br><span class="line">],</span><br><span class="line">&quot;query&quot;: &quot;2012&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /movies/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:true,</span><br><span class="line">&quot;query&quot;:&#123;</span><br><span class="line">&quot;simple_query_string&quot;:&#123;</span><br><span class="line">&quot;query&quot;:&quot;Beautiful +mind&quot;,</span><br><span class="line">&quot;fields&quot;:[&quot;title&quot;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Dynamic-Mapping"><a href="#Dynamic-Mapping" class="headerlink" title="Dynamic Mapping"></a>Dynamic Mapping</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-field-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-field-mapping.html</a></li></ul><table><thead><tr><th align="center"></th><th align="center">true</th><th align="center">false</th><th align="center">strict</th></tr></thead><tbody><tr><td align="center">document can be index</td><td align="center">YES</td><td align="center">YES</td><td align="center">NO</td></tr><tr><td align="center">fields can be index</td><td align="center">YES</td><td align="center">NO</td><td align="center">NO</td></tr><tr><td align="center">mapping can be update</td><td align="center">YES</td><td align="center">NO</td><td align="center">NO</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">#写入文档，查看 Mapping</span><br><span class="line">PUT mapping_test/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Chan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Jackie&quot;,</span><br><span class="line">  &quot;loginDate&quot;:&quot;2018-07-24T10:29:48.103Z&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看 Mapping文件</span><br><span class="line">GET mapping_test/_mapping</span><br><span class="line"></span><br><span class="line">#Delete index</span><br><span class="line">DELETE mapping_test</span><br><span class="line"></span><br><span class="line">#dynamic mapping，推断字段的类型</span><br><span class="line">PUT mapping_test/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;uid&quot; : &quot;123&quot;,</span><br><span class="line">    &quot;isVip&quot; : false,</span><br><span class="line">    &quot;isAdmin&quot;: &quot;true&quot;,</span><br><span class="line">    &quot;age&quot;:19,</span><br><span class="line">    &quot;heigh&quot;:180</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看 Dynamic</span><br><span class="line">GET mapping_test/_mapping</span><br><span class="line"></span><br><span class="line">#默认Mapping支持dynamic，写入的文档中加入新的字段</span><br><span class="line">PUT dynamic_mapping_test/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;newField&quot;:&quot;someValue&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#该字段可以被搜索，数据也在_source中出现</span><br><span class="line">POST dynamic_mapping_test/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match&quot;:&#123;</span><br><span class="line">      &quot;newField&quot;:&quot;someValue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#修改为dynamic false</span><br><span class="line">PUT dynamic_mapping_test/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;dynamic&quot;: false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#新增 anotherField</span><br><span class="line">PUT dynamic_mapping_test/_doc/10</span><br><span class="line">&#123;</span><br><span class="line">  &quot;anotherField&quot;:&quot;someValue&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#该字段不可以被搜索，因为dynamic已经被设置为false</span><br><span class="line">POST dynamic_mapping_test/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match&quot;:&#123;</span><br><span class="line">      &quot;anotherField&quot;:&quot;someValue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">get dynamic_mapping_test/_doc/10</span><br><span class="line"></span><br><span class="line">#修改为strict</span><br><span class="line">PUT dynamic_mapping_test/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;dynamic&quot;: &quot;strict&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#写入数据出错，HTTP Code 400</span><br><span class="line">PUT dynamic_mapping_test/_doc/12</span><br><span class="line">&#123;</span><br><span class="line">  &quot;lastField&quot;:&quot;value&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE dynamic_mapping_test</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Mapping-Setting"><a href="#Mapping-Setting" class="headerlink" title="Mapping Setting"></a>Mapping Setting</h2><ul><li>Mapping Parameters <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html</a></li></ul><table><thead><tr><th align="center">Index Option</th><th align="center">Record Type</th></tr></thead><tbody><tr><td align="center">docs</td><td align="center">doc id</td></tr><tr><td align="center">freqs</td><td align="center">doc id, term frequencies</td></tr><tr><td align="center">positions</td><td align="center">doc id, term frequencies, term position</td></tr><tr><td align="center">offsets</td><td align="center">doc id, term frequencies, term position, character offects</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">#设置 index 为 false</span><br><span class="line">DELETE users</span><br><span class="line">PUT users</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;firstName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;lastName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mobile&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;index&quot;: false</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming&quot;,</span><br><span class="line">  &quot;mobile&quot;: &quot;12345678&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;mobile&quot;:&quot;12345678&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设定Null_value</span><br><span class="line"></span><br><span class="line">DELETE users</span><br><span class="line">PUT users</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;firstName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;lastName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mobile&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;keyword&quot;,</span><br><span class="line">          &quot;null_value&quot;: &quot;NULL&quot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming&quot;,</span><br><span class="line">  &quot;mobile&quot;: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT users/_doc/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan2&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming2&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;mobile&quot;:&quot;NULL&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设置 Copy to</span><br><span class="line">DELETE users</span><br><span class="line">PUT users</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;firstName&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;copy_to&quot;: &quot;fullName&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;lastName&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;copy_to&quot;: &quot;fullName&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET users/_search?q=fullName:(Ruan Yiming)</span><br><span class="line"></span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">       &quot;fullName&quot;:&#123;</span><br><span class="line">        &quot;query&quot;: &quot;Ruan Yiming&quot;,</span><br><span class="line">        &quot;operator&quot;: &quot;and&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数组类型</span><br><span class="line">PUT users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;onebird&quot;,</span><br><span class="line">  &quot;interests&quot;:&quot;reading&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;twobirds&quot;,</span><br><span class="line">  &quot;interests&quot;:[&quot;reading&quot;,&quot;music&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET users/_mapping</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Analyzer"><a href="#Analyzer" class="headerlink" title="Analyzer"></a>Analyzer</h2><ul><li>character filters: HTML strip, Mapping, Pattern replace</li><li>tokenizer: whitespace &#x2F; standard &#x2F; uax_url_email &#x2F; pattern &#x2F; keyword &#x2F; path hierarchy</li><li>token filter: Lowercase &#x2F; stop &#x2F; synonym</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">PUT logs/_doc/1</span><br><span class="line">&#123;&quot;level&quot;:&quot;DEBUG&quot;&#125;</span><br><span class="line"></span><br><span class="line">GET /logs/_mapping</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;:&quot;keyword&quot;,</span><br><span class="line">  &quot;char_filter&quot;:[&quot;html_strip&quot;],</span><br><span class="line">  &quot;text&quot;: &quot;&lt;b&gt;hello world&lt;/b&gt;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;:&quot;path_hierarchy&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;/user/ymruan/a/b/c/d/e&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#使用char filter进行替换</span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;char_filter&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;mapping&quot;,</span><br><span class="line">        &quot;mappings&quot; : [ &quot;- =&gt; _&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &quot;text&quot;: &quot;123-456, I-test! test-990 650-555-1234&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//char filter 替换表情符号</span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;char_filter&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;mapping&quot;,</span><br><span class="line">        &quot;mappings&quot; : [ &quot;:) =&gt; happy&quot;, &quot;:( =&gt; sad&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;text&quot;: [&quot;I am felling :)&quot;, &quot;Feeling :( today&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// white space and snowball</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;filter&quot;: [&quot;stop&quot;,&quot;snowball&quot;],</span><br><span class="line">  &quot;text&quot;: [&quot;The gilrs in China are playing this game!&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// whitespace与stop</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;filter&quot;: [&quot;stop&quot;,&quot;snowball&quot;],</span><br><span class="line">  &quot;text&quot;: [&quot;The rain in Spain falls mainly on the plain.&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//remove 加入lowercase后，The被当成 stopword删除</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;filter&quot;: [&quot;lowercase&quot;,&quot;stop&quot;,&quot;snowball&quot;],</span><br><span class="line">  &quot;text&quot;: [&quot;The gilrs in China are playing this game!&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//正则表达式</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;char_filter&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;pattern_replace&quot;,</span><br><span class="line">        &quot;pattern&quot; : &quot;http://(.*)&quot;,</span><br><span class="line">        &quot;replacement&quot; : &quot;$1&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;text&quot; : &quot;http://www.elastic.co&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Dynamic-Template"><a href="#Dynamic-Template" class="headerlink" title="Dynamic Template"></a>Dynamic Template</h2><ul><li>Index Templates <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html</a></li><li>Dynamic Template <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">#数字字符串被映射成text，日期字符串被映射成日期</span><br><span class="line">PUT ttemplate/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">&quot;someNumber&quot;:&quot;1&quot;,</span><br><span class="line">&quot;someDate&quot;:&quot;2019/01/01&quot;</span><br><span class="line">&#125;</span><br><span class="line">GET ttemplate/_mapping</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Create a default template</span><br><span class="line">PUT _template/template_default</span><br><span class="line">&#123;</span><br><span class="line">  &quot;index_patterns&quot;: [&quot;*&quot;],</span><br><span class="line">  &quot;order&quot; : 0,</span><br><span class="line">  &quot;version&quot;: 1,</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1,</span><br><span class="line">    &quot;number_of_replicas&quot;:1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT /_template/template_test</span><br><span class="line">&#123;</span><br><span class="line">    &quot;index_patterns&quot; : [&quot;test*&quot;],</span><br><span class="line">    &quot;order&quot; : 1,</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1,</span><br><span class="line">        &quot;number_of_replicas&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">    &quot;date_detection&quot;: false,</span><br><span class="line">    &quot;numeric_detection&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看template信息</span><br><span class="line">GET /_template/template_default</span><br><span class="line">GET /_template/temp*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#写入新的数据，index以test开头</span><br><span class="line">PUT testtemplate/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">&quot;someNumber&quot;:&quot;1&quot;,</span><br><span class="line">&quot;someDate&quot;:&quot;2019/01/01&quot;</span><br><span class="line">&#125;</span><br><span class="line">GET testtemplate/_mapping</span><br><span class="line">get testtemplate/_settings</span><br><span class="line"></span><br><span class="line">PUT testmy</span><br><span class="line">&#123;</span><br><span class="line">&quot;settings&quot;:&#123;</span><br><span class="line">&quot;number_of_replicas&quot;:5</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">put testmy/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;key&quot;:&quot;value&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">get testmy/_settings</span><br><span class="line">DELETE testmy</span><br><span class="line">DELETE /_template/template_default</span><br><span class="line">DELETE /_template/template_test</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Dynaminc Mapping 根据类型和字段名</span><br><span class="line">DELETE my_index</span><br><span class="line"></span><br><span class="line">PUT my_index/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;isVIP&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET my_index/_mapping</span><br><span class="line">DELETE my_index</span><br><span class="line">PUT my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;dynamic_templates&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">        &quot;strings_as_boolean&quot;: &#123;</span><br><span class="line">          &quot;match_mapping_type&quot;:   &quot;string&quot;,</span><br><span class="line">          &quot;match&quot;:&quot;is*&quot;,</span><br><span class="line">          &quot;mapping&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;boolean&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;strings_as_keywords&quot;: &#123;</span><br><span class="line">          &quot;match_mapping_type&quot;:   &quot;string&quot;,</span><br><span class="line">          &quot;mapping&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE my_index</span><br><span class="line">#结合路径</span><br><span class="line">PUT my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;dynamic_templates&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;full_name&quot;: &#123;</span><br><span class="line">          &quot;path_match&quot;:   &quot;name.*&quot;,</span><br><span class="line">          &quot;path_unmatch&quot;: &quot;*.middle&quot;,</span><br><span class="line">          &quot;mapping&quot;: &#123;</span><br><span class="line">            &quot;type&quot;:       &quot;text&quot;,</span><br><span class="line">            &quot;copy_to&quot;:    &quot;full_name&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT my_index/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &#123;</span><br><span class="line">    &quot;first&quot;:  &quot;John&quot;,</span><br><span class="line">    &quot;middle&quot;: &quot;Winston&quot;,</span><br><span class="line">    &quot;last&quot;:   &quot;Lennon&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET my_index/_search?q=full_name:John</span><br></pre></td></tr></table></figure></li></ul><h2 id="aggregations"><a href="#aggregations" class="headerlink" title="aggregations"></a>aggregations</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html</a></li></ul><ol><li>Bucket Aggregation: A family of aggregations that build buckets, where each bucket is associated with a key and a document criterion. When the aggregation is executed, all the buckets criteria are evaluated on every document in the context and when a criterion matches, the document is considered to “fall in” the relevant bucket. By the end of the aggregation process, we’ll end up with a list of buckets - each one with a set of documents that “belong” to it.</li><li>Metric Aggregation: Aggregations that keep track and compute metrics over a set of documents.</li><li>Pipeline Aggregation: Aggregations that aggregate the output of other aggregations and their associated metrics</li><li>Matrix Aggregation: A family of aggregations that operate on multiple fields and produce a matrix result based on the values extracted from the requested document fields. Unlike metric and bucket aggregations, this aggregation family does not yet support scripting.</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#按照目的地进行分桶统计</span><br><span class="line">GET kibana_sample_data_flights/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;size&quot;: 0,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;flight_dest&quot;:&#123;</span><br><span class="line">&quot;terms&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;DestCountry&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看航班目的地的统计信息，增加平均，最高最低价格</span><br><span class="line">GET kibana_sample_data_flights/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;size&quot;: 0,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;flight_dest&quot;:&#123;</span><br><span class="line">&quot;terms&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;DestCountry&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;avg_price&quot;:&#123;</span><br><span class="line">&quot;avg&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;max_price&quot;:&#123;</span><br><span class="line">&quot;max&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;min_price&quot;:&#123;</span><br><span class="line">&quot;min&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#价格统计信息+天气信息</span><br><span class="line">GET kibana_sample_data_flights/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;size&quot;: 0,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;flight_dest&quot;:&#123;</span><br><span class="line">&quot;terms&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;DestCountry&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;stats_price&quot;:&#123;</span><br><span class="line">&quot;stats&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;wather&quot;:&#123;</span><br><span class="line">  &quot;terms&quot;: &#123;</span><br><span class="line">    &quot;field&quot;: &quot;DestWeather&quot;,</span><br><span class="line">    &quot;size&quot;: 5</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="3-chapter"><a href="#3-chapter" class="headerlink" title="3 chapter"></a>3 chapter</h1><h2 id="term-query-amp-full-query"><a href="#term-query-amp-full-query" class="headerlink" title="term query &amp; full query"></a>term query &amp; full query</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/full-text-queries.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/full-text-queries.html</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">DELETE products</span><br><span class="line">PUT products</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /products/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot;,&quot;desc&quot;:&quot;iPhone&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot;,&quot;desc&quot;:&quot;iPad&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot;,&quot;desc&quot;:&quot;MBP&quot; &#125;</span><br><span class="line"></span><br><span class="line">GET /products</span><br><span class="line"></span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &#123;</span><br><span class="line">        //&quot;value&quot;: &quot;iPhone&quot;</span><br><span class="line">        &quot;value&quot;:&quot;iphone&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;desc.keyword&quot;: &#123;</span><br><span class="line">        //&quot;value&quot;: &quot;iPhone&quot;</span><br><span class="line">        //&quot;value&quot;:&quot;iphone&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;productID&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  //&quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;productID.keyword&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;productID.keyword&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设置 position_increment_gap</span><br><span class="line">DELETE groups</span><br><span class="line">PUT groups</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;names&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;position_increment_gap&quot;: 0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET groups/_mapping</span><br><span class="line"></span><br><span class="line">POST groups/_doc</span><br><span class="line">&#123;</span><br><span class="line">  &quot;names&quot;: [ &quot;John Water&quot;, &quot;Water Smith&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST groups/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;names&quot;: &#123;</span><br><span class="line">        &quot;query&quot;: &quot;Water Water&quot;,</span><br><span class="line">        &quot;slop&quot;: 100</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST groups/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;names&quot;: &quot;Water Smith&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="structured-search"><a href="#structured-search" class="headerlink" title="structured search"></a>structured search</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line">#结构化搜索，精确匹配</span><br><span class="line">DELETE products</span><br><span class="line">POST /products/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 10,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2018-01-01&quot;, &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 20,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2019-01-01&quot;, &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:true, &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:false, &quot;productID&quot; : &quot;QQPX-R-3956-#aD8&quot; &#125;</span><br><span class="line"></span><br><span class="line">GET products/_mapping</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对布尔值 match 查询，有算分</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;avaliable&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对布尔值，通过constant score 转成 filtering，没有算分</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;avaliable&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#数字类型 Term</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: 30</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数字类型 terms</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;terms&quot;: &#123;</span><br><span class="line">          &quot;price&quot;: [</span><br><span class="line">            &quot;20&quot;,</span><br><span class="line">            &quot;30&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数字 Range 查询</span><br><span class="line">GET products/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;constant_score&quot; : &#123;</span><br><span class="line">            &quot;filter&quot; : &#123;</span><br><span class="line">                &quot;range&quot; : &#123;</span><br><span class="line">                    &quot;price&quot; : &#123;</span><br><span class="line">                        &quot;gte&quot; : 20,</span><br><span class="line">                        &quot;lte&quot;  : 30</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 日期 range</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;constant_score&quot; : &#123;</span><br><span class="line">            &quot;filter&quot; : &#123;</span><br><span class="line">                &quot;range&quot; : &#123;</span><br><span class="line">                    &quot;date&quot; : &#123;</span><br><span class="line">                      &quot;gte&quot; : &quot;now-1y&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#exists查询</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;exists&quot;: &#123;</span><br><span class="line">          &quot;field&quot;: &quot;date&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#处理多值字段</span><br><span class="line">POST /movies/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Father of the Bridge Part II&quot;,&quot;year&quot;:1995, &quot;genre&quot;:&quot;Comedy&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Dave&quot;,&quot;year&quot;:1993,&quot;genre&quot;:[&quot;Comedy&quot;,&quot;Romance&quot;] &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#处理多值字段，term 查询是包含，而不是等于</span><br><span class="line">POST movies/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;genre.keyword&quot;: &quot;Comedy&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#字符类型 terms</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;terms&quot;: &#123;</span><br><span class="line">          &quot;productID.keyword&quot;: [</span><br><span class="line">            &quot;QQPX-R-3956-#aD8&quot;,</span><br><span class="line">            &quot;JODL-X-1937-#pV7&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: 30</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;date&quot;: &quot;2019-01-01&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;date&quot;: &quot;2019-01-01&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;productID.keyword&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;productID.keyword&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#对布尔数值</span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;avaliable&quot;: &quot;false&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;avaliable&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;false&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;20&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: &quot;20&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;bool&quot;: &#123;</span><br><span class="line">          &quot;must_not&quot;: &#123;</span><br><span class="line">            &quot;exists&quot;: &#123;</span><br><span class="line">              &quot;field&quot;: &quot;date&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="relevance"><a href="#relevance" class="headerlink" title="relevance"></a>relevance</h2><ul><li>TP &#x3D; term frequency</li><li>IDF &#x3D; inverse document frequency</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">PUT testscore</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT testscore/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;we use Elasticsearch to power the search&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;we like elasticsearch&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;The scoring of documents is caculated by the scoring formula&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;you know, for search&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /testscore/_search</span><br><span class="line">&#123;</span><br><span class="line">  //&quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;content&quot;:&quot;you&quot;</span><br><span class="line">      //&quot;content&quot;: &quot;elasticsearch&quot;</span><br><span class="line">      //&quot;content&quot;:&quot;the&quot;</span><br><span class="line">      //&quot;content&quot;: &quot;the elasticsearch&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST testscore/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;boosting&quot; : &#123;</span><br><span class="line">            &quot;positive&quot; : &#123;</span><br><span class="line">                &quot;term&quot; : &#123;</span><br><span class="line">                    &quot;content&quot; : &quot;elasticsearch&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;negative&quot; : &#123;</span><br><span class="line">                 &quot;term&quot; : &#123;</span><br><span class="line">                     &quot;content&quot; : &quot;like&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;negative_boost&quot; : 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST tmdb/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_source&quot;: [&quot;title&quot;,&quot;overview&quot;],</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;more_like_this&quot;: &#123;</span><br><span class="line">      &quot;fields&quot;: [</span><br><span class="line">        &quot;title^10&quot;,&quot;overview&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;like&quot;: [&#123;&quot;_id&quot;:&quot;14191&quot;&#125;],</span><br><span class="line">      &quot;min_term_freq&quot;: 1,</span><br><span class="line">      &quot;max_query_terms&quot;: 12</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Query-amp-Filtering"><a href="#Query-amp-Filtering" class="headerlink" title="Query&amp;Filtering"></a>Query&amp;Filtering</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-boosting-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-boosting-query.html</a></li></ul><p>Demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><span class="line">POST /products/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 10,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2018-01-01&quot;, &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 20,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2019-01-01&quot;, &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:true, &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:false, &quot;productID&quot; : &quot;QQPX-R-3956-#aD8&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#基本语法</span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot; : &#123;</span><br><span class="line">      &quot;must&quot; : &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;price&quot; : &quot;30&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot; : &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;should&quot; : [</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;JODL-X-1937-#pV7&quot; &#125; &#125;,</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125; &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;minimum_should_match&quot; :1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题</span><br><span class="line">POST /newmovies/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Father of the Bridge Part II&quot;,&quot;year&quot;:1995, &quot;genre&quot;:&quot;Comedy&quot;,&quot;genre_count&quot;:1 &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Dave&quot;,&quot;year&quot;:1993,&quot;genre&quot;:[&quot;Comedy&quot;,&quot;Romance&quot;],&quot;genre_count&quot;:2 &#125;</span><br><span class="line"></span><br><span class="line">#must，有算分</span><br><span class="line">POST /newmovies/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre.keyword&quot;: &#123;&quot;value&quot;: &quot;Comedy&quot;&#125;&#125;&#125;,</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre_count&quot;: &#123;&quot;value&quot;: 1&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#Filter。不参与算分，结果的score是0</span><br><span class="line">POST /newmovies/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: [</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre.keyword&quot;: &#123;&quot;value&quot;: &quot;Comedy&quot;&#125;&#125;&#125;,</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre_count&quot;: &#123;&quot;value&quot;: 1&#125;&#125;&#125;</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Filtering Context</span><br><span class="line">POST _search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot; : &#123;</span><br><span class="line"></span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot; : &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Query Context</span><br><span class="line">POST /products/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 10,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2018-01-01&quot;, &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 20,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2019-01-01&quot;, &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:true, &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:false, &quot;productID&quot; : &quot;QQPX-R-3956-#aD8&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;productID.keyword&quot;: &#123;</span><br><span class="line">              &quot;value&quot;: &quot;JODL-X-1937-#pV7&quot;&#125;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;avaliable&quot;: &#123;&quot;value&quot;: true&#125;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#嵌套，实现了 should not 逻辑</span><br><span class="line">POST /products/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;price&quot;: &quot;30&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;bool&quot;: &#123;</span><br><span class="line">            &quot;must_not&quot;: &#123;</span><br><span class="line">              &quot;term&quot;: &#123;</span><br><span class="line">                &quot;avaliable&quot;: &quot;false&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;minimum_should_match&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Controll the Precision</span><br><span class="line">POST _search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot; : &#123;</span><br><span class="line">      &quot;must&quot; : &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;price&quot; : &quot;30&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot; : &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;should&quot; : [</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;JODL-X-1937-#pV7&quot; &#125; &#125;,</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125; &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;minimum_should_match&quot; :2</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /animals/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;brown&quot; &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;red&quot; &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;quick&quot;   &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;dog&quot;   &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /animals/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;quick&quot; &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;dog&quot;   &#125;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;bool&quot;:&#123;</span><br><span class="line">            &quot;should&quot;:[</span><br><span class="line">               &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;brown&quot; &#125;&#125;,</span><br><span class="line">                 &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;brown&quot; &#125;&#125;,</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE blogs</span><br><span class="line">POST /blogs/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Apple iPad&quot;, &quot;content&quot;:&quot;Apple iPad,Apple iPad&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Apple iPad,Apple iPad&quot;, &quot;content&quot;:&quot;Apple iPad&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;&quot;match&quot;: &#123;</span><br><span class="line">          &quot;title&quot;: &#123;</span><br><span class="line">            &quot;query&quot;: &quot;apple,ipad&quot;,</span><br><span class="line">            &quot;boost&quot;: 1.1</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;,</span><br><span class="line"></span><br><span class="line">        &#123;&quot;match&quot;: &#123;</span><br><span class="line">          &quot;content&quot;: &#123;</span><br><span class="line">            &quot;query&quot;: &quot;apple,ipad&quot;,</span><br><span class="line">            &quot;boost&quot;:</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE news</span><br><span class="line">POST /news/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;Apple Mac&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;Apple iPad&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;Apple employee like Apple Pie and Apple Juice&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST news/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: &#123;</span><br><span class="line">        &quot;match&quot;:&#123;&quot;content&quot;:&quot;apple&quot;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST news/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: &#123;</span><br><span class="line">        &quot;match&quot;:&#123;&quot;content&quot;:&quot;apple&quot;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot;: &#123;</span><br><span class="line">        &quot;match&quot;:&#123;&quot;content&quot;:&quot;pie&quot;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST news/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;boosting&quot;: &#123;</span><br><span class="line">      &quot;positive&quot;: &#123;</span><br><span class="line">        &quot;match&quot;: &#123;</span><br><span class="line">          &quot;content&quot;: &quot;apple&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;negative&quot;: &#123;</span><br><span class="line">        &quot;match&quot;: &#123;</span><br><span class="line">          &quot;content&quot;: &quot;pie&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;negative_boost&quot;: 0.5</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Disjunction-max-query"><a href="#Disjunction-max-query" class="headerlink" title="Disjunction max query"></a>Disjunction max query</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html</a></li></ul><p>Demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">PUT /blogs/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;title&quot;: &quot;Quick brown rabbits&quot;,</span><br><span class="line">    &quot;body&quot;:  &quot;Brown rabbits are commonly seen.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /blogs/_doc/2</span><br><span class="line">&#123;</span><br><span class="line">    &quot;title&quot;: &quot;Keeping pets healthy&quot;,</span><br><span class="line">    &quot;body&quot;:  &quot;My quick brown fox eats rabbits on a regular basis.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;bool&quot;: &#123;</span><br><span class="line">            &quot;should&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Brown fox&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Brown fox&quot; &#125;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;dis_max&quot;: &#123;</span><br><span class="line">            &quot;queries&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Quick pets&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Quick pets&quot; &#125;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;dis_max&quot;: &#123;</span><br><span class="line">            &quot;queries&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Quick pets&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Quick pets&quot; &#125;&#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;tie_breaker&quot;: 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><ul><li><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html</a></p></li><li><p>Best Fields</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">POST blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;dis_max&quot;: &#123;</span><br><span class="line">            &quot;queries&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Quick pets&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Quick pets&quot; &#125;&#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;tie_breaker&quot;: 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;type&quot;: &quot;best_fields&quot;,</span><br><span class="line">      &quot;query&quot;: &quot;Quick pets&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;title&quot;,&quot;body&quot;],</span><br><span class="line">      &quot;tie_breaker&quot;: 0.2,</span><br><span class="line">      &quot;minimum_should_match&quot;: &quot;20%&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST books/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">        &quot;query&quot;:  &quot;Quick brown fox&quot;,</span><br><span class="line">        &quot;fields&quot;: &quot;*_title&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST books/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">        &quot;query&quot;:  &quot;Quick brown fox&quot;,</span><br><span class="line">        &quot;fields&quot;: [ &quot;*_title&quot;, &quot;chapter_title^2&quot; ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE /titles</span><br><span class="line">PUT /titles</span><br><span class="line">&#123;</span><br><span class="line">    &quot;settings&quot;: &#123; &quot;number_of_shards&quot;: 1 &#125;,</span><br><span class="line">    &quot;mappings&quot;: &#123;</span><br><span class="line">        &quot;my_type&quot;: &#123;</span><br><span class="line">            &quot;properties&quot;: &#123;</span><br><span class="line">                &quot;title&quot;: &#123;</span><br><span class="line">                    &quot;type&quot;:     &quot;string&quot;,</span><br><span class="line">                    &quot;analyzer&quot;: &quot;english&quot;,</span><br><span class="line">                    &quot;fields&quot;: &#123;</span><br><span class="line">                        &quot;std&quot;:   &#123;</span><br><span class="line">                            &quot;type&quot;:     &quot;string&quot;,</span><br><span class="line">                            &quot;analyzer&quot;: &quot;standard&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /titles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;analyzer&quot;: &quot;english&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST titles/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;My dog barks&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;I see a lot of barking dogs on the road &quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET titles/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;barking dogs&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE /titles</span><br><span class="line">PUT /titles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;analyzer&quot;: &quot;english&quot;,</span><br><span class="line">        &quot;fields&quot;: &#123;&quot;std&quot;: &#123;&quot;type&quot;: &quot;text&quot;,&quot;analyzer&quot;: &quot;standard&quot;&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST titles/_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;My dog barks&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;I see a lot of barking dogs on the road &quot; &#125;</span><br><span class="line"></span><br><span class="line">GET /titles/_search</span><br><span class="line">&#123;</span><br><span class="line">   &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">            &quot;query&quot;:  &quot;barking dogs&quot;,</span><br><span class="line">            &quot;type&quot;:   &quot;most_fields&quot;,</span><br><span class="line">            &quot;fields&quot;: [ &quot;title&quot;, &quot;title.std&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /titles/_search</span><br><span class="line">&#123;</span><br><span class="line">   &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">            &quot;query&quot;:  &quot;barking dogs&quot;,</span><br><span class="line">            &quot;type&quot;:   &quot;most_fields&quot;,</span><br><span class="line">            &quot;fields&quot;: [ &quot;title^10&quot;, &quot;title.std&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="multi-language"><a href="#multi-language" class="headerlink" title="multi-language"></a>multi-language</h2><ul><li>Elasticsearch IK分词插件 <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></li><li>Elasticsearch hanlp 分词插件 <a href="https://github.com/KennFalcon/elasticsearch-analysis-hanlp">https://github.com/KennFalcon/elasticsearch-analysis-hanlp</a></li><li>分词算法综述 <a href="https://zhuanlan.zhihu.com/p/50444885">https://zhuanlan.zhihu.com/p/50444885</a></li><li>中科院计算所NLPIR <a href="http://ictclas.nlpir.org/nlpir/">http://ictclas.nlpir.org/nlpir/</a></li><li>ansj分词器 <a href="https://github.com/NLPchina/ansj_seg">https://github.com/NLPchina/ansj_seg</a></li><li>哈工大的LTP <a href="https://github.com/HIT-SCIR/ltp">https://github.com/HIT-SCIR/ltp</a></li><li>清华大学THULAC <a href="https://github.com/thunlp/THULAC">https://github.com/thunlp/THULAC</a></li><li>斯坦福分词器 <a href="https://nlp.stanford.edu/software/segmenter.shtml">https://nlp.stanford.edu/software/segmenter.shtml</a></li><li>Hanlp分词器 <a href="https://github.com/hankcs/HanLP">https://github.com/hankcs/HanLP</a></li><li>结巴分词 <a href="https://github.com/yanyiwu/cppjieba">https://github.com/yanyiwu/cppjieba</a></li><li>KCWS分词器(字嵌入+Bi-LSTM+CRF) <a href="https://github.com/koth/kcws">https://github.com/koth/kcws</a></li><li>ZPar <a href="https://github.com/frcchang/zpar/releases">https://github.com/frcchang/zpar/releases</a></li><li>IKAnalyzer <a href="https://github.com/wks/ik-analyzer">https://github.com/wks/ik-analyzer</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">#stop word</span><br><span class="line"></span><br><span class="line">DELETE my_index</span><br><span class="line">PUT /my_index/_doc/1</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#x27;m happy for this fox&quot; &#125;</span><br><span class="line"></span><br><span class="line">PUT /my_index/_doc/2</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#x27;m not happy about my fox problem&quot; &#125;</span><br><span class="line"></span><br><span class="line">POST my_index/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;not happy fox&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 `english`（英语）分析器，另一次使用 `standard`（标准）分析器:</span><br><span class="line"></span><br><span class="line">DELETE my_index</span><br><span class="line"></span><br><span class="line">PUT /my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;blog&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;title&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">          &quot;analyzer&quot;: &quot;english&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;blog&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;title&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">          &quot;fields&quot;: &#123;</span><br><span class="line">            &quot;english&quot;: &#123;</span><br><span class="line">              &quot;type&quot;:     &quot;string&quot;,</span><br><span class="line">              &quot;analyzer&quot;: &quot;english&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /my_index/blog/1</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#x27;m happy for this fox&quot; &#125;</span><br><span class="line"></span><br><span class="line">PUT /my_index/blog/2</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#x27;m not happy about my fox problem&quot; &#125;</span><br><span class="line"></span><br><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;type&quot;:     &quot;most_fields&quot;,</span><br><span class="line">      &quot;query&quot;:    &quot;not happy foxes&quot;,</span><br><span class="line">      &quot;fields&quot;: [ &quot;title&quot;, &quot;title.english&quot; ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#安装插件</span><br><span class="line">./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip</span><br><span class="line">#安装插件</span><br><span class="line">bin/elasticsearch install https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#ik_max_word</span><br><span class="line">#ik_smart</span><br><span class="line">#hanlp: hanlp默认分词</span><br><span class="line">#hanlp_standard: 标准分词</span><br><span class="line">#hanlp_index: 索引分词</span><br><span class="line">#hanlp_nlp: NLP分词</span><br><span class="line">#hanlp_n_short: N-最短路分词</span><br><span class="line">#hanlp_dijkstra: 最短路分词</span><br><span class="line">#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）</span><br><span class="line">#hanlp_speed: 极速词典分词</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;hanlp_standard&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜&quot;]</span><br><span class="line"></span><br><span class="line">&#125;     </span><br><span class="line"></span><br><span class="line">#Pinyin</span><br><span class="line">PUT /artists/</span><br><span class="line">&#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">        &quot;analysis&quot; : &#123;</span><br><span class="line">            &quot;analyzer&quot; : &#123;</span><br><span class="line">                &quot;user_name_analyzer&quot; : &#123;</span><br><span class="line">                    &quot;tokenizer&quot; : &quot;whitespace&quot;,</span><br><span class="line">                    &quot;filter&quot; : &quot;pinyin_first_letter_and_full_pinyin_filter&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;filter&quot; : &#123;</span><br><span class="line">                &quot;pinyin_first_letter_and_full_pinyin_filter&quot; : &#123;</span><br><span class="line">                    &quot;type&quot; : &quot;pinyin&quot;,</span><br><span class="line">                    &quot;keep_first_letter&quot; : true,</span><br><span class="line">                    &quot;keep_full_pinyin&quot; : false,</span><br><span class="line">                    &quot;keep_none_chinese&quot; : true,</span><br><span class="line">                    &quot;keep_original&quot; : false,</span><br><span class="line">                    &quot;limit_first_letter_length&quot; : 16,</span><br><span class="line">                    &quot;lowercase&quot; : true,</span><br><span class="line">                    &quot;trim_whitespace&quot; : true,</span><br><span class="line">                    &quot;keep_none_chinese_in_first_letter&quot; : true</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /artists/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;text&quot;: [&quot;刘德华 张学友 郭富城 黎明 四大天王&quot;],</span><br><span class="line">  &quot;analyzer&quot;: &quot;user_name_analyzer&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="tmdb-practice"><a href="#tmdb-practice" class="headerlink" title="tmdb practice"></a>tmdb practice</h2><p>Prequest</p><ul><li>Python 2.7.15</li><li>request</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> tmdb-search</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">Run python ./ingest_tmdb_from_file.py</span><br></pre></td></tr></table></figure><p>Demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">POST tmdb/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;_source&quot;: [&quot;title&quot;,&quot;overview&quot;],</span><br><span class="line"> &quot;query&quot;: &#123;</span><br><span class="line">   &quot;match_all&quot;: &#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST tmdb/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_source&quot;: [&quot;title&quot;,&quot;overview&quot;],</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;basketball with cartoon aliens&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;title&quot;,&quot;overview&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;highlight&quot; : &#123;</span><br><span class="line">        &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;overview&quot; : &#123; &quot;pre_tags&quot; : [&quot;\\033[0;32;40m&quot;], &quot;post_tags&quot; : [&quot;\\033[0m&quot;] &#125;,</span><br><span class="line">            &quot;title&quot; : &#123; &quot;pre_tags&quot; : [&quot;\\033[0;32;40m&quot;], &quot;post_tags&quot; : [&quot;\\033[0m&quot;] &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Search-Template-amp-Index-Alias"><a href="#Search-Template-amp-Index-Alias" class="headerlink" title="Search Template &amp; Index Alias"></a>Search Template &amp; Index Alias</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">POST _scripts/tmdb</span><br><span class="line">&#123;</span><br><span class="line">  &quot;script&quot;: &#123;</span><br><span class="line">    &quot;lang&quot;: &quot;mustache&quot;,</span><br><span class="line">    &quot;source&quot;: &#123;</span><br><span class="line">      &quot;_source&quot;: [</span><br><span class="line">        &quot;title&quot;,&quot;overview&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;size&quot;: 20,</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;: &quot;&#123;&#123;q&#125;&#125;&quot;,</span><br><span class="line">          &quot;fields&quot;: [&quot;title&quot;,&quot;overview&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">DELETE _scripts/tmdb</span><br><span class="line"></span><br><span class="line">GET _scripts/tmdb</span><br><span class="line"></span><br><span class="line">POST tmdb/_search/template</span><br><span class="line">&#123;</span><br><span class="line">    &quot;id&quot;:&quot;tmdb&quot;,</span><br><span class="line">    &quot;params&quot;: &#123;</span><br><span class="line">        &quot;q&quot;: &quot;basketball with cartoon aliens&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT movies-2019/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;the matrix&quot;,</span><br><span class="line">  &quot;rating&quot;:5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT movies-2019/_doc/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;Speed&quot;,</span><br><span class="line">  &quot;rating&quot;:3</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _aliases</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;add&quot;: &#123;</span><br><span class="line">        &quot;index&quot;: &quot;movies-2019&quot;,</span><br><span class="line">        &quot;alias&quot;: &quot;movies-latest&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies-latest/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _aliases</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;add&quot;: &#123;</span><br><span class="line">        &quot;index&quot;: &quot;movies-2019&quot;,</span><br><span class="line">        &quot;alias&quot;: &quot;movies-lastest-highrate&quot;,</span><br><span class="line">        &quot;filter&quot;: &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;rating&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: 4</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies-lastest-highrate/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Function-Score-Query"><a href="#Function-Score-Query" class="headerlink" title="Function Score Query"></a>Function Score Query</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html</a></li></ul><p>Demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">DELETE blogs</span><br><span class="line">PUT /blogs/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:   &quot;About popularity&quot;,</span><br><span class="line">  &quot;content&quot;: &quot;In this post we will talk about...&quot;,</span><br><span class="line">  &quot;votes&quot;:   0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /blogs/_doc/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:   &quot;About popularity&quot;,</span><br><span class="line">  &quot;content&quot;: &quot;In this post we will talk about...&quot;,</span><br><span class="line">  &quot;votes&quot;:   100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /blogs/_doc/3</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:   &quot;About popularity&quot;,</span><br><span class="line">  &quot;content&quot;: &quot;In this post we will talk about...&quot;,</span><br><span class="line">  &quot;votes&quot;:   1000000</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;,</span><br><span class="line">        &quot;modifier&quot;: &quot;log1p&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;,</span><br><span class="line">        &quot;modifier&quot;: &quot;log1p&quot; ,</span><br><span class="line">        &quot;factor&quot;: 0.1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;,</span><br><span class="line">        &quot;modifier&quot;: &quot;log1p&quot; ,</span><br><span class="line">        &quot;factor&quot;: 0.1</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;boost_mode&quot;: &quot;sum&quot;,</span><br><span class="line">      &quot;max_boost&quot;: 3</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /blogs/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;random_score&quot;: &#123;</span><br><span class="line">        &quot;seed&quot;: 911119</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Term-amp-Phrase-Suggester"><a href="#Term-amp-Phrase-Suggester" class="headerlink" title="Term &amp; Phrase Suggester"></a>Term &amp; Phrase Suggester</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">DELETE articles</span><br><span class="line">PUT articles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title_completion&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST articles/_bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;lucene is very cool&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch builds on top of lucene&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;elastic is the company behind ELK stack&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elk stack rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123;&#125; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST articles/_search?pretty</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 0,</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;article-suggester&quot;: &#123;</span><br><span class="line">      &quot;prefix&quot;: &quot;elk &quot;,</span><br><span class="line">      &quot;completion&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;title_completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE articles</span><br><span class="line"></span><br><span class="line">POST articles/_bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;lucene is very cool&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;Elasticsearch builds on top of lucene&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;Elasticsearch rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;elastic is the company behind ELK stack&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;Elk stack rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123;&#125; &#125;</span><br><span class="line">&#123;  &quot;body&quot;: &quot;elasticsearch is rock solid&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;Elk stack  rocks rock&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /articles/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 1,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;body&quot;: &quot;lucen rock&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen rock&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;missing&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /articles/_search</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen rock&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;popular&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /articles/_search</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen rock&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;always&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /articles/_search</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen hocks&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;always&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;,</span><br><span class="line">        &quot;prefix_length&quot;:0,</span><br><span class="line">        &quot;sort&quot;: &quot;frequency&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /articles/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;my-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucne and elasticsear rock hello world &quot;,</span><br><span class="line">      &quot;phrase&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;,</span><br><span class="line">        &quot;max_errors&quot;:2,</span><br><span class="line">        &quot;confidence&quot;:0,</span><br><span class="line">        &quot;direct_generator&quot;:[&#123;</span><br><span class="line">          &quot;field&quot;:&quot;body&quot;,</span><br><span class="line">          &quot;suggest_mode&quot;:&quot;always&quot;</span><br><span class="line">        &#125;],</span><br><span class="line">        &quot;highlight&quot;: &#123;</span><br><span class="line">          &quot;pre_tag&quot;: &quot;&lt;em&gt;&quot;,</span><br><span class="line">          &quot;post_tag&quot;: &quot;&lt;/em&gt;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Auto-Complete"><a href="#Auto-Complete" class="headerlink" title="Auto Complete"></a>Auto Complete</h2><p>Pratice in Dev Tools</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">DELETE articles</span><br><span class="line">PUT articles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title_completion&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST articles/_bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;lucene is very cool&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch builds on top of lucene&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;elastic is the company behind ELK stack&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elk stack rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123;&#125; &#125;</span><br><span class="line"></span><br><span class="line">POST articles/_search?pretty</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 0,</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;article-suggester&quot;: &#123;</span><br><span class="line">      &quot;prefix&quot;: &quot;elk &quot;,</span><br><span class="line">      &quot;completion&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;title_completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE comments</span><br><span class="line">PUT comments</span><br><span class="line">PUT comments/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;comment_autocomplete&quot;:&#123;</span><br><span class="line">      &quot;type&quot;: &quot;completion&quot;,</span><br><span class="line">      &quot;contexts&quot;:[&#123;</span><br><span class="line">        &quot;type&quot;:&quot;category&quot;,</span><br><span class="line">        &quot;name&quot;:&quot;comment_category&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST comments/_doc</span><br><span class="line">&#123;</span><br><span class="line">  &quot;comment&quot;:&quot;I love the star war movies&quot;,</span><br><span class="line">  &quot;comment_autocomplete&quot;:&#123;</span><br><span class="line">    &quot;input&quot;:[&quot;star wars&quot;],</span><br><span class="line">    &quot;contexts&quot;:&#123;</span><br><span class="line">      &quot;comment_category&quot;:&quot;movies&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST comments/_doc</span><br><span class="line">&#123;</span><br><span class="line">  &quot;comment&quot;:&quot;Where can I find a Starbucks&quot;,</span><br><span class="line">  &quot;comment_autocomplete&quot;:&#123;</span><br><span class="line">    &quot;input&quot;:[&quot;starbucks&quot;],</span><br><span class="line">    &quot;contexts&quot;:&#123;</span><br><span class="line">      &quot;comment_category&quot;:&quot;coffee&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST comments/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;MY_SUGGESTION&quot;: &#123;</span><br><span class="line">      &quot;prefix&quot;: &quot;sta&quot;,</span><br><span class="line">      &quot;completion&quot;:&#123;</span><br><span class="line">        &quot;field&quot;:&quot;comment_autocomplete&quot;,</span><br><span class="line">        &quot;contexts&quot;:&#123;</span><br><span class="line">          &quot;comment_category&quot;:&quot;coffee&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Cross-Cluster-Search"><a href="#Cross-Cluster-Search" class="headerlink" title="Cross Cluster Search"></a>Cross Cluster Search</h2><ul><li>在Kibana中使用Cross data search <a href="https://kelonsoftware.com/cross-cluster-search-kibana/">https://kelonsoftware.com/cross-cluster-search-kibana/</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"># 启动3个集群 start 3 cluster </span><br><span class="line"></span><br><span class="line">bin/elasticsearch -E node.name=cluster0node -E cluster.name=cluster0 -E path.data=cluster0_data -E discovery.type=single-node -E http.port=9200 -E transport.port=9300</span><br><span class="line">bin/elasticsearch -E node.name=cluster1node -E cluster.name=cluster1 -E path.data=cluster1_data -E discovery.type=single-node -E http.port=9201 -E transport.port=9301</span><br><span class="line">bin/elasticsearch -E node.name=cluster2node -E cluster.name=cluster2 -E path.data=cluster2_data -E discovery.type=single-node -E http.port=9202 -E transport.port=9302</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//在每个集群上设置动态的设置</span><br><span class="line">PUT _cluster/settings</span><br><span class="line">&#123;</span><br><span class="line">  &quot;persistent&quot;: &#123;</span><br><span class="line">    &quot;cluster&quot;: &#123;</span><br><span class="line">      &quot;remote&quot;: &#123;</span><br><span class="line">        &quot;cluster0&quot;: &#123;</span><br><span class="line">          &quot;seeds&quot;: [</span><br><span class="line">            &quot;127.0.0.1:9300&quot;</span><br><span class="line">          ],</span><br><span class="line">          &quot;transport.ping_schedule&quot;: &quot;30s&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;cluster1&quot;: &#123;</span><br><span class="line">          &quot;seeds&quot;: [</span><br><span class="line">            &quot;127.0.0.1:9301&quot;</span><br><span class="line">          ],</span><br><span class="line">          &quot;transport.compress&quot;: true,</span><br><span class="line">          &quot;skip_unavailable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;cluster2&quot;: &#123;</span><br><span class="line">          &quot;seeds&quot;: [</span><br><span class="line">            &quot;127.0.0.1:9302&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#cURL</span><br><span class="line">curl -XPUT &quot;http://localhost:9200/_cluster/settings&quot; -H &#x27;Content-Type: application/json&#x27; -d&#x27;</span><br><span class="line">&#123;&quot;persistent&quot;:&#123;&quot;cluster&quot;:&#123;&quot;remote&quot;:&#123;&quot;cluster0&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9300&quot;],&quot;transport.ping_schedule&quot;:&quot;30s&quot;&#125;,&quot;cluster1&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9301&quot;],&quot;transport.compress&quot;:true,&quot;skip_unavailable&quot;:true&#125;,&quot;cluster2&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9302&quot;]&#125;&#125;&#125;&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line">curl -XPUT &quot;http://localhost:9201/_cluster/settings&quot; -H &#x27;Content-Type: application/json&#x27; -d&#x27;</span><br><span class="line">&#123;&quot;persistent&quot;:&#123;&quot;cluster&quot;:&#123;&quot;remote&quot;:&#123;&quot;cluster0&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9300&quot;],&quot;transport.ping_schedule&quot;:&quot;30s&quot;&#125;,&quot;cluster1&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9301&quot;],&quot;transport.compress&quot;:true,&quot;skip_unavailable&quot;:true&#125;,&quot;cluster2&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9302&quot;]&#125;&#125;&#125;&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line">curl -XPUT &quot;http://localhost:9202/_cluster/settings&quot; -H &#x27;Content-Type: application/json&#x27; -d&#x27;</span><br><span class="line">&#123;&quot;persistent&quot;:&#123;&quot;cluster&quot;:&#123;&quot;remote&quot;:&#123;&quot;cluster0&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9300&quot;],&quot;transport.ping_schedule&quot;:&quot;30s&quot;&#125;,&quot;cluster1&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9301&quot;],&quot;transport.compress&quot;:true,&quot;skip_unavailable&quot;:true&#125;,&quot;cluster2&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9302&quot;]&#125;&#125;&#125;&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建测试数据</span><br><span class="line">curl -XPOST &quot;http://localhost:9200/users/_doc&quot; -H &#x27;Content-Type: application/json&#x27; -d&#x27;</span><br><span class="line">&#123;&quot;name&quot;:&quot;user1&quot;,&quot;age&quot;:10&#125;&#x27;</span><br><span class="line"></span><br><span class="line">curl -XPOST &quot;http://localhost:9201/users/_doc&quot; -H &#x27;Content-Type: application/json&#x27; -d&#x27;</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:20&#125;&#x27;</span><br><span class="line"></span><br><span class="line">curl -XPOST &quot;http://localhost:9202/users/_doc&quot; -H &#x27;Content-Type: application/json&#x27; -d&#x27;</span><br><span class="line">&#123;&quot;name&quot;:&quot;user3&quot;,&quot;age&quot;:30&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查询</span><br><span class="line">GET /users,cluster1:users,cluster2:users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: 20,</span><br><span class="line">        &quot;lte&quot;: 40</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="split-brain"><a href="#split-brain" class="headerlink" title="split-brain"></a>split-brain</h2><ul><li><a href="https://www.elastic.co/cn/blog/a-new-era-for-cluster-coordination-in-elasticsearch">https://www.elastic.co/cn/blog/a-new-era-for-cluster-coordination-in-elasticsearch</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># start 3 nodes in one host</span><br><span class="line"></span><br><span class="line">bin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data</span><br><span class="line">bin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data</span><br><span class="line">bin/elasticsearch -E node.name=node3 -E cluster.name=geektime -E path.data=node3_data</span><br><span class="line"></span><br><span class="line"># avoid split-brain</span><br><span class="line">quorum = master nodes/2+1</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">node type</th><th align="center">config</th><th align="center">default</th></tr></thead><tbody><tr><td align="center">master eligible</td><td align="center">node.master</td><td align="center">true</td></tr><tr><td align="center">data</td><td align="center">node.data</td><td align="center">true</td></tr><tr><td align="center">ingest</td><td align="center">node.ingest</td><td align="center">true</td></tr><tr><td align="center">coordinating only</td><td align="center">NA</td><td align="center">above 3 are false</td></tr><tr><td align="center">machine learning</td><td align="center">node.ml</td><td align="center">true(need x-pack)</td></tr></tbody></table><h2 id="query-fetch"><a href="#query-fetch" class="headerlink" title="query fetch"></a>query fetch</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">DELETE message</span><br><span class="line">PUT message</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 20</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET message</span><br><span class="line"></span><br><span class="line">POST message/_doc?routing=1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;content&quot;:&quot;good&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST message/_doc?routing=2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;content&quot;:&quot;good morning&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST message/_doc?routing=3</span><br><span class="line">&#123;</span><br><span class="line">  &quot;content&quot;:&quot;good morning everyone&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST message/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST message/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;good&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST message/_search?search_type=dfs_query_then_fetch</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;good&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Doc-Values-amp-Fielddata"><a href="#Doc-Values-amp-Fielddata" class="headerlink" title="Doc Values &amp; Fielddata"></a>Doc Values &amp; Fielddata</h2><p>Demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">#单字段排序</span><br><span class="line">POST /kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 5,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;&quot;order_date&quot;: &#123;&quot;order&quot;: &quot;desc&quot;&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#多字段排序</span><br><span class="line">POST /kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 5,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;&quot;order_date&quot;: &#123;&quot;order&quot;: &quot;desc&quot;&#125;&#125;,</span><br><span class="line">    &#123;&quot;_doc&quot;:&#123;&quot;order&quot;: &quot;asc&quot;&#125;&#125;,</span><br><span class="line">    &#123;&quot;_score&quot;:&#123; &quot;order&quot;: &quot;desc&quot;&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET kibana_sample_data_ecommerce/_mapping</span><br><span class="line"></span><br><span class="line">#对 text 字段进行排序。默认会报错，需打开fielddata</span><br><span class="line">POST /kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 5,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;&quot;customer_full_name&quot;: &#123;&quot;order&quot;: &quot;desc&quot;&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#打开 text的 fielddata</span><br><span class="line">PUT kibana_sample_data_ecommerce/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;customer_full_name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;fielddata&quot;: true,</span><br><span class="line">          &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;keyword&quot; : &#123;</span><br><span class="line">              &quot;type&quot; : &quot;keyword&quot;,</span><br><span class="line">              &quot;ignore_above&quot; : 256</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#关闭 keyword的 doc values</span><br><span class="line">PUT test_keyword</span><br><span class="line">PUT test_keyword/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;user_name&quot;:&#123;</span><br><span class="line">      &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">      &quot;doc_values&quot;:false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE test_keyword</span><br><span class="line"></span><br><span class="line">PUT test_text</span><br><span class="line">PUT test_text/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;intro&quot;:&#123;</span><br><span class="line">      &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">      &quot;doc_values&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE test_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE temp_users</span><br><span class="line">PUT temp_users</span><br><span class="line">PUT temp_users/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;name&quot;:&#123;&quot;type&quot;: &quot;text&quot;,&quot;fielddata&quot;: true&#125;,</span><br><span class="line">    &quot;desc&quot;:&#123;&quot;type&quot;: &quot;text&quot;,&quot;fielddata&quot;: true&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Post temp_users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;Jack&quot;,&quot;desc&quot;:&quot;Jack is a good boy!&quot;,&quot;age&quot;:10&#125;</span><br><span class="line"></span><br><span class="line">#打开fielddata 后，查看 docvalue_fields数据</span><br><span class="line">POST  temp_users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docvalue_fields&quot;: [</span><br><span class="line">    &quot;name&quot;,&quot;desc&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看整型字段的docvalues</span><br><span class="line">POST  temp_users/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docvalue_fields&quot;: [</span><br><span class="line">    &quot;age&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="From-Size-Search-after-amp-Scroll-API"><a href="#From-Size-Search-after-amp-Scroll-API" class="headerlink" title="From, Size, Search_after &amp; Scroll API"></a>From, Size, Search_after &amp; Scroll API</h2><ul><li>from: where to begin search</li><li>size: number of docs you need query</li></ul><table><thead><tr><th align="center">type</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">Regular</td><td align="center">real-time query top docs</td></tr><tr><td align="center">Scroll</td><td align="center">Need all docs</td></tr><tr><td align="center">Pagination</td><td align="center">from and size, if need deep page, use Search After</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"># result windows is too large 10000</span><br><span class="line">POST tmdb/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;from&quot;: 10000,</span><br><span class="line">  &quot;size&quot;: 1,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#Scroll API</span><br><span class="line">DELETE users</span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user1&quot;,&quot;age&quot;:10&#125;</span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:11&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:12&#125;</span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:13&#125;</span><br><span class="line"></span><br><span class="line">POST users/_count</span><br><span class="line"></span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 1,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;sort&quot;: [</span><br><span class="line">        &#123;&quot;age&quot;: &quot;desc&quot;&#125; ,</span><br><span class="line">        &#123;&quot;_id&quot;: &quot;asc&quot;&#125;    </span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST users/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 1,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;search_after&quot;:</span><br><span class="line">        [</span><br><span class="line">          10,</span><br><span class="line">          &quot;ZQ0vYGsBrR8X3IP75QqX&quot;],</span><br><span class="line">    &quot;sort&quot;: [</span><br><span class="line">        &#123;&quot;age&quot;: &quot;desc&quot;&#125; ,</span><br><span class="line">        &#123;&quot;_id&quot;: &quot;asc&quot;&#125;    </span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Scroll API</span><br><span class="line">DELETE users</span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user1&quot;,&quot;age&quot;:10&#125;</span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:20&#125;</span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user3&quot;,&quot;age&quot;:30&#125;</span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user4&quot;,&quot;age&quot;:40&#125;</span><br><span class="line"></span><br><span class="line">POST /users/_search?scroll=5m</span><br><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 1,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;match_all&quot; : &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user5&quot;,&quot;age&quot;:50&#125;</span><br><span class="line">POST /_search/scroll</span><br><span class="line">&#123;</span><br><span class="line">    &quot;scroll&quot; : &quot;1m&quot;,</span><br><span class="line">    &quot;scroll_id&quot; : &quot;DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ==&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Concurrent-Control"><a href="#Concurrent-Control" class="headerlink" title="Concurrent Control"></a>Concurrent Control</h2><ul><li>Optimistic lock</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">DELETE products</span><br><span class="line">PUT products</span><br><span class="line"></span><br><span class="line">PUT products/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;iphone&quot;,</span><br><span class="line">  &quot;count&quot;:100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET products/_doc/1</span><br><span class="line"></span><br><span class="line">PUT products/_doc/1?if_seq_no=1&amp;if_primary_term=1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;iphone&quot;,</span><br><span class="line">  &quot;count&quot;:100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT products/_doc/1?version=30000&amp;version_type=external</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;iphone&quot;,</span><br><span class="line">  &quot;count&quot;:100</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Operation Course Record</title>
      <link href="/post/operation-course/"/>
      <url>/post/operation-course/</url>
      
        <content type="html"><![CDATA[<p>This blog is for record what I learn from this <a href="https://kaiwu.lagou.com/course/courseInfo.htm?courseId=42#/detail/pc?id=1546">Operation Course</a></p><span id="more"></span><h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><h2 id="SHORTCUTS"><a href="#SHORTCUTS" class="headerlink" title="SHORTCUTS"></a>SHORTCUTS</h2><p>Ctrl + r：find the histroy<br>Ctrl + l：clear the terminal<br>Ctrl + a \ Ctrl + e：move to head \ end in row<br>Ctrl + w \ Ctrl + k：delete before \ after cursor</p><p>ZZ : VIM save and quit</p><p>Ctrl+C: Interrupt (kill) the current foreground process running in in the terminal. This sends the SIGINT signal to the process, which is technically just a request—most processes will honor it, but some may ignore it.<br>Ctrl+Z: Suspend the current foreground process running in bash. This sends the SIGTSTP signal to the process. To return the process to the foreground later, use the fg process_name command.<br>Ctrl+D: Close the bash shell. This sends an EOF (End-of-file) marker to bash, and bash exits when it receives this marker. This is similar to running the exit command.</p><p>top SHORTCUTS  </p><p>Shift + p：Sort by CPU<br>Shift + m：Sort by Memory</p><h2 id="find-large-file"><a href="#find-large-file" class="headerlink" title="find large file"></a>find large file</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">du -x --max-depth=1 / |sort -k1 -nr</span><br><span class="line">du -x -d 1 -h / |sort -k1 -nr</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">find <span class="built_in">which</span> folder has most inode</span></span><br><span class="line">find -type f | awk -F / -v OFS=/ &#x27;&#123;$NF=&quot;&quot;;dir[$0]++&#125;END&#123;for(i in dir)print dir[i]&quot; &quot;i&#125;&#x27;| sort -k1 -nr | head</span><br><span class="line"></span><br><span class="line">769 ./wrk/obj/openssl-1.1.1b/test/</span><br><span class="line">551 ./.cache/mozilla/firefox/hha91z74.default-release/cache2/entries/</span><br><span class="line">462 ./wrk/obj/openssl-1.1.1b/doc/man3/</span><br><span class="line">229 ./wrk/obj/LuaJIT-2.1.0-beta3/src/</span><br><span class="line">212 ./wrk/obj/openssl-1.1.1b/test/certs/</span><br><span class="line">207 ./wrk/obj/openssl-1.1.1b/apps/</span><br><span class="line">199 ./wrk/obj/openssl-1.1.1b/crypto/asn1/</span><br><span class="line">194 ./.cache/gnome-software/icons/</span><br><span class="line">185 ./wrk/obj/openssl-1.1.1b/crypto/evp/</span><br><span class="line">157 ./wrk/obj/openssl-1.1.1b/test/recipes/</span><br></pre></td></tr></table></figure><h2 id="rename"><a href="#rename" class="headerlink" title="rename"></a>rename</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">find consumer.xml file and replace all aaaaaa to bbbbbb</span></span><br><span class="line">find ./ -type f -name consumer.xml -exec sed -i &quot;s/aaaaaa/bbbbbb/g&quot; &#123;&#125; \;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">find all .txt file and compress <span class="keyword">then</span> copy to /home/.</span></span><br><span class="line">(find . -name &quot;*.txt&quot;|xargs tar -cvf test.tar) &amp;&amp; cp -f test.tar /home/.</span><br></pre></td></tr></table></figure><h2 id="network"><a href="#network" class="headerlink" title="network"></a>network</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">network status</span></span><br><span class="line">netstat -n | awk &#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">get IP</span> </span><br><span class="line">ip a|grep &quot;global&quot;|awk &#x27;&#123;print $2&#125;&#x27;| awk -F/ &#x27;&#123;print $1&#125;&#x27;</span><br></pre></td></tr></table></figure><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><ol><li><a href="https://mp.weixin.qq.com/s/IRQq3h4mur60rjVfcLsBzA">Nginx是什么？能干什么？</a></li></ol><h2 id="cpu-affinity"><a href="#cpu-affinity" class="headerlink" title="cpu affinity"></a>cpu affinity</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_cpu_affinity</span> auto</span><br></pre></td></tr></table></figure><p><a href="http://nginx.org/en/docs/ngx_core_module.html#worker_cpu_affinity">offical document</a></p><h2 id="epoll"><a href="#epoll" class="headerlink" title="epoll"></a>epoll</h2><p>Add in kernel 2.6</p><ol><li>epoll’s event flow model is thread-safe;</li><li>epoll follow the selection model and improve efficiency;</li><li>epoll is event-driven. You can select the relevant state of the entire file to be scanned according to your needs. epoll avoids replacing the scanned file according to the event. You can directly call the callback function, which is more efficient.</li><li>Removed the maximum limit on the number of file sizes that can be monitored by the temporary process inside the select model (1024). If you have used an earlier version of Apache, the selection model it uses will be delayed when the request exceeds 1000. The request is wrong, and the performance will be significantly improved by using Nginx.</li><li>In addition, an optimization place involved in the events {} configuration is worker_connections, which is also set in events. Through the above learning, we know the role of the worker thread, and the connections supported by each worker thread are Limited, it will be set to 1024 by default here, and when we are dealing with high concurrency scenarios, it is often too low to split worker threads to 1024. It is recommended that you increase the worker_connections, you can refer to the actual business needs Nginx processing Maximum to increase this setting.</li></ol><h2 id="sendfile"><a href="#sendfile" class="headerlink" title="sendfile"></a>sendfile</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200216173928.png"><br>refer <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile">docs</a></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /video/ &#123;</span><br><span class="line">    <span class="attribute">sendfile</span>       <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nopush</span>     <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">aio</span>            <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h2><p><a href="http://nginx.org/en/docs/http/ngx_http_gzip_module.html">docs</a></p><ol><li><code>gzip on</code> is responsible for turning on the compression function of the backend;</li><li><code>gzip_buffer 16 8k</code> means to set the memory space of Nginx when processing file compression;</li><li><code>gzip_comp_level 6</code> indicates the compression level of Nginx when processing compression. Generally, the higher the level, the larger the compression ratio. However, it does not mean that the larger the compression ratio, the better. It is still necessary to choose a suitable compression ratio according to the actual situation. The compression ratio is too large. Affects performance. Compression ratio is too small to achieve the desired effect. Generally, it is recommended that you set it to 6 to be more appropriate.</li><li><code>gzip_http_version 1.1</code> means only compress the HTTP 1.1 version of the protocol;</li><li><code>gzip_min_length 256</code> means that compression is performed only when the length is greater than the minimum 256 bytes, and if it is less than this length, no compression is performed;</li><li><code>gzip_proxied any</code> means that Nginx as a reverse proxy sets some gzip compression policies based on the information returned by the backend server;</li><li><code>gzip_vary on</code> indicates whether to send Vary: Accept_Encoding response header field, to realize that the receiver server is gzip compressed;</li><li><code>application / vnd.ms-fontobject image / x-icon</code>; gip compression type;</li><li>g<code>zip_disable &quot;msie6&quot;</code>; Turn off compression for IE6.</li></ol><h2 id="Timing-Variables"><a href="#Timing-Variables" class="headerlink" title="Timing Variables"></a>Timing Variables</h2><ul><li><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html?&_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_request_time">request_time</a> – Full request time, starting when NGINX reads the first byte from the client and ending when NGINX sends the last byte of the response body</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_upstream_connect_time">upstream_connect_time</a> – Time spent establishing a connection with an upstream server</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&_ga=2.57291882.1195201124.1581934594-512055108.1581845805#var_upstream_header_time">upstream_header_time</a> – Time between establishing a connection to an upstream server and receiving the first byte of the response header</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_upstream_response_time">upstream_response_time</a> – Time between establishing a connection to an upstream server and receiving the last byte of the response body</li></ul><h2 id="nginx-cache"><a href="#nginx-cache" class="headerlink" title="nginx cache"></a>nginx cache</h2><ol><li><p>ssl_session_cache</p></li><li><p>open_file_cache</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">index</span> index.htm index.html;</span><br><span class="line">    <span class="attribute">expires</span> max;  </span><br><span class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">1000</span> inactive=<span class="number">20s</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_valid</span> <span class="number">30s</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_min_uses</span> <span class="number">2</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>proxy_cache_path</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_cache_path</span> /path/to/cache levels=<span class="number">1</span>:<span class="number">2</span> keys_zone=my_cache:<span class="number">10m</span> max_size=<span class="number">10g</span> inactive=<span class="number">60m</span> location / &#123;</span><br><span class="line">        <span class="attribute">proxy_cache</span> my_cache;</span><br><span class="line">        …</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="load-balance"><a href="#load-balance" class="headerlink" title="load balance"></a>load balance</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200229125517.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200229125522.png"><br>nginx LB general config like follow</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="section">upstream</span> app_servers &#123;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="section">location</span> / &#123;</span><br><span class="line">                      <span class="attribute">proxy_pass</span> http://app_servers; </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>real ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br></pre></td></tr></table></figure></li><li><p>Host forward</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span> ;</span><br><span class="line"><span class="attribute">proxy</span> set_header Host www.vipumi.com; </span><br></pre></td></tr></table></figure></li><li><p>session miss</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip_hash</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="section">upstream</span> app_servers &#123;</span><br><span class="line">                 ip_hash;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="section">location</span> / &#123;</span><br><span class="line">                  <span class="attribute">proxy_pass</span> http://app_servers; </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL_hash</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="section">upstream</span> app_servers &#123;</span><br><span class="line">            <span class="attribute">hash</span> <span class="variable">$request_uri</span>;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="section">location</span> / &#123;</span><br><span class="line">                  <span class="attribute">proxy_pass</span> http://app_servers;   </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># session copy between upstream servers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># session share: store in zookeeper </span></span><br></pre></td></tr></table></figure></li><li><p>live ping</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use taobao Tengine module</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">check</span> interval=<span class="number">3000</span> rise=<span class="number">2</span> fall=<span class="number">5</span> timeout=<span class="number">1000</span> type=http;  //定义检查间隔、周期、时间</span><br><span class="line"><span class="attribute">check_keepalive_requests</span> <span class="number">100</span>;  //一个连接发送的请求数</span><br><span class="line"><span class="attribute">check_http_send</span> “HEAD / HTTP/<span class="number">1</span>.<span class="number">1</span>\r\nConnection: keep-alive\r\n\r\n”; //定义健康检查方式</span><br><span class="line"><span class="attribute">check_http_expect_alive</span> http_2xx http_3xx;  //判断后端返回状态码</span><br></pre></td></tr></table></figure></li></ol><h1 id="dynamic-upstream"><a href="#dynamic-upstream" class="headerlink" title="dynamic upstream"></a>dynamic upstream</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200301123058.png"></p><h2 id="nginx-config"><a href="#nginx-config" class="headerlink" title="nginx config"></a>nginx config</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">error_log</span>  logs/<span class="literal">error</span>.log  <span class="literal">info</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">&#x27;<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">lua_shared_dict</span> upstreams <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">upstream</span> local &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:81</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:82</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:83</span>;</span><br><span class="line">        <span class="attribute">balancer_by_lua_file</span> <span class="string">&quot;./ngx_lua/upstream.lua&quot;</span>;</span><br><span class="line">        <span class="comment">#check interval=3000 rise=2 fall=5 timeout=1000;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">800</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://local;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> = /ups &#123;</span><br><span class="line">            <span class="attribute">default_type</span>  text/plain;</span><br><span class="line">            <span class="attribute">content_by_lua_file</span> <span class="string">&quot;./ngx_lua/upsops.lua&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> = /ups/check &#123;</span><br><span class="line">            <span class="attribute">default_type</span>  text/plain;</span><br><span class="line">            <span class="attribute">content_by_lua_file</span> <span class="string">&quot;./ngx_lua/srvcheck.lua&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>upstream.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"><span class="keyword">local</span> upstream = <span class="built_in">require</span> <span class="string">&quot;ngx.upstream&quot;</span></span><br><span class="line"><span class="keyword">local</span> get_servers = upstream.get_servers</span><br><span class="line"><span class="keyword">local</span> set_peer_down = upstream.set_peer_down</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> curr_ups = upstream.current_upstream_name()</span><br><span class="line"><span class="keyword">local</span> srvs = get_servers(curr_ups)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 摘除主节点的服务节点，传入的addr对应于主节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_primary_server_down</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_primary_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">false</span>,peer.id,<span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; failed to set peer down: &quot;</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 摘除备份节点的服务节点，传入的addr对应于备份节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_backup_server_down</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_backup_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">true</span>,peer.id,<span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; failed to set peer down: &quot;</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 恢复主节点的服务节点，传入的addr对应于主节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_primary_server_up</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_primary_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">false</span>,peer.id,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; failed to set peer down: &quot;</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 恢复备份节点的服务节点，传入的addr对应于备份节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_backup_server_up</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_backup_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">true</span>,peer.id,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; failed to set peer down: &quot;</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i,peer <span class="keyword">in</span> <span class="built_in">ipairs</span>(srvs) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> isdown = ups:get(peer[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">    <span class="comment">-- 摘除服务节点</span></span><br><span class="line">    <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> peer.backup == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- peer.addr: socket 地址，可能是Lua字符串或lua字符串的数组.</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">&quot;table&quot;</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_primary_server_down(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down success.&quot;</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down failed.&quot;</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_primary_server_down(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down success.&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down failed.&quot;</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> peer.backup == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">&quot;table&quot;</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_backup_server_down(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down success.&quot;</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down failed.&quot;</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_backup_server_down(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down success.&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set down failed.&quot;</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- 恢复服务节点</span></span><br><span class="line">    <span class="keyword">elseif</span> isdown == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> peer.backup == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">&quot;table&quot;</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_primary_server_up(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ups:delete(peer[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up success.&quot;</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up failed.&quot;</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_primary_server_up(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ups:delete(peer[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up success.&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up failed.&quot;</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> peer.backup == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">&quot;table&quot;</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_backup_server_up(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ups:delete(peer[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up success.&quot;</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up failed.&quot;</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_backup_server_up(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ups:delete(peer[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up success.&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">&quot; &quot;</span>..peer[<span class="string">&quot;name&quot;</span>]..<span class="string">&quot; set up failed.&quot;</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>upsops.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> cjson = <span class="built_in">require</span> <span class="string">&quot;cjson&quot;</span>;</span><br><span class="line"><span class="keyword">local</span> upstream = <span class="built_in">require</span> <span class="string">&quot;ngx.upstream&quot;</span></span><br><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> get_upstreams = upstream.get_upstreams</span><br><span class="line"><span class="keyword">local</span> all_ups = upstream.get_upstreams()</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> op = ngx.req.get_uri_args()[<span class="string">&quot;op&quot;</span>];</span><br><span class="line"><span class="keyword">local</span> server = ngx.req.get_uri_args()[<span class="string">&quot;server&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> op == <span class="literal">nil</span> <span class="keyword">or</span> server == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    ngx.say(<span class="string">&quot;usage: /ups?op=add&amp;server=192.168.56.101:8080&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">down_server</span><span class="params">(upstream_name,server)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">local</span> perrs = upstream.get_servers(upstream_name)</span><br><span class="line">    <span class="keyword">local</span> avail = #perrs</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #perrs <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = perrs[i]</span><br><span class="line">        <span class="keyword">local</span> isdown = ups:get(peer[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">        <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            avail = avail - <span class="number">1</span></span><br><span class="line">            ngx.<span class="built_in">log</span>(ngx.ERR,<span class="string">&quot;## peer.down: true  ups: &quot;</span>..upstream_name..<span class="string">&quot; peer.name: &quot;</span>..peer.name..<span class="string">&quot; server: &quot;</span>..server..<span class="string">&quot; avail: &quot;</span>..avail)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> peer.name == server <span class="keyword">then</span></span><br><span class="line">            ret = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret <span class="keyword">then</span></span><br><span class="line">        avail = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> avail</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> op == <span class="string">&quot;add&quot;</span> <span class="keyword">then</span></span><br><span class="line">    ups:set(server,<span class="number">0</span>)</span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">&quot;A00001&quot;</span>, msg=<span class="string">&quot;add a server success.&quot;</span>,data=&#123;server&#125;&#125;))</span><br><span class="line"><span class="keyword">elseif</span> op == <span class="string">&quot;del&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> isdown = ups:get(server)</span><br><span class="line">    <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        ngx.say(cjson.encode(&#123;code=<span class="string">&quot;A00001&quot;</span>, msg=<span class="string">&quot;del a server success.&quot;</span>,data=&#123;server&#125;&#125;))</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> _,u <span class="keyword">in</span> <span class="built_in">ipairs</span>(all_ups) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> srvs = upstream.get_servers(u)</span><br><span class="line">        <span class="keyword">for</span> i,peer <span class="keyword">in</span> <span class="built_in">ipairs</span>(srvs) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">local</span> down_svc = down_server(u,server)</span><br><span class="line">            ngx.<span class="built_in">log</span>(ngx.ERR,<span class="string">&quot;## down_svc: &quot;</span>..down_svc..<span class="string">&quot; upstream: &quot;</span>..u..<span class="string">&quot; server: &quot;</span>..server)</span><br><span class="line">            <span class="keyword">if</span> down_svc &lt; <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,u..<span class="string">&quot; You cat not set peer down: &quot;</span>..peer[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">                ngx.say(cjson.encode(&#123;code=<span class="string">&quot;E00001&quot;</span>, msg=<span class="string">&quot;You cat not set peer down: &quot;</span>..peer[<span class="string">&quot;name&quot;</span>],data=&#123;peer[<span class="string">&quot;name&quot;</span>]&#125;&#125;))</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    ups:set(server,<span class="number">1</span>)</span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">&quot;A00001&quot;</span>, msg=<span class="string">&quot;del a server success.&quot;</span>,data=&#123;server&#125;&#125;))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">&quot;E00001&quot;</span>, msg=<span class="string">&quot;do none.&quot;</span>,data=&#123;&#125;&#125;))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>srvcheck.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> cjson = <span class="built_in">require</span> <span class="string">&quot;cjson&quot;</span>;</span><br><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"><span class="keyword">local</span> servers = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">pairs</span>(ups:get_keys(<span class="number">0</span>)) <span class="keyword">do</span></span><br><span class="line">   servers[v] = ups:get(v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ngx.say(cjson.encode(&#123;code=<span class="string">&quot;A00001&quot;</span>, msg=<span class="string">&quot;OK&quot;</span>, data=servers&#125;))</span><br></pre></td></tr></table></figure></li></ol><h1 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h1><ul><li>21 curl exercises <a href="https://jvns.ca/blog/2019/08/27/curl-exercises/">https://jvns.ca/blog/2019/08/27/curl-exercises/</a></li><li>answer <a href="http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/">http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/</a></li><li><a href="https://wsgzao.github.io/post/curl/">https://wsgzao.github.io/post/curl/</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法 </span></span><br><span class="line">curl [option] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的使用，获取服务器内容，默认将输出打印到标准输出中(STDOUT) 中。</span></span><br><span class="line">curl http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 - v 参数可以看到详细解析过程，通常用于 debug</span></span><br><span class="line">curl -v http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl 发送 Get 请求</span></span><br><span class="line">curl URL</span><br><span class="line">curl URL -O 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 发送 post 请求</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/json&#x27;</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/json&#x27;</span> -d <span class="string">&#x27;json 内容&#x27;</span> URL</span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/xml&#x27;</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/xml&#x27;</span> -d <span class="string">&#x27;xml 内容&#x27;</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 cookies</span></span><br><span class="line">curl URL --cookie <span class="string">&quot;cookie 内容&quot;</span></span><br><span class="line">curl URL --cookie-jar cookie 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置代理字符串</span></span><br><span class="line">curl URL --user-agent <span class="string">&quot;代理内容&quot;</span></span><br><span class="line">curl URL -A <span class="string">&quot;代理内容&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 限制带宽</span></span><br><span class="line">curl URL --limit-rate 速度</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 认证</span></span><br><span class="line">curl -u user:<span class="built_in">pwd</span> URL</span><br><span class="line">curl -u user URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 只打印 http 头部信息</span></span><br><span class="line">curl -I URL</span><br><span class="line">curl -<span class="built_in">head</span> URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 末尾参数</span></span><br><span class="line">--progress  显示进度条</span><br><span class="line">--silent    不现实进度条</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要修改 / etc/hosts，curl 直接解析 ip 请求域名</span></span><br><span class="line"><span class="comment"># 将 http://example.com 或 https://example.com 请求指定域名解析的 IP 为 127.0.0.1</span></span><br><span class="line">curl --resolve example.com:80:127.0.0.1 http://example.com/</span><br><span class="line">curl --resolve example.com:443:127.0.0.1 https://example.com/</span><br><span class="line"></span><br><span class="line">-X/--request [GET|POST|PUT|DELETE|…]  指定请求的 HTTP 方法</span><br><span class="line">-H/--header                           指定请求的 HTTP Header</span><br><span class="line">-d/--data                             指定请求的 HTTP 消息体（Body）</span><br><span class="line">-v/--verbose                          输出详细的返回信息</span><br><span class="line">-u/--user                             指定账号、密码</span><br><span class="line">-b/--cookie                           读取 cookie  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 典型的测试命令为：</span></span><br><span class="line">curl -v -X POST -H <span class="string">&quot;Content-Type: application/json&quot;</span> http://127.0.0.1:8080/user -d<span class="string">&#x27;&#123;&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;admin1234&quot;&#125;&#x27;</span>...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 get 请求</span></span><br><span class="line">curl http://www.linuxidc.com/login.cgi?user=test001&amp;password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 post 请求</span></span><br><span class="line">curl -d <span class="string">&quot;user=nickwolfe&amp;password=12345&quot;</span> http://www.linuxidc.com/login.cgi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/json&#x27;</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/json&#x27;</span> -d <span class="string">&#x27;json 内容&#x27;</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/xml&#x27;</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/xml&#x27;</span> -d <span class="string">&#x27;xml 内容&#x27;</span> URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时需要使用 - X 选项，除了使用 POST 外，还可以使用 http 规范定义的其它请求谓词，如 PUT,DELETE 等</span></span><br><span class="line">curl -XPOST url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时，通常需要指定请求体数据。可以使用 - d 或 --data 来指定发送的请求体。</span></span><br><span class="line">curl -XPOST -d <span class="string">&quot;name=leo&amp;age=12&quot;</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要对请求数据进行 urlencode, 可以使用下面的方式：</span></span><br><span class="line">curl -XPOST --data-urlencode <span class="string">&quot;name=leo&amp;age=12&quot;</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此外发送 post 请求还可以有如下几种子选项：</span></span><br><span class="line">–data-raw</span><br><span class="line">–data-ascii</span><br><span class="line">–data-binary</span><br><span class="line"></span><br><span class="line"><span class="comment"># To retrieve the job config.xml</span></span><br><span class="line">curl -X GET <span class="string">&#x27;&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml&#x27;</span> -u username:API_TOKEN -o &lt;jobname&gt;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use this config to create a new job</span></span><br><span class="line">curl -s -XPOST <span class="string">&#x27;&lt;jenkinshost&gt;/createItem?name=&lt;jobname&gt;&#x27;</span> -u username:API_TOKEN --data-binary @&lt;jobname&gt;.xml -H <span class="string">&quot;Content-Type:text/xml&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get all jenkins jobs</span></span><br><span class="line">curl -X GET <span class="string">&#x27;&lt;jenkinshost&gt;/api/json?pretty=true&#x27;</span> -u username:API_TOKEN -o jobs.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># get jenkins view</span></span><br><span class="line">curl -X GET <span class="string">&#x27;&lt;jenkinshost&gt;/view/&lt;viewname&gt;/api/json&#x27;</span> -u username:API_TOKEN -o view.json</span><br></pre></td></tr></table></figure></li></ul><h1 id="unixbench-amp-fio"><a href="#unixbench-amp-fio" class="headerlink" title="unixbench &amp; fio"></a>unixbench &amp; fio</h1><p>Install unixbench can refer this <a href="https://www.ostechnix.com/unixbench-benchmark-suite-unix-like-systems/">https://www.ostechnix.com/unixbench-benchmark-suite-unix-like-systems/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for ubuntu</span></span><br><span class="line"></span><br><span class="line">sudo apt-get install libx11-dev libgl1-mesa-dev libxext-dev perl perl-modules make git</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/kdlucas/byte-unixbench.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> byte-unixbench/UnixBench/</span><br><span class="line"></span><br><span class="line">./Run</span><br><span class="line"></span><br><span class="line"><span class="comment"># output </span></span><br><span class="line">root@ubuntu:/tmp/byte-unixbench/UnixBench<span class="comment"># ./Run </span></span><br><span class="line">make all</span><br><span class="line">make[1]: Entering directory <span class="string">&#x27;/tmp/byte-unixbench/UnixBench&#x27;</span></span><br><span class="line">make distr</span><br><span class="line">make[2]: Entering directory <span class="string">&#x27;/tmp/byte-unixbench/UnixBench&#x27;</span></span><br><span class="line">Checking distribution of files</span><br><span class="line">./pgms  exists</span><br><span class="line">./src  exists</span><br><span class="line">./testdir  exists</span><br><span class="line">./tmp  exists</span><br><span class="line">./results  exists</span><br><span class="line">make[2]: Leaving directory <span class="string">&#x27;/tmp/byte-unixbench/UnixBench&#x27;</span></span><br><span class="line">make programs</span><br><span class="line">make[2]: Entering directory <span class="string">&#x27;/tmp/byte-unixbench/UnixBench&#x27;</span></span><br><span class="line">make[2]: Nothing to be <span class="keyword">done</span> <span class="keyword">for</span> <span class="string">&#x27;programs&#x27;</span>.</span><br><span class="line">make[2]: Leaving directory <span class="string">&#x27;/tmp/byte-unixbench/UnixBench&#x27;</span></span><br><span class="line">make[1]: Leaving directory <span class="string">&#x27;/tmp/byte-unixbench/UnixBench&#x27;</span></span><br><span class="line">sh: 1: 3dinfo: not found</span><br><span class="line"></span><br><span class="line">   <span class="comment">#    #  #    #  #  #    #          #####   ######  #    #   ####   #    #</span></span><br><span class="line">   <span class="comment">#    #  ##   #  #   #  #           #    #  #       ##   #  #    #  #    #</span></span><br><span class="line">   <span class="comment">#    #  # #  #  #    ##            #####   #####   # #  #  #       ######</span></span><br><span class="line">   <span class="comment">#    #  #  # #  #    ##            #    #  #       #  # #  #       #    #</span></span><br><span class="line">   <span class="comment">#    #  #   ##  #   #  #           #    #  #       #   ##  #    #  #    #</span></span><br><span class="line">    <span class="comment">####   #    #  #  #    #          #####   ######  #    #   ####   #    #</span></span><br><span class="line"></span><br><span class="line">   Version 5.1.3                      Based on the Byte Magazine Unix Benchmark</span><br><span class="line"></span><br><span class="line">   Multi-CPU version                  Version 5 revisions by Ian Smith,</span><br><span class="line">                                      Sunnyvale, CA, USA</span><br><span class="line">   January 13, 2011                   johantheghost at yahoo period com</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">   Use directories <span class="keyword">for</span>:</span><br><span class="line">      * File I/O tests (named fs***) = /tmp/byte-unixbench/UnixBench/tmp</span><br><span class="line">      * Results                      = /tmp/byte-unixbench/UnixBench/results</span><br><span class="line">------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>Install fio <a href="https://github.com/axboe/fio">https://github.com/axboe/fio</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install fio</span><br><span class="line"></span><br><span class="line"><span class="comment"># run write test</span></span><br><span class="line">feiyang@ubuntu:~$  fio --name=randwrite --ioengine=libaio --iodepth=1 --rw=randwrite --bs=4k --direct=0 --size=512M --numjobs=2 --runtime=240 --group_reporting</span><br><span class="line"></span><br><span class="line">randwrite: (g=0): rw=randwrite, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=1</span><br><span class="line">...</span><br><span class="line">fio-3.1</span><br><span class="line">Starting 2 processes</span><br><span class="line">randwrite: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randwrite: Laying out IO file (1 file / 512MiB)</span><br><span class="line">Jobs: 2 (f=2)</span><br><span class="line">randwrite: (groupid=0, <span class="built_in">jobs</span>=2): err= 0: pid=1910: Sat Mar 14 12:48:59 2020</span><br><span class="line">  write: IOPS=204k, BW=799MiB/s (838MB/s)(1024MiB/1282msec)</span><br><span class="line">    slat (nsec): min=1929, max=909527, avg=7784.12, stdev=14736.01</span><br><span class="line">    clat (nsec): min=348, max=1920.9k, avg=613.38, stdev=5441.37</span><br><span class="line">     lat (usec): min=2, max=1925, avg= 8.50, stdev=15.99</span><br><span class="line">    clat percentiles (nsec):</span><br><span class="line">     |  1.00th=[   378],  5.00th=[   386], 10.00th=[   390], 20.00th=[   394],</span><br><span class="line">     | 30.00th=[   398], 40.00th=[   402], 50.00th=[   410], 60.00th=[   418],</span><br><span class="line">     | 70.00th=[   430], 80.00th=[   852], 90.00th=[   964], 95.00th=[   988],</span><br><span class="line">     | 99.00th=[  1336], 99.50th=[  1864], 99.90th=[ 22144], 99.95th=[ 31872],</span><br><span class="line">     | 99.99th=[209920]</span><br><span class="line">   bw (  KiB/s): min=432536, max=539248, per=57.01%, avg=466269.00, stdev=49219.22, samples=4</span><br><span class="line">   iops        : min=108134, max=134812, avg=116567.00, stdev=12304.94, samples=4</span><br><span class="line">  lat (nsec)   : 500=78.66%, 750=1.10%, 1000=16.26%</span><br><span class="line">  lat (usec)   : 2=3.64%, 4=0.11%, 10=0.10%, 20=0.03%, 50=0.08%</span><br><span class="line">  lat (usec)   : 100=0.01%, 250=0.01%, 500=0.01%, 750=0.01%</span><br><span class="line">  lat (msec)   : 2=0.01%</span><br><span class="line">  cpu          : usr=1.11%, sys=98.68%, ctx=24, majf=0, minf=18</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued rwt: total=0,262144,0, short=0,0,0, dropped=0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line"></span><br><span class="line">Run status group 0 (all <span class="built_in">jobs</span>):</span><br><span class="line">  WRITE: bw=799MiB/s (838MB/s), 799MiB/s-799MiB/s (838MB/s-838MB/s), io=1024MiB (1074MB), run=1282-1282msec</span><br><span class="line"></span><br><span class="line">Disk stats (<span class="built_in">read</span>/write):</span><br><span class="line">  sda: ios=0/3020, merge=0/2481, ticks=0/450, in_queue=4, util=30.57%</span><br><span class="line"></span><br><span class="line"><span class="comment"># run read test</span></span><br><span class="line">feiyang@ubuntu:~$  fio --name=randread --ioengine=libaio --iodepth=16 --rw=randread --bs=4k --direct=0 --size=512M --numjobs=4 --runtime=240 --group_reporting</span><br><span class="line">randread: (g=0): rw=randread, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=16</span><br><span class="line">...</span><br><span class="line">fio-3.1</span><br><span class="line">Starting 4 processes</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">Jobs: 4 (f=4): [r(4)][100.0%][r=81.3MiB/s,w=0KiB/s][r=20.8k,w=0 IOPS][eta 00m:00s]</span><br><span class="line">randread: (groupid=0, <span class="built_in">jobs</span>=4): err= 0: pid=1919: Sat Mar 14 12:51:02 2020</span><br><span class="line">   <span class="built_in">read</span>: IOPS=20.4k, BW=79.7MiB/s (83.6MB/s)(2048MiB/25686msec)</span><br><span class="line">    slat (usec): min=65, max=33169, avg=192.80, stdev=110.46</span><br><span class="line">    clat (usec): min=2, max=48551, avg=2939.25, stdev=573.24</span><br><span class="line">     lat (usec): min=92, max=49600, avg=3132.50, stdev=601.03</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[ 2606],  5.00th=[ 2671], 10.00th=[ 2704], 20.00th=[ 2737],</span><br><span class="line">     | 30.00th=[ 2769], 40.00th=[ 2835], 50.00th=[ 2868], 60.00th=[ 2933],</span><br><span class="line">     | 70.00th=[ 2999], 80.00th=[ 3097], 90.00th=[ 3228], 95.00th=[ 3359],</span><br><span class="line">     | 99.00th=[ 3621], 99.50th=[ 3752], 99.90th=[ 5342], 99.95th=[ 9503],</span><br><span class="line">     | 99.99th=[36963]</span><br><span class="line">   bw (  KiB/s): min=17683, max=22104, per=25.00%, avg=20407.93, stdev=962.56, samples=204</span><br><span class="line">   iops        : min= 4420, max= 5526, avg=5101.91, stdev=240.65, samples=204</span><br><span class="line">  lat (usec)   : 4=0.01%, 100=0.01%, 250=0.01%, 500=0.01%, 750=0.01%</span><br><span class="line">  lat (usec)   : 1000=0.01%</span><br><span class="line">  lat (msec)   : 2=0.03%, 4=99.74%, 10=0.18%, 20=0.03%, 50=0.02%</span><br><span class="line">  cpu          : usr=0.04%, sys=63.18%, ctx=452451, majf=0, minf=92</span><br><span class="line">  IO depths    : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=100.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.1%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued rwt: total=524288,0,0, short=0,0,0, dropped=0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=16</span><br><span class="line"></span><br><span class="line">Run status group 0 (all <span class="built_in">jobs</span>):</span><br><span class="line">   READ: bw=79.7MiB/s (83.6MB/s), 79.7MiB/s-79.7MiB/s (83.6MB/s-83.6MB/s), io=2048MiB (2147MB), run=25686-25686msec</span><br><span class="line"></span><br><span class="line">Disk stats (<span class="built_in">read</span>/write):</span><br><span class="line">  sda: ios=523624/5, merge=0/5, ticks=84769/1, in_queue=88, util=99.53%</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 Reviews</title>
      <link href="/post/reviews-2019/"/>
      <url>/post/reviews-2019/</url>
      
        <content type="html"><![CDATA[<p>The pasted 2019 is so fast, this blog is to record my progress and regret of 2019.</p><span id="more"></span><ul><li>2019 I migrate from seagroup to shopee due to organize migration, I can learn more complex and advanced architecture.</li><li>Read 4 books, http, linux security, promethues, golang.</li><li>I begin to learn algorithm and golang.</li><li>I have more experience in ELK, Zabbix, Promethues and Network</li><li>I begin to learn front-end react to develop shopee CDN platform.</li></ul><p>I also make some difference in my work, Ocha project migrate to new cluster, add more monitors for shopee order team. But there are also some regret.</p><ul><li>Less chance to gym and exercise, so weight increase.</li><li>Never go out for travel in 2019.</li><li>Oral English still so bad, need more practice.</li><li>No some special area. I plan to deep into ELK</li></ul><p>What I will do in 2020 ?</p><ul><li>More exercise, keep weight around 70 kg</li><li>Learn elk and pass <a href="https://www.elastic.co/training/certification">Elastic Certified Engineer</a></li><li>Read book 《Advanced Programming in the UNIX Environment》Third Edition</li><li>Continue to learn algorithm one question one week.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux performance optimization</title>
      <link href="/post/linux/"/>
      <url>/post/linux/</url>
      
        <content type="html"><![CDATA[<p>This blog record some useful tools for linux.</p><span id="more"></span><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/5_90fSpp-JeD-ffZixqc9g">一文读懂Linux进程、进程组、会话、僵尸</a></li><li><a href="https://mp.weixin.qq.com/s/QBF2ozxqy03Cprh_ugi3NA">Linux中父进程为何要苦苦地知道子进程的死亡原因？</a></li><li><a href="https://mp.weixin.qq.com/s/2Sx52ggm_D-oFVAhmNTbHw">浅谈 Linux 高负载的系统化分析</a></li><li><a href="https://mp.weixin.qq.com/s/TQZ3anPiStzgI1B--uTGlQ">CPU 使用率低高负载的原因</a></li><li><a href="https://mp.weixin.qq.com/s/Bv1j41dZJBXy-yfVwvtJPw">Linux系统文件系统及文件基础篇</a></li><li><a href="https://mp.weixin.qq.com/s/Ilc2s4ReBiMVWQDi8aH4Tw">如何在Linux中使用awk工具详解</a></li><li><a href="https://mp.weixin.qq.com/s/XWy_pgxOG0tspvHBDpYafg">通过10个例子掌握Linux下lsof命令</a> </li><li><a href="https://mp.weixin.qq.com/s/oGc79uYz05wDfRSivMpJUA">学习操作系统</a></li></ol><p>Linux performance tools<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225190537.png"></p><h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>What is the Linux system load ? Can refer this <a href="https://mp.weixin.qq.com/s/AhZw_k5U_Pf2k9AOvruFcQ">article</a> or <a href="http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html">this</a><br>Linux load averages are “system load averages” that show the running thread (task) demand on the system as an average number of running plus waiting threads. R + D state: Running + Uninterruptible Sleep</p><h2 id="stress-sysstat"><a href="#stress-sysstat" class="headerlink" title="stress sysstat"></a>stress sysstat</h2><p>We can do some test by command <code>stress</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apt install stress sysstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># stress i cpu</span></span><br><span class="line">stress --cpu 1 --<span class="built_in">timeout</span> 600</span><br><span class="line"></span><br><span class="line"><span class="comment"># check uptime load</span></span><br><span class="line">watch -d <span class="built_in">uptime</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check ALL cpu status</span></span><br><span class="line">mpstat -P ALL 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># check every process or thread cpu usage </span></span><br><span class="line">pidstat -u 5 1</span><br></pre></td></tr></table></figure><p>A thread is the basic unit of scheduling, and the process is the basic unit of resource owners</p><ul><li>Thread</li></ul><ol><li>smallest sequence of programming instructions that can be managed independently by a scheduler</li><li>Has its own register e.g. PC (program counter), SP (stack pointer)</li></ol><ul><li>Process</li></ul><ol><li>instance of a computer porgram that is being executed</li><li>A process can have one or multiple thread</li><li>Most programs are single threaded</li></ol><ul><li>Parallel computing</li></ul><ol><li>Run program currently on one or more CPUs</li><li>Multi-threading (shared-memory)</li><li>Multi-processing (independent-memory)</li></ol><h2 id="context-switch"><a href="#context-switch" class="headerlink" title="context switch"></a>context switch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interval 5s output 1 row data</span></span><br><span class="line">$ vmstat 5</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy  <span class="built_in">id</span>  wa st</span><br><span class="line"> 0  0     0 7005360  91564 818900    0    0     0     0   25   33  0  0  100  0  0</span><br><span class="line"></span><br><span class="line"><span class="comment"># cs（context switch）</span></span><br><span class="line"><span class="comment"># in（interrupt）</span></span><br><span class="line"><span class="comment"># r（Running or Runnable）</span></span><br><span class="line"><span class="comment"># b（Blocked） </span></span><br></pre></td></tr></table></figure><p><code>vmstat</code> only provide overall context switch of system, <code>pidstat -w</code> shows process context switch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interval 5s output 1 row data</span></span><br><span class="line">$ pidstat -w 5</span><br><span class="line">Linux 4.15.0 (ubuntu)  09/23/18  _x86_64_  (2 CPU)</span><br><span class="line"> </span><br><span class="line">08:18:26      UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">08:18:31        0         1      0.20      0.00  systemd</span><br><span class="line">08:18:31        0         8      5.40      0.00  rcu_sched</span><br><span class="line"></span><br><span class="line"><span class="comment"># cswch: voluntary context switches</span></span><br><span class="line"><span class="comment"># nvcswch: non voluntary context switches</span></span><br></pre></td></tr></table></figure><p>we use <code>sysbench</code> to simulate a system multi-threaded scheduling switch.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">sysbench --threads=10 --max-time=300 threads run</span><br><span class="line"></span><br><span class="line"><span class="comment"># check all context switch</span></span><br><span class="line">vmstat 1</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs     us sy <span class="built_in">id</span> wa st</span><br><span class="line"> 6  0      0 6487428 118240 1292772  0    0     0     0 9019  1398830 16 84  0  0  0</span><br><span class="line"> 8  0      0 6487428 118240 1292772  0    0     0     0 10191 1392312 16 84  0  0  0</span><br><span class="line"></span><br><span class="line"><span class="comment"># check which process cause high cs 1398830</span></span><br><span class="line"><span class="comment"># -w  Report  task switching activity  </span></span><br><span class="line"><span class="comment"># -u  Report CPU utilization.</span></span><br><span class="line">pidstat -w -u 1</span><br><span class="line">08:06:33      UID       PID    %usr %system  %guest   %<span class="built_in">wait</span>    %CPU   CPU  Command</span><br><span class="line">08:06:34        0     10488   30.00  100.00    0.00    0.00  100.00     0  sysbench</span><br><span class="line">08:06:34        0     26326    0.00    1.00    0.00    0.00    1.00     0  kworker/u4:2</span><br><span class="line"> </span><br><span class="line">08:06:33      UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">08:06:34        0         8     11.00      0.00  rcu_sched</span><br><span class="line">08:06:34        0        16      1.00      0.00  ksoftirqd/1</span><br><span class="line">08:06:34        0       471      1.00      0.00  hv_balloon</span><br><span class="line">08:06:34        0      1230      1.00      0.00  iscsid</span><br><span class="line">08:06:34        0      4089      1.00      0.00  kworker/1:5</span><br><span class="line">08:06:34        0      4333      1.00      0.00  kworker/0:3</span><br><span class="line">08:06:34        0     10499      1.00    224.00  pidstat</span><br><span class="line">08:06:34        0     26326    236.00      0.00  kworker/u4:2</span><br><span class="line">08:06:34     1000     26784    223.00      0.00  sshd</span><br><span class="line"></span><br><span class="line"><span class="comment"># -t display statistics for  threads  associated  with  selected tasks.</span></span><br><span class="line">pidstat -wt 1</span><br><span class="line"></span><br><span class="line">08:14:05      UID      TGID       TID   cswch/s nvcswch/s  Command</span><br><span class="line">...</span><br><span class="line">08:14:05        0     10551         -      6.00      0.00  sysbench</span><br><span class="line">08:14:05        0         -     10551      6.00      0.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10552  18911.00 103740.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10553  18915.00 100955.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10554  18827.00 103954.00  |__sysbench</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check /proc/interrupts</span></span><br><span class="line"></span><br><span class="line">watch -d <span class="built_in">cat</span> /proc/interrupts</span><br><span class="line"></span><br><span class="line">          CPU0       CPU1</span><br><span class="line">...</span><br><span class="line">RES:    2450431    5279697   Rescheduling interrupts</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="cpu-utilization"><a href="#cpu-utilization" class="headerlink" title="cpu utilization"></a>cpu utilization</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/stat | grep ^cpu</span><br><span class="line">cpu  280580 7407 286084 172900810 83602 0 583 0 0 0</span><br><span class="line">cpu0 144745 4181 176701 86423902 52076 0 301 0 0 0</span><br><span class="line">cpu1 135834 3226 109383 86476907 31525 0 282 0 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf is a good tools</span></span><br><span class="line">perf top</span><br><span class="line"></span><br><span class="line">perf record <span class="comment"># Ctrl+C stop</span></span><br><span class="line"></span><br><span class="line">perf report <span class="comment"># show record</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Best practice how to perf container process</span></span><br><span class="line"><span class="comment"># perf record in host then perf report in container</span></span><br><span class="line"><span class="comment"># install perf in host </span></span><br><span class="line">apt-get install -y linux-tools-common linux-tools-generic linux-tools-$(<span class="built_in">uname</span> -r)）</span><br><span class="line"></span><br><span class="line">perf record -g -p &lt; pid&gt;</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">cp</span> perf.data <span class="built_in">test</span>:/tmp </span><br><span class="line">docker <span class="built_in">exec</span> -i -t <span class="built_in">test</span> bash</span><br><span class="line"><span class="built_in">cd</span> /tmp/ </span><br><span class="line">apt-get update &amp;&amp; apt-get install -y linux-tools linux-perf procps</span><br><span class="line">perf_4.9 report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pstress display a tree of processes</span></span><br><span class="line">pstree | grep stress</span><br></pre></td></tr></table></figure><h2 id="many-Z-zombie-state"><a href="#many-Z-zombie-state" class="headerlink" title="many Z (zombie) state"></a>many Z (zombie) state</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line"></span><br><span class="line">top - 05:56:23 up 17 days, 16:45,  2 <span class="built_in">users</span>,  load average: 2.00, 1.68, 1.39</span><br><span class="line">Tasks: 247 total,   1 running,  79 sleeping,   0 stopped, 115 zombie</span><br><span class="line">%Cpu0  :  0.0 us,  0.7 sy,  0.0 ni, 38.9 <span class="built_in">id</span>, 60.5 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.7 sy,  0.0 ni,  4.7 <span class="built_in">id</span>, 94.6 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 4340 root      20   0   44676   4048   3432 R   0.3  0.0   0:00.05 top</span><br><span class="line"> 4345 root      20   0   37280  33624    860 D   0.3  0.0   0:00.01 app</span><br><span class="line"> 4344 root      20   0   37280  33624    860 D   0.3  0.4   0:00.01 app</span><br><span class="line">    1 root      20   0  160072   9416   6752 S   0.0  0.1   0:38.59 systemd</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># dstat check cpu and IO</span></span><br><span class="line">dstat 1 10</span><br><span class="line"></span><br><span class="line">You did not select any stats, using -cdngy by default.</span><br><span class="line">--total-cpu-usage-- -dsk/total- -net/total- ---paging-- ---system--</span><br><span class="line">usr sys idl wai stl| <span class="built_in">read</span>  writ| recv  send|  <span class="keyword">in</span>   out | int   csw</span><br><span class="line">  0   0  96   4   0|1219k  408k|   0     0 |   0     0 |  42   885</span><br><span class="line">  0   0   2  98   0|  34M    0 | 198B  790B|   0     0 |  42   138</span><br><span class="line">  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  42   135</span><br><span class="line">  0   0  84  16   0|5633k    0 |  66B  342B|   0     0 |  52   177</span><br><span class="line">  0   3  39  58   0|  22M    0 |  66B  342B|   0     0 |  43   144</span><br><span class="line">  0   0   0 100   0|  34M    0 | 200B  450B|   0     0 |  46   147</span><br><span class="line">  0   0   2  98   0|  34M    0 |  66B  342B|   0     0 |  45   134</span><br><span class="line">  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  39   131</span><br><span class="line">  0   0  83  17   0|5633k    0 |  66B  342B|   0     0 |  46   168</span><br><span class="line">  0   3  39  59   0|  22M    0 |  66B  342B|   0     0 |  37   134</span><br><span class="line"></span><br><span class="line"><span class="comment"># find the D pid</span></span><br><span class="line">top</span><br><span class="line">...</span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 4340 root      20   0   44676   4048   3432 R   0.3  0.0   0:00.05 top</span><br><span class="line"> 4345 root      20   0   37280  33624    860 D   0.3  0.0   0:00.01 app</span><br><span class="line"> 4344 root      20   0   37280  33624    860 D   0.3  0.4   0:00.01 app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># for example pid = 4344</span></span><br><span class="line">pidstat -d -p 4344 1 3</span><br><span class="line">06:38:50      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:38:51        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line">06:38:52        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line">06:38:53        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line"></span><br><span class="line"><span class="comment"># check all process, find 6082</span></span><br><span class="line">pidstat -d 1 20</span><br><span class="line">...</span><br><span class="line">06:48:46      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:47        0      4615      0.00      0.00      0.00       1  kworker/u4:1</span><br><span class="line">06:48:47        0      6080  32768.00      0.00      0.00     170  app</span><br><span class="line">06:48:47        0      6081  32768.00      0.00      0.00     184  app</span><br><span class="line"> </span><br><span class="line">06:48:47      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:48        0      6080      0.00      0.00      0.00     110  app</span><br><span class="line"> </span><br><span class="line">06:48:48      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:49        0      6081      0.00      0.00      0.00     191  app</span><br><span class="line"> </span><br><span class="line">06:48:49      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line"> </span><br><span class="line">06:48:50      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:51        0      6082  32768.00      0.00      0.00       0  app</span><br><span class="line">06:48:51        0      6083  32768.00      0.00      0.00       0  app</span><br><span class="line"> </span><br><span class="line">06:48:51      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:52        0      6082  32768.00      0.00      0.00     184  app</span><br><span class="line">06:48:52        0      6083  32768.00      0.00      0.00     175  app</span><br><span class="line"> </span><br><span class="line">06:48:52      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:53        0      6083      0.00      0.00      0.00     105  app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># use strace</span></span><br><span class="line">strace -p 6082</span><br><span class="line">strace: attach: ptrace(PTRACE_SEIZE, 6082): Operation not permitted</span><br><span class="line"></span><br><span class="line">ps aux | grep 6082</span><br><span class="line">root      6082  0.0  0.0      0     0 pts/0    Z+   13:43   0:00 [app] &lt;defunct&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># find blkdev_direct_IO </span></span><br><span class="line">perf record -g</span><br><span class="line">perf report</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225210140.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find father of 3084</span></span><br><span class="line">pstree -aps 3084</span><br><span class="line">systemd,1</span><br><span class="line">  └─dockerd,15006 -H fd://</span><br><span class="line">      └─docker-containe,15024 --config /var/run/docker/containerd/containerd.toml</span><br><span class="line">          └─docker-containe,3991 -namespace moby -workdir...</span><br><span class="line">              └─app,4009</span><br><span class="line">                  └─(app,3084)</span><br></pre></td></tr></table></figure><h2 id="soft-interrupt"><a href="#soft-interrupt" class="headerlink" title="soft interrupt"></a>soft interrupt</h2><p>Linux divides the interrupt handling process into two phases, the upper half and the lower half: The first part is used to quickly handle interrupts. It runs in interrupt disable mode and mainly deals with hardware-related or time-sensitive tasks. The second part is used to delay processing of the unfinished work in the upper half, usually running as a kernel thread.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /proc/softirqs provides the operation of soft interrupts;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /proc/interrupts provides the operation of hard interrupts.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/softirqs</span><br><span class="line">                    CPU0       CPU1</span><br><span class="line">          HI:          0          0</span><br><span class="line">       TIMER:     811613    1972736</span><br><span class="line">      NET_TX:         49          7</span><br><span class="line">      NET_RX:    1136736    1506885</span><br><span class="line">       BLOCK:          0          0</span><br><span class="line">    IRQ_POLL:          0          0</span><br><span class="line">     TASKLET:     304787       3691</span><br><span class="line">       SCHED:     689718    1897539</span><br><span class="line">     HRTIMER:          0          0</span><br><span class="line">         RCU:    1330771    1354737</span><br><span class="line"></span><br><span class="line">ps aux | grep softirq</span><br><span class="line">root   7  0.0  0.0     0    0 ?    S    Oct10   0:01 [ksoftirqd/0]</span><br><span class="line">root  16  0.0  0.0     0    0 ?    S    Oct10   0:01 [ksoftirqd/1]</span><br><span class="line"></span><br><span class="line"><span class="comment"># sar - Collect, report, or save system activity information.</span></span><br><span class="line"></span><br><span class="line">sar -n DEV 1</span><br><span class="line">15:03:46        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">15:03:47         eth0  12607.00   6304.00    664.86    358.11      0.00      0.00      0.00      0.01</span><br><span class="line">15:03:47      docker0   6302.00  12604.00    270.79    664.66      0.00      0.00      0.00      0.00</span><br><span class="line">15:03:47           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">15:03:47    veth9f6bbcd 6302.00  12604.00    356.95    664.66      0.00      0.00      0.00      0.05</span><br><span class="line"></span><br><span class="line"><span class="comment"># check TCP package SYN ddos attack</span></span><br><span class="line">tcpdump -i eth0 -n tcp port 80</span><br><span class="line">15:11:32.678966 IP 192.168.0.2.18238 &gt; 192.168.0.30.80: Flags [S], <span class="built_in">seq</span> 458303614, win 512, length 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215653.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215708.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215717.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215723.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215732.png"></p><h1 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165532.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165536.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165539.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165542.png"></p><h2 id="buffer-amp-cache"><a href="#buffer-amp-cache" class="headerlink" title="buffer &amp; cache"></a>buffer &amp; cache</h2><p>Buffers are temporary storage of raw disk blocks, that is, used to cache data on the disk, usually not particularly large (about 20MB). In this way, the kernel can centralize scattered writes and optimize disk writes in a unified manner. For example, multiple small writes can be combined into a single large write.  </p><p>Cached is a page cache that reads files from disk, that is, it is used to cache data read from files. This way, the next time you access these file data, you can quickly get it directly from memory without having to access the slow disk again.  </p><p>SReclaimable is part of Slab. Slab consists of two parts, the recyclable part is recorded with SReclaimable; the non-recyclable part is recorded with SUnreclaim.  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Before using cachestat and cachetop, we must first install the bcc package</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://repo.iovisor.org/apt/xenial xenial main&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/iovisor.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y bcc-tools libbcc-examples linux-headers-$(<span class="built_in">uname</span> -r)</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/share/bcc/tools</span><br><span class="line"></span><br><span class="line"><span class="comment">#cachestat provides read and write hits for the entire system cache.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1s interval 3 row data</span></span><br><span class="line">cachestat 1 3</span><br><span class="line">   TOTAL   MISSES     HITS  DIRTIES   BUFFERS_MB  CACHED_MB</span><br><span class="line">    2        0        2        1           17        279</span><br><span class="line">    2        0        2        1           17        279</span><br><span class="line">    2        0        2        1           17        279 </span><br><span class="line"></span><br><span class="line"><span class="comment">#cachetop provides cache hits for each process.</span></span><br><span class="line"></span><br><span class="line">cachetop</span><br><span class="line">11:58:50 Buffers MB: 258 / Cached MB: 347 / Sort: HITS / Order: ascending</span><br><span class="line">PID      UID      CMD              HITS     MISSES   DIRTIES  READ_HIT%  WRITE_HIT%</span><br><span class="line">13029 root     python                 1        0        0     100.0%       0.0%</span><br></pre></td></tr></table></figure><p>Check the specify file cache, we can use <a href="https://github.com/tobert/pcstat">pcstat</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPATH=~/go</span><br><span class="line"><span class="built_in">export</span> PATH=~/go/bin:<span class="variable">$PATH</span></span><br><span class="line">go get golang.org/x/sys/unix</span><br><span class="line">go get github.com/tobert/pcstat/pcstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># first try</span></span><br><span class="line">pcstat /bin/ls</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line">| Name    | Size (bytes)   | Pages      | Cached    | Percent |</span><br><span class="line">|---------+----------------+------------+-----------+---------|</span><br><span class="line">| /bin/ls | 133792         | 33         | 0         | 000.000 |</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># second try</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">pcstat /bin/ls</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line">| Name    | Size (bytes)   | Pages      | Cached    | Percent |</span><br><span class="line">|---------+----------------+------------+-----------+---------|</span><br><span class="line">| /bin/ls | 133792         | 33         | 33        | 100.000 |</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br></pre></td></tr></table></figure><h2 id="memory-leak"><a href="#memory-leak" class="headerlink" title="memory leak"></a>memory leak</h2><ol><li><p>Check the whole memory by <code>vmstat</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vmstat 3</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy <span class="built_in">id</span> wa st</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy <span class="built_in">id</span> wa st</span><br><span class="line">0  0    0 6601824  97620 1098784    0    0     0     0   62  322  0  0 100  0  0</span><br><span class="line">0  0    0 6601700  97620 1098788    0    0     0     0   57  251  0  0 100  0  0</span><br><span class="line">0  0    0 6601320  97620 1098788    0    0     0     3   52  306  0  0 100  0  0</span><br><span class="line">0  0    0 6601452  97628 1098788    0    0     0    27   63  326  0  0 100  0  0</span><br><span class="line">2  0    0 6601328  97628 1098788    0    0     0    44   52  299  0  0 100  0  0</span><br><span class="line">0  0    0 6601080  97628 1098792    0    0     0     0   56  285  0  0 100  0  0 </span><br></pre></td></tr></table></figure><p>The free column of memory is constantly changing and is in a downward trend; the buffer and cache remain basically unchanged.</p></li><li><p><code>memleak</code> is a tool in the bcc package</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/bcc/tools/memleak -a -p $(pidof app)</span><br><span class="line">WARNING: Couldn<span class="string">&#x27;t find .text section in /app</span></span><br><span class="line"><span class="string">WARNING: BCC can&#x27;</span>t handle sym look ups <span class="keyword">for</span> /app</span><br><span class="line">    addr = 7f8f704732b0 size = 8192</span><br><span class="line">    addr = 7f8f704772d0 size = 8192</span><br><span class="line">    addr = 7f8f704712a0 size = 8192</span><br><span class="line">    addr = 7f8f704752c0 size = 8192</span><br><span class="line">    32768 bytes <span class="keyword">in</span> 4 allocations from stack</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        start_thread+0xdb [libpthread-2.27.so] </span><br><span class="line"><span class="comment"># [unknown] is app is in docker</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy exec file from docker, then to check</span></span><br><span class="line">docker <span class="built_in">cp</span> app:/app /app</span><br><span class="line">/usr/share/bcc/tools/memleak -p $(pidof app) -a</span><br><span class="line">Attaching to pid 12512, Ctrl+C to quit.</span><br><span class="line">[03:00:41] Top 10 stacks with outstanding allocations:</span><br><span class="line">    addr = 7f8f70863220 size = 8192</span><br><span class="line">    addr = 7f8f70861210 size = 8192</span><br><span class="line">    addr = 7f8f7085b1e0 size = 8192</span><br><span class="line">    addr = 7f8f7085f200 size = 8192</span><br><span class="line">    addr = 7f8f7085d1f0 size = 8192</span><br><span class="line">    40960 bytes <span class="keyword">in</span> 5 allocations from stack</span><br><span class="line">        fibonacci+0x1f [app]</span><br><span class="line">        child+0x4f [app]</span><br><span class="line">        start_thread+0xdb [libpthread-2.27.so] </span><br></pre></td></tr></table></figure></li></ol><h2 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h2><p>Data that has been modified by the application and has not yet been written to the disk (that is, dirty pages) must be written to the disk before memory can be released.These dirty pages can generally be written to disk in two ways.</p><ol><li>You can use the system call fsync in your application to synchronize dirty pages to disk;</li><li>It can also be left to the system, and the kernel thread pdflush is responsible for refreshing these dirty pages.<br>Swap writes these infrequently accessed memory to disk, then releases this memory for use by other more needed processes. When the memory is accessed again, it is sufficient to re-read it from disk.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227180106.png"><br>In the NUMA architecture, multiple processors are divided into different nodes, and each node has its own local memory space.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227180111.png"></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">numactl --hardware</span><br><span class="line">available: 2 nodes (0-1)</span><br><span class="line">node 0 cpus: 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30</span><br><span class="line">node 0 size: 32674 MB</span><br><span class="line">node 0 free: 418 MB</span><br><span class="line">node 1 cpus: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31</span><br><span class="line">node 1 size: 32768 MB</span><br><span class="line">node 1 free: 212 MB</span><br><span class="line">node distances:</span><br><span class="line">node   0   1 </span><br><span class="line">  0:  10  21 </span><br><span class="line">  1:  21  10 </span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/zoneinfo</span><br><span class="line">...</span><br><span class="line">Node 0, zone   Normal</span><br><span class="line"> pages free     227894</span><br><span class="line">       min      14896</span><br><span class="line">       low      18620</span><br><span class="line">       high     22344</span><br><span class="line">...</span><br><span class="line">     nr_free_pages 227894</span><br><span class="line">     nr_zone_inactive_anon 11082</span><br><span class="line">     nr_zone_active_anon 14024</span><br><span class="line">     nr_zone_inactive_file 539024</span><br><span class="line">     nr_zone_active_file 923986</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -r memory，-S  Swap </span></span><br><span class="line">$ sar -r -S 1</span><br><span class="line">04:39:56    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:39:57      6249676   6839824   1919632     23.50    740512     67316   1691736     10.22    815156    841868         4</span><br><span class="line"> </span><br><span class="line">04:39:56    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:39:57      8388604         0      0.00         0      0.00</span><br><span class="line"> </span><br><span class="line">04:39:57    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:39:58      6184472   6807064   1984836     24.30    772768     67380   1691736     10.22    847932    874224        20</span><br><span class="line"> </span><br><span class="line">04:39:57    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:39:58      8388604         0      0.00         0      0.00</span><br><span class="line"> </span><br><span class="line">…</span><br><span class="line"> </span><br><span class="line">04:44:06    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:44:07       152780   6525716   8016528     98.13   6530440     51316   1691736     10.22    867124   6869332         0</span><br><span class="line"> </span><br><span class="line">04:44:06    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:44:07      8384508      4096      0.05        52      1.27</span><br><span class="line"></span><br><span class="line"><span class="comment"># check cachetop 50 hit rate</span></span><br><span class="line"></span><br><span class="line">cachetop 5</span><br><span class="line">12:28:28 Buffers MB: 6349 / Cached MB: 87 / Sort: HITS / Order: ascending</span><br><span class="line">PID      UID      CMD              HITS     MISSES   DIRTIES  READ_HIT%  WRITE_HIT%</span><br><span class="line">18280   root     python              22        0        0     100.0%       0.0%</span><br><span class="line">18279   root     <span class="built_in">dd</span>              41088    41022        0      50.0%      50.0%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pages_free fluctuation</span></span><br><span class="line">watch -d grep -A 15 <span class="string">&#x27;Normal&#x27;</span> /proc/zoneinfo</span><br><span class="line">Node 0, zone   Normal</span><br><span class="line">  pages free     21328</span><br><span class="line">        min      14896</span><br><span class="line">        low      18620</span><br><span class="line">        high     22344</span><br><span class="line">        spanned  1835008</span><br><span class="line">        present  1835008</span><br><span class="line">        managed  1796710</span><br><span class="line">        protection: (0, 0, 0, 0, 0)</span><br><span class="line">      nr_free_pages 21328</span><br><span class="line">      nr_zone_inactive_anon 79776</span><br><span class="line">      nr_zone_active_anon 206854</span><br><span class="line">      nr_zone_inactive_file 918561</span><br><span class="line">      nr_zone_active_file 496695</span><br><span class="line">      nr_zone_unevictable 2251</span><br><span class="line">      nr_zone_write_pending 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sort by VmSwap</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /proc/*/status ; <span class="keyword">do</span> awk <span class="string">&#x27;/VmSwap|Name|^Pid/&#123;printf $2 &quot; &quot; $3&#125;END&#123; print &quot;&quot;&#125;&#x27;</span> <span class="variable">$file</span>; <span class="keyword">done</span> | <span class="built_in">sort</span> -k 3 -n -r | <span class="built_in">head</span></span><br><span class="line">dockerd 2226 10728 kB</span><br><span class="line">docker-containe 2251 8516 kB</span><br><span class="line">snapd 936 4020 kB</span><br><span class="line">networkd-dispat 911 836 kB</span><br><span class="line">polkitd 1004 44 kB</span><br></pre></td></tr></table></figure><h2 id="summary-1"><a href="#summary-1" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232819.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232823.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232828.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232831.png"></p><p>What’s the difference between system and disk ?<br>A disk is a storage device (to be exact, a block device) that can be divided into different disk partitions. On a disk or disk partition, you can also create a file system and mount it in a directory on the system. In this way, the system can read and write files through this mount directory.</p><p>In other words, a disk is a block device that stores data and is the carrier of a file system. Therefore, the file system still needs to ensure the persistent storage of data through disk.</p><p>You will see this sentence in many places, everything in Linux is a file. In other words, you can access disks and files through the same file interface (such as open, read, write, close, etc.).</p><p>What we usually mean by “documents” is actually ordinary documents.</p><p>The disk or partition refers to the block device file.</p><h1 id="I-O"><a href="#I-O" class="headerlink" title="I-O"></a>I-O</h1><p>The Linux file system allocates two data structures for each file, an <code>index node</code> and a <code>directory entry</code>. They are mainly used to record the meta information and directory structure of files.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228204621.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228204848.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slabtop - display kernel slab cache information in real time</span></span><br><span class="line"></span><br><span class="line">slabtop</span><br><span class="line"></span><br><span class="line">Active / Total Objects (% used)    : 503302 / 506242 (99.4%)</span><br><span class="line"> Active / Total Slabs (% used)      : 10730 / 10730 (100.0%)</span><br><span class="line"> Active / Total Caches (% used)     : 100 / 143 (69.9%)</span><br><span class="line"> Active / Total Size (% used)       : 153659.58K / 155417.98K (98.9%)</span><br><span class="line"> Minimum / Average / Maximum Object : 0.01K / 0.31K / 8.00K</span><br><span class="line"></span><br><span class="line">  OBJS ACTIVE  USE OBJ SIZE  SLABS OBJ/SLAB CACHE SIZE NAME                   </span><br><span class="line">103782 103782 100%    0.19K   2471       42     19768K dentry</span><br><span class="line"> 73749  73749 100%    0.10K   1891       39      7564K buffer_head</span><br><span class="line"> 45900  45900 100%    0.13K    765       60      6120K kernfs_node_cache</span><br><span class="line"> 39985  39985 100%    0.58K    727       55     23264K inode_cache</span><br><span class="line"> 34830  34830 100%    1.05K   1161       30     37152K ext4_inode_cache</span><br><span class="line"> 18462  18462 100%    0.04K    181      102       724K ext4_extent_status</span><br><span class="line"> 17784  17784 100%    0.20K    456       39      3648K vm_area_struct</span><br><span class="line"> 15456  15456 100%    0.69K    336       46     10752K squashfs_inode_cache</span><br><span class="line"> 14336  14144   0%    0.50K    224       64      7168K kmalloc-512</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228233800.png"></p><h2 id="check-io"><a href="#check-io" class="headerlink" title="check io"></a>check io</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iostat -d -x 1 </span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">loop1            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sdb              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228234202.png"></p><ul><li>% util is the disk I &#x2F; O usage </li><li>r&#x2F;s + w&#x2F;s is IOPS</li><li>rkB&#x2F;s + wkB&#x2F;s is the throughput</li><li>r_await + w_await is the response time</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check process</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line">13:39:51      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">13:39:52      102       916      0.00      4.00      0.00       0  rsyslogd</span><br><span class="line"></span><br><span class="line">iotop</span><br><span class="line">Total DISK READ :       0.00 B/s | Total DISK WRITE :       7.85 K/s </span><br><span class="line">Actual DISK READ:       0.00 B/s | Actual DISK WRITE:       0.00 B/s </span><br><span class="line">  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    COMMAND </span><br><span class="line">15055 be/3 root        0.00 B/s    7.85 K/s  0.00 %  0.00 % systemd-journald </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="write-issue"><a href="#write-issue" class="headerlink" title="write issue"></a>write issue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"> top </span><br><span class="line">top - 14:43:43 up 1 day,  1:39,  2 <span class="built_in">users</span>,  load average: 2.48, 1.09, 0.63 </span><br><span class="line">Tasks: 130 total,   2 running,  74 sleeping,   0 stopped,   0 zombie </span><br><span class="line">%Cpu0  :  0.7 us,  6.0 sy,  0.0 ni,  0.7 <span class="built_in">id</span>, 92.7 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">%Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 92.3 <span class="built_in">id</span>,  7.3 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">KiB Mem :  8169308 total,   747684 free,   741336 used,  6680288 buff/cache </span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7113124 avail Mem </span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND </span><br><span class="line">18940 root      20   0  656108 355740   5236 R   6.3  4.4   0:12.56 python </span><br><span class="line">1312 root      20   0  236532  24116   9648 S   0.3  0.3   9:29.80 python3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 92.7 io_wait </span></span><br><span class="line"><span class="comment"># memroy most is used for buff/cache </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check which device</span></span><br><span class="line">iostat -x -d 1 </span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sdb              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00   64.00      0.00  32768.00     0.00     0.00   0.00   0.00    0.00 7270.44 1102.18     0.00   512.00  15.50  99.20</span><br><span class="line"></span><br><span class="line"><span class="comment"># check which process</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line"> </span><br><span class="line">15:08:35      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">15:08:36        0     18940      0.00  45816.00      0.00      96  python </span><br><span class="line"></span><br><span class="line">15:08:36      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">15:08:37        0       354      0.00      0.00      0.00     350  jbd2/sda1-8 </span><br><span class="line">15:08:37        0     18940      0.00  46000.00      0.00      96  python </span><br><span class="line">15:08:37        0     20065      0.00      0.00      0.00    1503  kworker/u4:2 </span><br><span class="line"></span><br><span class="line"><span class="comment"># check pid 18940</span></span><br><span class="line">strace -p 18940 </span><br><span class="line">strace: Process 18940 attached </span><br><span class="line">...</span><br><span class="line">mmap(NULL, 314576896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0f7aee9000 </span><br><span class="line">mmap(NULL, 314576896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0f682e8000 </span><br><span class="line">write(3, <span class="string">&quot;2018-12-05 15:23:01,709 - __main&quot;</span>..., 314572844 </span><br><span class="line">) = 314572844 </span><br><span class="line">munmap(0x7f0f682e8000, 314576896)       = 0 </span><br><span class="line">write(3, <span class="string">&quot;\n&quot;</span>, 1)                       = 1 </span><br><span class="line">munmap(0x7f0f7aee9000, 314576896)       = 0 </span><br><span class="line">close(3)                                = 0 </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">&quot;/tmp/logtest.txt.1&quot;</span>, &#123;st_mode=S_IFREG|0644, st_size=943718535, ...&#125;) = 0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check pid 18940 open files</span></span><br><span class="line">lsof -p 18940 </span><br><span class="line">COMMAND   PID USER   FD   TYPE DEVICE  SIZE/OFF    NODE NAME </span><br><span class="line">python  18940 root  cwd    DIR   0,50      4096 1549389 / </span><br><span class="line">python  18940 root  rtd    DIR   0,50      4096 1549389 / </span><br><span class="line">… </span><br><span class="line">python  18940 root    2u   CHR  136,0       0t0       3 /dev/pts/0 </span><br><span class="line">python  18940 root    3w   REG    8,1 117944320     303 /tmp/logtest.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># root cause is python wirte 300MB/s to /tmp/logtest.txt </span></span><br></pre></td></tr></table></figure><h2 id="io-wait-issue"><a href="#io-wait-issue" class="headerlink" title="io_wait issue"></a>io_wait issue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">top </span><br><span class="line">top - 14:27:02 up 10:30,  1 user,  load average: 1.82, 1.26, 0.76 </span><br><span class="line">Tasks: 129 total,   1 running,  74 sleeping,   0 stopped,   0 zombie </span><br><span class="line">%Cpu0  :  3.5 us,  2.1 sy,  0.0 ni,  0.0 <span class="built_in">id</span>, 94.4 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">%Cpu1  :  2.4 us,  0.7 sy,  0.0 ni, 70.4 <span class="built_in">id</span>, 26.5 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">KiB Mem :  8169300 total,  3323248 free,   436748 used,  4409304 buff/cache </span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7412556 avail Mem </span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND </span><br><span class="line">12280 root      20   0  103304  28824   7276 S  14.0  0.4   0:08.77 python </span><br><span class="line">   16 root      20   0       0      0      0 S   0.3  0.0   0:09.22 ksoftirqd/1 </span><br><span class="line">1549 root      20   0  236712  24480   9864 S   0.3  0.3   3:31.38 python3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># iowait is high, memory is ok.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># util = 98%</span></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00   71.00      0.00  32912.00     0.00     0.00   0.00   0.00    0.00 18118.31 241.89     0.00   463.55  13.86  98.40 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check which porcess</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line">14:39:14      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">14:39:15        0     12280      0.00 335716.00      0.00       0  python </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strace -p 12280 </span><br><span class="line">strace: Process 12280 attached </span><br><span class="line">select(0, NULL, NULL, NULL, &#123;tv_sec=0, tv_usec=567708&#125;) = 0 (Timeout) </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">&quot;/usr/local/lib/python3.7/importlib/_bootstrap.py&quot;</span>, &#123;st_mode=S_IFREG|0644, st_size=39278, ...&#125;) = 0 </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">&quot;/usr/local/lib/python3.7/importlib/_bootstrap.py&quot;</span>, &#123;st_mode=S_IFREG|0644, st_size=39278, ...&#125;) = 0 </span><br><span class="line"></span><br><span class="line"><span class="comment"># filter result</span></span><br><span class="line"> strace -p 12280 2&gt;&amp;1 | grep write </span><br><span class="line"></span><br><span class="line"><span class="comment"># introduce new tool bcc</span></span><br><span class="line"><span class="comment"># install bcc</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://repo.iovisor.org/apt/<span class="subst">$(lsb_release -cs)</span> <span class="subst">$(lsb_release -cs)</span> main&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/iovisor.list </span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install bcc-tools libbcc-examples linux-headers-$(<span class="built_in">uname</span> -r)</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/share/bcc/tools</span><br><span class="line">./filetop -C </span><br><span class="line"> </span><br><span class="line">TID    COMM             READS  WRITES R_Kb    W_Kb    T FILE </span><br><span class="line">514    python           0      1      0       2832    R 669.txt </span><br><span class="line">514    python           0      1      0       2490    R 667.txt </span><br><span class="line">514    python           0      1      0       2685    R 671.txt </span><br><span class="line">514    python           0      1      0       2392    R 670.txt </span><br><span class="line">514    python           0      1      0       2050    R 672.txt </span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">TID    COMM             READS  WRITES R_Kb    W_Kb    T FILE </span><br><span class="line">514    python           2      0      5957    0       R 651.txt </span><br><span class="line">514    python           2      0      5371    0       R 112.txt </span><br><span class="line">514    python           2      0      4785    0       R 861.txt </span><br><span class="line">514    python           2      0      4736    0       R 213.txt </span><br><span class="line">514    python           2      0      4443    0       R 45.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># -T thread check thread 514</span></span><br><span class="line">ps -efT | grep 514</span><br><span class="line">root     12280  514 14626 33 14:47 pts/0    00:00:05 /usr/local/bin/python /app.py </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># new tool opensnoop</span></span><br><span class="line">opensnoop </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/650.txt </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/651.txt </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/652.txt </span><br></pre></td></tr></table></figure><h2 id="sql-slow"><a href="#sql-slow" class="headerlink" title="sql slow"></a>sql slow</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use top to check overview</span></span><br><span class="line">top</span><br><span class="line">top - 12:02:15 up 6 days,  8:05,  1 user,  load average: 0.66, 0.72, 0.59</span><br><span class="line">Tasks: 137 total,   1 running,  81 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  0.7 us,  1.3 sy,  0.0 ni, 35.9 <span class="built_in">id</span>, 62.1 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.3 us,  0.7 sy,  0.0 ni, 84.7 <span class="built_in">id</span>, 14.3 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  8169300 total,  7238472 free,   546132 used,   384696 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7316952 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">27458 999       20   0  833852  57968  13176 S   1.7  0.7   0:12.40 mysqld</span><br><span class="line">27617 root      20   0   24348   9216   4692 S   1.0  0.1   0:04.40 python</span><br><span class="line"> 1549 root      20   0  236716  24568   9864 S   0.3  0.3  51:46.57 python3</span><br><span class="line">22421 root      20   0       0      0      0 I   0.3  0.0   0:01.16 kworker/u</span><br><span class="line"></span><br><span class="line"><span class="comment"># io wait is high, so we check io</span></span><br><span class="line"></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">...</span><br><span class="line">sda            273.00    0.00  32568.00      0.00     0.00     0.00   0.00   0.00    7.90    0.00   1.16   119.30     0.00   3.56  97.20</span><br><span class="line"></span><br><span class="line"><span class="comment"># rkB/s is 32 MB, util is 97.2%</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find the pid of high IO</span></span><br><span class="line">pidstat -d 1</span><br><span class="line">12:04:11      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">12:04:12      999     27458  32640.00      0.00      0.00       0  mysqld</span><br><span class="line">12:04:12        0     27617      4.00      4.00      0.00       3  python</span><br><span class="line">12:04:12        0     27864      0.00      4.00      0.00       0  systemd-journal</span><br><span class="line"></span><br><span class="line"><span class="comment"># next use strace+ lsof </span></span><br><span class="line">strace -f -p 27458</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">&quot;934EiwT363aak7VtqF1mHGa4LL4Dhbks&quot;</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">&quot;hSs7KBDepBqA6m4ce6i6iUfFTeG9Ot9z&quot;</span>..., 20480) = 20480</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">&quot;NRhRjCSsLLBjTfdqiBRLvN9K6FRfqqLm&quot;</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">&quot;AKgsik4BilLb7y6OkwQUjjqGeCTQTaRl&quot;</span>..., 24576) = 24576</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">&quot;hFMHx7FzUSqfFI22fQxWCpSnDmRjamaW&quot;</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">&quot;ajUzLmKqivcDJSkiw7QWf2ETLgvQIpfC&quot;</span>..., 20480) = 20480</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thread 28014 is reading a large amount of data, and the descriptor read is 38. </span></span><br><span class="line"><span class="comment"># We can execute the following lsof command and specify the thread number 28014, </span></span><br><span class="line"><span class="comment"># specifically view this suspicious thread and suspicious file:</span></span><br><span class="line">lsof -p 28014</span><br><span class="line"><span class="comment"># no output previous command </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check the previous command, failed</span></span><br><span class="line"><span class="built_in">echo</span> $?</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"><span class="comment">#-t thread  -a show command</span></span><br><span class="line">pstree -t -a -p 27458</span><br><span class="line">mysqld,27458 --log_bin=on --sync_binlog=1</span><br><span class="line">...</span><br><span class="line">  ├─&#123;mysqld&#125;,27922</span><br><span class="line">  ├─&#123;mysqld&#125;,27923</span><br><span class="line">  └─&#123;mysqld&#125;,28014</span><br><span class="line"></span><br><span class="line"><span class="comment"># use pid not thread id</span></span><br><span class="line">lsof -p 27458</span><br><span class="line">COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">...</span><br><span class="line">​mysqld  27458      999   38u   REG    8,1 512440000 2601895 /var/lib/mysql/test/products.MYD</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="slow-redis"><a href="#slow-redis" class="headerlink" title="slow redis"></a>slow redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line">top - 12:46:18 up 11 days,  8:49,  1 user,  load average: 1.36, 1.36, 1.04</span><br><span class="line">Tasks: 137 total,   1 running,  79 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  6.0 us,  2.7 sy,  0.0 ni,  5.7 <span class="built_in">id</span>, 84.7 wa,  0.0 hi,  1.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  1.0 us,  3.0 sy,  0.0 ni, 94.7 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  1.3 si,  0.0 st</span><br><span class="line">KiB Mem :  8169300 total,  7342244 free,   432912 used,   394144 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7478748 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 9181 root      20   0  193004  27304   8716 S   8.6  0.3   0:07.15 python</span><br><span class="line"> 9085 systemd+  20   0   28352   9760   1860 D   5.0  0.1   0:04.34 redis-server</span><br><span class="line">  368 root      20   0       0      0      0 D   1.0  0.0   0:33.88 jbd2/sda1-8</span><br><span class="line">  149 root       0 -20       0      0      0 I   0.3  0.0   0:10.63 kworker/0:1H</span><br><span class="line"> 1549 root      20   0  236716  24576   9864 S   0.3  0.3  91:37.30 python3</span><br><span class="line"></span><br><span class="line"> <span class="comment"># high io wait 84.7%</span></span><br><span class="line"></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">...</span><br><span class="line">sda              0.00  492.00      0.00   2672.00     0.00   176.00   0.00  26.35    0.00    1.76   0.00     0.00     5.43   0.00   0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># why has write operation ? redis is just read</span></span><br><span class="line">pidstat -d 1</span><br><span class="line">12:49:35      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">12:49:36        0       368      0.00     16.00      0.00      86  jbd2/sda1-8</span><br><span class="line">12:49:36      100      9085      0.00    636.00      0.00       1  redis-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># -f follow process and thread，-T system call time，-tt show time</span></span><br><span class="line">strace -f -T -tt -p 9085</span><br><span class="line">[pid  9085] 14:20:16.826131 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 65, NULL, 8) = 1 &lt;0.000055&gt;</span><br><span class="line">[pid  9085] 14:20:16.826301 <span class="built_in">read</span>(8, <span class="string">&quot;*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:5b2e76cc-&quot;</span>..., 16384) = 61 &lt;0.000071&gt;</span><br><span class="line">[pid  9085] 14:20:16.826477 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000063&gt;</span><br><span class="line">[pid  9085] 14:20:16.826645 write(8, <span class="string">&quot;<span class="variable">$3</span>\r\nbad\r\n&quot;</span>, 9) = 9 &lt;0.000173&gt;</span><br><span class="line">[pid  9085] 14:20:16.826907 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 65, NULL, 8) = 1 &lt;0.000032&gt;</span><br><span class="line">[pid  9085] 14:20:16.827030 <span class="built_in">read</span>(8, <span class="string">&quot;*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:55862ada-&quot;</span>..., 16384) = 61 &lt;0.000044&gt;</span><br><span class="line">[pid  9085] 14:20:16.827149 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000043&gt;</span><br><span class="line">[pid  9085] 14:20:16.827285 write(8, <span class="string">&quot;<span class="variable">$3</span>\r\nbad\r\n&quot;</span>, 9) = 9 &lt;0.000141&gt;</span><br><span class="line">[pid  9085] 14:20:16.827514 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 64, NULL, 8) = 1 &lt;0.000049&gt;</span><br><span class="line">[pid  9085] 14:20:16.827641 <span class="built_in">read</span>(8, <span class="string">&quot;*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:53522908-&quot;</span>..., 16384) = 61 &lt;0.000043&gt;</span><br><span class="line">[pid  9085] 14:20:16.827784 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000034&gt;</span><br><span class="line">[pid  9085] 14:20:16.827945 write(8, <span class="string">&quot;<span class="variable">$4</span>\r\ngood\r\n&quot;</span>, 10) = 10 &lt;0.000288&gt;</span><br><span class="line">[pid  9085] 14:20:16.828339 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 63, NULL, 8) = 1 &lt;0.000057&gt;</span><br><span class="line">[pid  9085] 14:20:16.828486 <span class="built_in">read</span>(8, <span class="string">&quot;*3\r\n<span class="variable">$4</span>\r\nSADD\r\n<span class="variable">$4</span>\r\ngood\r\n<span class="variable">$36</span>\r\n535&quot;</span>..., 16384) = 67 &lt;0.000040&gt;</span><br><span class="line">[pid  9085] 14:20:16.828623 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000052&gt;</span><br><span class="line">[pid  9085] 14:20:16.828760 write(7, <span class="string">&quot;*3\r\n<span class="variable">$4</span>\r\nSADD\r\n<span class="variable">$4</span>\r\ngood\r\n<span class="variable">$36</span>\r\n535&quot;</span>..., 67) = 67 &lt;0.000060&gt;</span><br><span class="line">[pid  9085] 14:20:16.828970 fdatasync(7) = 0 &lt;0.005415&gt;</span><br><span class="line">[pid  9085] 14:20:16.834493 write(8, <span class="string">&quot;:1\r\n&quot;</span>, 4) = 4 &lt;0.000250&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lsof -p 9085</span><br><span class="line">redis-ser 9085 systemd-network    3r     FIFO   0,12      0t0 15447970 pipe</span><br><span class="line">redis-ser 9085 systemd-network    4w     FIFO   0,12      0t0 15447970 pipe</span><br><span class="line">redis-ser 9085 systemd-network    5u  a_inode   0,13        0    10179 [eventpoll]</span><br><span class="line">redis-ser 9085 systemd-network    6u     sock    0,9      0t0 15447972 protocol: TCP</span><br><span class="line">redis-ser 9085 systemd-network    7w      REG    8,1  8830146  2838532 /data/appendonly.aof</span><br><span class="line">redis-ser 9085 systemd-network    8u     sock    0,9      0t0 15448709 protocol: TCP</span><br><span class="line"></span><br><span class="line"><span class="comment"># Descriptor number 3 is a pipe, number 5 is an eventpoll</span></span><br><span class="line"><span class="comment"># number 7 is an ordinary file, and number 8 is a TCP socket.</span></span><br><span class="line"><span class="comment"># Only the 7th ordinary file will generate disk write, </span></span><br><span class="line"><span class="comment"># and the file path it operates on is /data/appendonly.aof. </span></span><br><span class="line"><span class="comment"># The corresponding system calls include write and fdatasync.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strace -f -p 9085 -T -tt -e fdatasync</span><br><span class="line">strace: Process 9085 attached with 4 threads</span><br><span class="line">[pid  9085] 14:22:52.013547 fdatasync(7) = 0 &lt;0.007112&gt;</span><br><span class="line">[pid  9085] 14:22:52.022467 fdatasync(7) = 0 &lt;0.008572&gt;</span><br><span class="line">[pid  9085] 14:22:52.032223 fdatasync(7) = 0 &lt;0.006769&gt;</span><br><span class="line">...</span><br><span class="line">[pid  9085] 14:22:52.139629 fdatasync(7) = 0 &lt;0.008183&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># final check the process in docker</span></span><br><span class="line">PID=$(docker inspect --format &#123;&#123;.State.Pid&#125;&#125; app)</span><br><span class="line">nsenter --target <span class="variable">$PID</span> --net -- lsof -i</span><br><span class="line">COMMAND    PID            USER   FD   TYPE   DEVICE SIZE/OFF NODE NAME</span><br><span class="line">redis-ser 9085 systemd-network    6u  IPv4 15447972      0t0  TCP localhost:6379 (LISTEN)</span><br><span class="line">redis-ser 9085 systemd-network    8u  IPv4 15448709      0t0  TCP localhost:6379-&gt;localhost:32996 (ESTABLISHED)</span><br><span class="line">python    9181            root    3u  IPv4 15448677      0t0  TCP *:http (LISTEN)</span><br><span class="line">python    9181            root    5u  IPv4 15449632      0t0  TCP localhost:32996-&gt;localhost:6379 (ESTABLISHED)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="summary-2"><a href="#summary-2" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183130.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183134.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183137.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183323.png"></p><h1 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229202720.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229202724.png"></p><ul><li>Bandwidth, which indicates the maximum transmission rate of the link. The unit is usually b&#x2F;s (bits per second).</li><li>Throughput, which indicates the amount of data successfully transmitted per unit of time. The unit is usually b&#x2F;s (bits&#x2F;second) or B&#x2F;s (bytes&#x2F;second). Throughput is limited by bandwidth, and throughput&#x2F;bandwidth is the utilization of the network.</li><li>Delay means the delay from the time the network request is sent until the remote response is received.</li><li>PPS is the abbreviation of Packet Per Second (packet per second), which means the transmission rate in network packets.</li></ul><h2 id="basic-command"><a href="#basic-command" class="headerlink" title="basic command"></a>basic command</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ifconfig </span></span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.17.3  netmask 255.255.255.0  broadcast 192.168.17.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe35:6403  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:35:64:03  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 2193  bytes 150818 (150.8 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 203  bytes 24234 (24.2 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 17791  bytes 1264539 (1.2 MB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 17791  bytes 1264539 (1.2 MB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><ul><li>errors indicates the number of packets with errors, such as check errors, frame synchronization errors, etc.</li><li>dropped indicates the number of dropped packets, that is, the packet has received the Ring Buffer, but the packet was lost due to insufficient memory and other reasons;</li><li>overruns indicates the number of overrun packets, that is, the network I &#x2F; O speed is too fast, causing the packets in the Ring Buffer to be too late to be processed (the queue is full) and the packet loss;</li><li>carrier indicates the number of packets with carrirer errors, such as mismatch in duplex mode, problems with physical cables, etc .;</li><li>collisions indicates the number of collision packets.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang<span class="comment"># netstat -nlp | head -n 3</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      549/systemd-resolve </span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ss -lntp | head -n 3</span></span><br><span class="line">State    Recv-Q    Send-Q        Local Address:Port        Peer Address:Port                                                                                    </span><br><span class="line">LISTEN   0         128           127.0.0.53%lo:53               0.0.0.0:*        <span class="built_in">users</span>:((&quot;systemd-resolve&quot;,pid=<span class="number">549</span>,fd=<span class="number">13</span>))                                      </span><br><span class="line">LISTEN   0         128                 0.0.0.0:22               0.0.0.0:*        <span class="built_in">users</span>:((&quot;sshd&quot;,pid=<span class="number">1040</span>,fd=<span class="number">3</span>)) </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>When the socket is connected (Established),<br>Recv-Q indicates the number of bytes (that is, the length of the receive queue) that the socket buffer has not been taken away by the application.<br>Send-Q indicates the number of bytes (that is, the length of the send queue) that have not been acknowledged by the remote host.</p></li><li><p>When the socket is in the listening state (Listening),<br>Recv-Q represents the current value of the syn backlog.<br>Send-Q represents the largest syn backlog value.</p></li></ul><p>The syn backlog is the length of the semi-connected queue in the TCP protocol stack, and accordingly there is also a fully connected queue (accept queue)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># netstat -s</span></span><br><span class="line">Ip:</span><br><span class="line">    Forwarding: 2</span><br><span class="line">    19787 total packets received</span><br><span class="line">    0 forwarded</span><br><span class="line">    0 incoming packets discarded</span><br><span class="line">    19785 incoming packets delivered</span><br><span class="line">    19373 requests sent out</span><br><span class="line">Icmp:</span><br><span class="line">    0 ICMP messages received</span><br><span class="line">    0 input ICMP message failed</span><br><span class="line">    ICMP input histogram:</span><br><span class="line">    0 ICMP messages sent</span><br><span class="line">    0 ICMP messages failed</span><br><span class="line">    ICMP output histogram:</span><br><span class="line">Tcp:</span><br><span class="line">    4 active connection openings</span><br><span class="line">    1 passive connection openings</span><br><span class="line">    4 failed connection attempts</span><br><span class="line">    0 connection resets received</span><br><span class="line">    1 connections established</span><br><span class="line">    294 segments received</span><br><span class="line">    195 segments sent out</span><br><span class="line">    0 segments retransmitted</span><br><span class="line">    0 bad segments received</span><br><span class="line">    4 resets sent</span><br><span class="line">Udp:</span><br><span class="line">    19388 packets received</span><br><span class="line">    0 packets to unknown port received</span><br><span class="line">    0 packet receive errors</span><br><span class="line">    19180 packets sent</span><br><span class="line">    0 receive buffer errors</span><br><span class="line">    0 send buffer errors</span><br><span class="line">    IgnoredMulti: 107</span><br><span class="line">UdpLite:</span><br><span class="line">TcpExt:</span><br><span class="line">    3 delayed acks sent</span><br><span class="line">    47 packet headers predicted</span><br><span class="line">    2 acknowledgments not containing data payload received</span><br><span class="line">    170 predicted acknowledgments</span><br><span class="line">    TCPBacklogCoalesce: 9</span><br><span class="line">    TCPAutoCorking: 12</span><br><span class="line">    TCPOrigDataSent: 180</span><br><span class="line">    TCPDelivered: 180</span><br><span class="line">IpExt:</span><br><span class="line">    InMcastPkts: 279</span><br><span class="line">    OutMcastPkts: 66</span><br><span class="line">    InBcastPkts: 107</span><br><span class="line">    OutBcastPkts: 7</span><br><span class="line">    InOctets: 1405727</span><br><span class="line">    OutOctets: 1393405</span><br><span class="line">    InMcastOctets: 19672</span><br><span class="line">    OutMcastOctets: 6290</span><br><span class="line">    InBcastOctets: 9737</span><br><span class="line">    OutBcastOctets: 327</span><br><span class="line">    InNoECTPkts: 19788</span><br><span class="line"></span><br><span class="line"><span class="comment"># ss</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ss -s</span></span><br><span class="line">Total: 958 (kernel 2224)</span><br><span class="line">TCP:   6 (estab 1, closed 0, orphaned 0, synrecv 0, timewait 0/0), ports 0</span><br><span class="line"></span><br><span class="line">Transport  Total     IP        IPv6</span><br><span class="line">*         2224      -         -        </span><br><span class="line">RAW       0         0         0        </span><br><span class="line">UDP       6         4         2        </span><br><span class="line">TCP       6         4         2        </span><br><span class="line">INET     12        8         4        </span><br><span class="line">FRAG     0         0         0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sar</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># sar -n DEV 1</span></span><br><span class="line">Linux 5.0.0-37-generic (ubuntu) 12/29/2019 _x86_64_(2 CPU)</span><br><span class="line"></span><br><span class="line">08:42:20 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:42:21 PM     ens33      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">08:42:21 PM        lo     80.00     80.00      5.55      5.55      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">08:42:21 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:42:22 PM     ens33     34.00     34.00      1.99      3.25      0.00      0.00      0.00      0.00</span><br><span class="line">08:42:22 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># ping</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ping -c3 114.114.114.114</span></span><br><span class="line">PING 114.114.114.114 (114.114.114.114) 56(84) bytes of data.</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=1 ttl=128 time=222 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=2 ttl=128 time=221 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=3 ttl=128 time=222 ms</span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ethtool ens33 | grep Speed</span></span><br><span class="line">Speed: 1000Mb/s</span><br></pre></td></tr></table></figure><h2 id="C10K-and-C1000K"><a href="#C10K-and-C1000K" class="headerlink" title="C10K and C1000K"></a>C10K and C1000K</h2><ol><li><p>select or poll Apache</p></li><li><p>epoll Nginx </p></li><li><p>Asynchronous I&#x2F;O</p></li><li><p>one master, multiple worker</p></li><li><p>multi-process listen same port, need enable SO_REUSEPORT</p></li><li><p>C1000K’s solution is essentially built on epoll’s non-blocking I &#x2F; O model.</p></li><li><p>C10M: To solve this problem, the most important thing is to skip the lengthy path of the kernel protocol stack and send the network packets directly to the application to be processed. There are two common mechanisms here, DPDK and XDP.</p></li></ol><ul><li>DPDK is the standard for user mode networks. It skips the kernel protocol stack and directly processes the network reception by the user mode process through polling.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229210141.png">  </li><li>XDP (eXpress Data Path) is a high-performance network data path provided by the Linux kernel. It allows network packets to be processed before entering the kernel protocol stack, which can also bring higher performance. The bottom layer of XDP, like the bcc-tools we used before, is implemented based on the eBPF mechanism of the Linux kernel.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229210414.png"></li></ul><h2 id="performance-test"><a href="#performance-test" class="headerlink" title="performance test"></a>performance test</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable pktgen</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># modprobe pktgen</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ps -ef | grep pktgen | grep -v grep</span></span><br><span class="line">root       2478      2  0 22:25 ?        00:00:00 [kpktgend_0]</span><br><span class="line">root       2480      2  0 22:25 ?        00:00:00 [kpktgend_1]</span><br><span class="line">root       2481      2  0 22:25 ?        00:00:00 [kpktgend_0]</span><br><span class="line">root       2482      2  0 22:25 ?        00:00:00 [kpktgend_1]</span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ls /proc/net/pktgen/</span></span><br><span class="line">kpktgend_0  kpktgend_1  pgctrl</span><br></pre></td></tr></table></figure><p>do some test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># define function</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">pgset</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> result</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$1</span> &gt; <span class="variable">$PGDEV</span></span><br><span class="line"> </span><br><span class="line">    result=`<span class="built_in">cat</span> <span class="variable">$PGDEV</span> | fgrep <span class="string">&quot;Result: OK:&quot;</span>`</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$result</span>&quot;</span> = <span class="string">&quot;&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">cat</span> <span class="variable">$PGDEV</span> | fgrep Result:</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># bind 0 thread to eth0</span></span><br><span class="line">PGDEV=/proc/net/pktgen/kpktgend_0</span><br><span class="line">pgset <span class="string">&quot;rem_device_all&quot;</span>   <span class="comment"># clear bind</span></span><br><span class="line">pgset <span class="string">&quot;add_device eth0&quot;</span>  <span class="comment"># add eth0 </span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># config eth0 </span></span><br><span class="line">PGDEV=/proc/net/pktgen/eth0</span><br><span class="line">pgset <span class="string">&quot;count 1000000&quot;</span>    <span class="comment"># total send package</span></span><br><span class="line">pgset <span class="string">&quot;delay 5000&quot;</span>       <span class="comment"># interval </span></span><br><span class="line">pgset <span class="string">&quot;clone_skb 0&quot;</span>      <span class="comment"># SKB package duplicate</span></span><br><span class="line">pgset <span class="string">&quot;pkt_size 64&quot;</span>      <span class="comment"># package size</span></span><br><span class="line">pgset <span class="string">&quot;dst 192.168.0.30&quot;</span> <span class="comment"># dest IP</span></span><br><span class="line">pgset <span class="string">&quot;dst_mac 11:11:11:11:11:11&quot;</span>  <span class="comment"># dest MAC</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># start test</span></span><br><span class="line">PGDEV=/proc/net/pktgen/pgctrl</span><br><span class="line">pgset <span class="string">&quot;start&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/net/pktgen/eth0</span><br><span class="line">Params: count 1000000  min_pkt_size: 64  max_pkt_size: 64</span><br><span class="line">     frags: 0  delay: 0  clone_skb: 0  ifname: eth0</span><br><span class="line">     flows: 0 flowlen: 0</span><br><span class="line">...</span><br><span class="line">Current:</span><br><span class="line">     pkts-sofar: 1000000  errors: 0</span><br><span class="line">     started: 1534853256071us  stopped: 1534861576098us idle: 70673us</span><br><span class="line">...</span><br><span class="line">Result: OK: 8320027(c8249354+d70673) usec, 1000000 (64byte,0frags)</span><br><span class="line">  120191pps 61Mb/sec (61537792bps) errors: 0</span><br></pre></td></tr></table></figure><p>TCP test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install iperf3</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install iperf3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># iperf3 -s -i 1 -p 10000</span></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">Server listening on 10000</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iperf3 -c 192.168.0.30 -b 1G -t 15 -P 2 -p 10000</span><br><span class="line"></span><br><span class="line">[ ID] Interval           Transfer     Bandwidth</span><br><span class="line">...</span><br><span class="line">[SUM]   0.00-15.04  sec  0.00 Bytes  0.00 bits/sec                  sender</span><br><span class="line">[SUM]   0.00-15.04  sec  1.51 GBytes   860 Mbits/sec                  receiver</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HTTP test</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu</span><br><span class="line">apt-get install -y apache2-utils</span><br><span class="line"># CentOS</span><br><span class="line">yum install -y httpd-tools</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ab -c 1000 -n 10000 http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Server Software:        nginx/1.15.8</span><br><span class="line">Server Hostname:        192.168.0.30</span><br><span class="line">Server Port:            80</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">Requests per second:    1078.54 [#/sec] (mean)</span><br><span class="line">Time per request:       927.183 [ms] (mean)</span><br><span class="line">Time per request:       0.927 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          890.00 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0   27 152.1      1    1038</span><br><span class="line">Processing:     9  207 843.0     22    9242</span><br><span class="line">Waiting:        8  207 843.0     22    9242</span><br><span class="line">Total:         15  233 857.7     23    9268</span><br><span class="line"> </span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%     23</span><br><span class="line">  66%     24</span><br><span class="line">  75%     24</span><br><span class="line">  80%     26</span><br><span class="line">  90%    274</span><br><span class="line">  95%   1195</span><br><span class="line">  98%   2335</span><br><span class="line">  99%   4663</span><br><span class="line"> 100%   9268 (longest request)</span><br></pre></td></tr></table></figure><p>App test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/wg/wrk</span><br><span class="line"><span class="built_in">cd</span> wrk</span><br><span class="line">apt-get install build-essential -y</span><br><span class="line">make</span><br><span class="line">sudo <span class="built_in">cp</span> wrk /usr/local/bin/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wrk -c 1000 -t 2 http://192.168.0.30/</span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30/</span><br><span class="line">  2 threads and 1000 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency    65.83ms  174.06ms   1.99s    95.85%</span><br><span class="line">    Req/Sec     4.87k   628.73     6.78k    69.00%</span><br><span class="line">  96954 requests <span class="keyword">in</span> 10.06s, 78.59MB <span class="built_in">read</span></span><br><span class="line">  Socket errors: connect 0, <span class="built_in">read</span> 0, write 0, <span class="built_in">timeout</span> 179</span><br><span class="line">Requests/sec:   9641.31</span><br><span class="line">Transfer/sec:      7.82MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># setup add parameter</span></span><br><span class="line">-- example script that demonstrates response handling and</span><br><span class="line">-- retrieving an authentication token to <span class="built_in">set</span> on all future</span><br><span class="line">-- requests</span><br><span class="line"> </span><br><span class="line">token = nil</span><br><span class="line">path  = <span class="string">&quot;/authenticate&quot;</span></span><br><span class="line"> </span><br><span class="line">request = <span class="keyword">function</span>()</span><br><span class="line">   <span class="built_in">return</span> wrk.format(<span class="string">&quot;GET&quot;</span>, path)</span><br><span class="line">end</span><br><span class="line"> </span><br><span class="line">response = <span class="keyword">function</span>(status, headers, body)</span><br><span class="line">   <span class="keyword">if</span> not token and status == 200 <span class="keyword">then</span></span><br><span class="line">      token = headers[<span class="string">&quot;X-Token&quot;</span>]</span><br><span class="line">      path  = <span class="string">&quot;/resource&quot;</span></span><br><span class="line">      wrk.headers[<span class="string">&quot;X-Token&quot;</span>] = token</span><br><span class="line">   end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">wrk -c 1000 -t 2 -s auth.lua http://192.168.0.30/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="DNS-slow"><a href="#DNS-slow" class="headerlink" title="DNS slow"></a>DNS slow</h2><ul><li>A record, used to translate the domain name into an IP address;</li><li>CNAME record for creating aliases;</li><li>The NS record indicates the name server address corresponding to the domain name.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># dig +trace +nodnssec feiyang233.club</span></span><br><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># nslookup feiyang233.club</span></span><br><span class="line">Server:1.1.1.1</span><br><span class="line">Address:1.1.1.1<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">feiyang233.clubcanonical name = fainyang.github.io.</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.109.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.110.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.111.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.108.153</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># dig +trace +nodnssec feiyang233.club</span></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.11-Ubuntu &lt;&lt;&gt;&gt; +trace +nodnssec feiyang233.club</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.7974INNSi.root-servers.net.</span><br><span class="line">.7974INNSj.root-servers.net.</span><br><span class="line">.7974INNSk.root-servers.net.</span><br><span class="line">.7974INNSl.root-servers.net.</span><br><span class="line">.7974INNSm.root-servers.net.</span><br><span class="line">.7974INNSa.root-servers.net.</span><br><span class="line">.7974INNSb.root-servers.net.</span><br><span class="line">.7974INNSc.root-servers.net.</span><br><span class="line">.7974INNSd.root-servers.net.</span><br><span class="line">.7974INNSe.root-servers.net.</span><br><span class="line">.7974INNSf.root-servers.net.</span><br><span class="line">.7974INNSg.root-servers.net.</span><br><span class="line">.7974INNSh.root-servers.net.</span><br><span class="line">;; Received 431 bytes from 1.1.1.1<span class="comment">#53(1.1.1.1) in 8 ms</span></span><br><span class="line"></span><br><span class="line">club.172800INNSns4.dns.nic.club.</span><br><span class="line">club.172800INNSns1.dns.nic.club.</span><br><span class="line">club.172800INNSns6.dns.nic.club.</span><br><span class="line">club.172800INNSns2.dns.nic.club.</span><br><span class="line">club.172800INNSns3.dns.nic.club.</span><br><span class="line">club.172800INNSns5.dns.nic.club.</span><br><span class="line">;; Received 456 bytes from 192.36.148.17<span class="comment">#53(i.root-servers.net) in 104 ms</span></span><br><span class="line"></span><br><span class="line">feiyang233.club.3600INNSf1g1ns1.dnspod.net.</span><br><span class="line">feiyang233.club.3600INNSf1g1ns2.dnspod.net.</span><br><span class="line">;; Received 98 bytes from 156.154.144.215<span class="comment">#53(ns1.dns.nic.club) in 189 ms</span></span><br><span class="line"></span><br><span class="line">;; Received 44 bytes from 182.140.167.166<span class="comment">#53(f1g1ns1.dnspod.net) in 404 ms</span></span><br></pre></td></tr></table></figure><ol><li>no &#x2F;etc&#x2F;resolv.conf <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nslookup feiyang233.club</span><br><span class="line">;; connection timed out; no servers could be reached</span><br><span class="line"></span><br><span class="line"><span class="comment"># add DNS</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nameserver 1.1.1.1&quot;</span> &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure></li><li>DNS unstable<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">time nslookup time.geekbang.org</span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8<span class="comment">#53</span></span><br><span class="line"> </span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:time.geekbang.org</span><br><span class="line">Address: 39.106.233.176</span><br><span class="line"> </span><br><span class="line">real0m10.349s</span><br><span class="line">user0m0.004s</span><br><span class="line">sys0m0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time nslookup time.geekbang.org</span><br><span class="line">;; connection timed out; no servers could be reached</span><br><span class="line"> </span><br><span class="line">real0m15.011s</span><br><span class="line">user0m0.006s</span><br><span class="line">sys0m0.006s</span><br></pre></td></tr></table></figure>The DNS server itself has problems, the response is slow and unstable;</li></ol><p>The network delay from the client to the DNS server is relatively large;</p><p>DNS request or response packets are lost by network devices on the link in some cases.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 8.8.8.8</span><br><span class="line">PING 8.8.8.8 (8.8.8.8): 56 data bytes</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=0 ttl=31 time=137.637 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=1 ttl=31 time=144.743 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=2 ttl=31 time=138.576 ms</span><br><span class="line">--- 8.8.8.8 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 137.637/140.319/144.743/3.152 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># try other DNS</span></span><br><span class="line"></span><br><span class="line">ping -c3 114.114.114.114</span><br><span class="line">PING 114.114.114.114 (114.114.114.114): 56 data bytes</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=0 ttl=67 time=31.130 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=1 ttl=56 time=31.302 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=2 ttl=56 time=31.250 ms</span><br><span class="line">--- 114.114.114.114 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 31.130/31.227/31.302/0.072 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> nameserver 114.114.114.114 &gt; /etc/resolv.conf</span><br><span class="line">time nslookup time.geekbang.org</span><br><span class="line">Server:114.114.114.114</span><br><span class="line">Address:114.114.114.114<span class="comment">#53</span></span><br><span class="line"> </span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:time.geekbang.org</span><br><span class="line">Address: 39.106.233.176</span><br><span class="line"> </span><br><span class="line">real    0m0.064s</span><br><span class="line">user    0m0.007s</span><br><span class="line">sys     0m0.006s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="dump-traffic"><a href="#dump-traffic" class="headerlink" title="dump traffic"></a>dump traffic</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install tcpdump wireshark</span><br><span class="line"> </span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install -y tcpdump wireshark</span><br><span class="line"></span><br><span class="line">tcpdump -nn udp port 53 or host 35.190.27.188</span><br><span class="line"></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">14:02:31.100564 IP 172.16.3.4.56669 &gt; 114.114.114.114.53: 36909+ A? geektime.org. (30)</span><br><span class="line">14:02:31.507699 IP 114.114.114.114.53 &gt; 172.16.3.4.56669: 36909 1/0/0 A 35.190.27.188 (46)</span><br><span class="line">14:02:31.508164 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, <span class="built_in">id</span> 4356, <span class="built_in">seq</span> 1, length 64</span><br><span class="line">14:02:31.539667 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, <span class="built_in">id</span> 4356, <span class="built_in">seq</span> 1, length 64</span><br><span class="line">14:02:31.539995 IP 172.16.3.4.60254 &gt; 114.114.114.114.53: 49932+ PTR? 188.27.190.35.in-addr.arpa. (44)</span><br><span class="line">14:02:36.545104 IP 172.16.3.4.60254 &gt; 114.114.114.114.53: 49932+ PTR? 188.27.190.35.in-addr.arpa. (44)</span><br><span class="line">14:02:41.551284 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, <span class="built_in">id</span> 4356, <span class="built_in">seq</span> 2, length 64</span><br><span class="line">14:02:41.582363 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, <span class="built_in">id</span> 4356, <span class="built_in">seq</span> 2, length 64</span><br><span class="line">14:02:42.552506 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, <span class="built_in">id</span> 4356, <span class="built_in">seq</span> 3, length 64</span><br><span class="line">14:02:42.583646 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, <span class="built_in">id</span> 4356, <span class="built_in">seq</span> 3, length 64</span><br></pre></td></tr></table></figure><p>The purpose of PTR reverse address resolution is to find out the domain name from the IP address, but in fact, not all IP addresses will define PTR records, so PTR queries are likely to fail.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check PTR</span></span><br><span class="line"></span><br><span class="line">nslookup -<span class="built_in">type</span>=PTR 35.190.27.188 8.8.8.8</span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8<span class="comment">#53</span></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">188.27.190.35.in-addr.arpaname = 188.27.190.35.bc.googleusercontent.com.</span><br><span class="line">Authoritative answers can be found from:</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">dig +short example.com</span><br><span class="line">93.184.216.34</span><br><span class="line">tcpdump -nn host 93.184.216.34 -w web.pcap</span><br><span class="line"></span><br><span class="line"><span class="comment"># in another tty</span></span><br><span class="line">curl http://example.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091850.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091854.png">  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tcpdump output format</span></span><br><span class="line">Timestamp Protocol Source Address Source Port&gt; Destination Address Destination Port Network Packet Details</span><br><span class="line">时间戳 协议 源地址 源端口 &gt; 目的地址 目的端口 网络包详细信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091857.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091900.png"></p><h2 id="anti-DDoS"><a href="#anti-DDoS" class="headerlink" title="anti-DDoS"></a>anti-DDoS</h2><p>DDoS（Distributed Denial of Service） </p><ul><li>Running out of bandwidth</li><li>Running out of operating system resources</li><li>Running out of application resources</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -S set TCP  SYN，-p port 80</span></span><br><span class="line"><span class="comment"># -i u10  10us interval</span></span><br><span class="line">hping3 -S -p 80 -i u10 192.168.0.30</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -w only output HTTP status total time -o redirect to /dev/null</span></span><br><span class="line">curl -s -w <span class="string">&#x27;Http code: %&#123;http_code&#125;\nTotal time:%&#123;time_total&#125;s\n&#x27;</span> -o /dev/null http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Http code: 200</span><br><span class="line">Total time:0.002s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sar -n DEV 1</span><br><span class="line">08:55:49        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:55:50      docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">08:55:50         eth0  22274.00    629.00   1174.64     37.78      0.00      0.00      0.00      0.02</span><br><span class="line">08:55:50           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># small package 54B （1174*1024/22274=54）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -i eth0 nic，-n Don&#x27;t convert addresses (i.e., host addresses, port numbers, etc.) to names.</span></span><br><span class="line"><span class="comment"># tcp port 80 </span></span><br><span class="line">$ tcpdump -i eth0 -n tcp port 80</span><br><span class="line">09:15:48.287047 IP 192.168.0.2.27095 &gt; 192.168.0.30: Flags [S], <span class="built_in">seq</span> 1288268370, win 512, length 0</span><br><span class="line">09:15:48.287050 IP 192.168.0.2.27131 &gt; 192.168.0.30: Flags [S], <span class="built_in">seq</span> 2084255254, win 512, length 0</span><br><span class="line">09:15:48.287052 IP 192.168.0.2.27116 &gt; 192.168.0.30: Flags [S], <span class="built_in">seq</span> 677393791, win 512, length 0</span><br><span class="line">09:15:48.287055 IP 192.168.0.2.27141 &gt; 192.168.0.30: Flags [S], <span class="built_in">seq</span> 1276451587, win 512, length 0</span><br><span class="line">09:15:48.287068 IP 192.168.0.2.27154 &gt; 192.168.0.30: Flags [S], <span class="built_in">seq</span> 1851495339, win 512, length 0</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231164029.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231164122.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check SYN_REC</span></span><br><span class="line">netstat -n -p | grep SYN_REC</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:12503      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:13502      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:15256      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:18117      SYN_RECV    -</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">netstat -n -p | grep SYN_REC | <span class="built_in">wc</span> -l</span><br><span class="line">193</span><br><span class="line"></span><br><span class="line"><span class="comment"># method for SYN DDoS</span></span><br><span class="line"><span class="comment"># limit SYN 1/s</span></span><br><span class="line">$ iptables -A INPUT -p tcp --syn -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 1/s -j ACCEPT</span><br><span class="line"> </span><br><span class="line"><span class="comment"># limit every IP only establish 10 connections during 60s</span></span><br><span class="line">$ iptables -I INPUT -p tcp --dport 80 --syn -m recent --name SYN_FLOOD --update --seconds 60 --hitcount 10 -j REJECT</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_max_syn_backlog</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 256</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase max</span></span><br><span class="line">sysctl -w net.ipv4.tcp_max_syn_backlog=1024</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># decrease retry time from default 5 to 1</span></span><br><span class="line">sysctl -w net.ipv4.tcp_synack_retries=1</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable TCP SYN Cookies</span></span><br><span class="line">sysctl -w net.ipv4.tcp_syncookies=1</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># above set is temporary, for persistent</span></span><br><span class="line"><span class="built_in">cat</span> /etc/sysctl.conf</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br></pre></td></tr></table></figure><p>In a Linux server, you can increase the anti-attack capability of the server and reduce the impact of DDoS on normal services through various methods such as kernel tuning, DPDK, and XDP. In the application, you can use various levels of caching, WAF, CDN and other methods to mitigate the impact of DDoS on the application.</p><h2 id="network-slow"><a href="#network-slow" class="headerlink" title="network slow"></a>network slow</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">traceroute --tcp -p 80 -n baidu.com</span><br><span class="line">traceroute to baidu.com (123.125.115.110), 30 hops max, 60 byte packets</span><br><span class="line"> 1  * * *</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  * * *</span><br><span class="line"> 4  * * *</span><br><span class="line"> 5  * * *</span><br><span class="line"> 6  * * *</span><br><span class="line"> 7  * * *</span><br><span class="line"> 8  * * *</span><br><span class="line"> 9  * * *</span><br><span class="line">10  * * *</span><br><span class="line">11  * * *</span><br><span class="line">12  * * *</span><br><span class="line">13  * * *</span><br><span class="line">14  123.125.115.110  20.684 ms *  20.798 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># install wrk</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/wg/wrk</span><br><span class="line"><span class="built_in">cd</span> wrk</span><br><span class="line">apt-get install build-essential -y</span><br><span class="line">make</span><br><span class="line">sudo <span class="built_in">cp</span> wrk /usr/local/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># create 2 nginx</span></span><br><span class="line">docker run --network=host --name=good -itd nginx</span><br><span class="line"></span><br><span class="line">docker run --name nginx --network=host -itd feisky/nginx:latency</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl port 80 and 8080</span></span><br><span class="line"><span class="comment"># 80 ok</span></span><br><span class="line">curl http://192.168.0.30</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">...</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 8080 ok</span></span><br><span class="line">curl http://192.168.0.30:8080</span><br><span class="line">...</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 80 ok </span></span><br><span class="line">hping3 -c 3 -S -p 80 192.168.0.30</span><br><span class="line">HPING 192.168.0.30 (eth0 192.168.0.30): S <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF <span class="built_in">id</span>=0 sport=80 flags=SA <span class="built_in">seq</span>=0 win=29200 rtt=7.8 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF <span class="built_in">id</span>=0 sport=80 flags=SA <span class="built_in">seq</span>=1 win=29200 rtt=7.7 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF <span class="built_in">id</span>=0 sport=80 flags=SA <span class="built_in">seq</span>=2 win=29200 rtt=7.6 ms</span><br><span class="line"> </span><br><span class="line">--- 192.168.0.30 hping statistic ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 7.6/7.7/7.8 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8080 ok</span></span><br><span class="line">hping3 -c 3 -S -p 8080 192.168.0.30</span><br><span class="line">HPING 192.168.0.30 (eth0 192.168.0.30): S <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF <span class="built_in">id</span>=0 sport=8080 flags=SA <span class="built_in">seq</span>=0 win=29200 rtt=7.7 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF <span class="built_in">id</span>=0 sport=8080 flags=SA <span class="built_in">seq</span>=1 win=29200 rtt=7.6 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF <span class="built_in">id</span>=0 sport=8080 flags=SA <span class="built_in">seq</span>=2 win=29200 rtt=7.3 ms</span><br><span class="line"> </span><br><span class="line">--- 192.168.0.30 hping statistic ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 7.3/7.6/7.7 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 80 </span></span><br><span class="line">测试 80 端口性能</span><br><span class="line">$ <span class="comment"># wrk --latency -c 100 -t 2 --timeout 2 http://192.168.0.30/</span></span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30/</span><br><span class="line">  2 threads and 100 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency     9.19ms   12.32ms 319.61ms   97.80%</span><br><span class="line">    Req/Sec     6.20k   426.80     8.25k    85.50%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%    7.78ms</span><br><span class="line">     75%    8.22ms</span><br><span class="line">     90%    9.14ms</span><br><span class="line">     99%   50.53ms</span><br><span class="line">  123558 requests <span class="keyword">in</span> 10.01s, 100.15MB <span class="built_in">read</span></span><br><span class="line">Requests/sec:  12340.91</span><br><span class="line">Transfer/sec:     10.00MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 8080, this nginx is very slow</span></span><br><span class="line">wrk --latency -c 100 -t 2 --<span class="built_in">timeout</span> 2 http://192.168.0.30:8080/</span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30:8080/</span><br><span class="line">  2 threads and 100 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency    43.60ms    6.41ms  56.58ms   97.06%</span><br><span class="line">    Req/Sec     1.15k   120.29     1.92k    88.50%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%   44.02ms</span><br><span class="line">     75%   44.33ms</span><br><span class="line">     90%   47.62ms</span><br><span class="line">     99%   48.88ms</span><br><span class="line">  22853 requests <span class="keyword">in</span> 10.01s, 18.55MB <span class="built_in">read</span></span><br><span class="line">Requests/sec:   2283.31</span><br><span class="line">Transfer/sec:      1.85MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># dump the traffic</span></span><br><span class="line"></span><br><span class="line">tcpdump -nn tcp port 8080 -w nginx.pcap</span><br><span class="line">wrk --latency -c 100 -t 2 --<span class="built_in">timeout</span> 2 http://192.168.0.30:8080/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Open this nginx.pcap in Wireshark, Statics -&gt; Flow Graph，select “Limit to display filter” and setup Flow type to “TCP Flows”：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101110429.png"><br>Blue area is very slow costs 40ms, 40ms is minimum timeout for TCP delayed acknowledgement (Delayed ACK).<br>An optimization mechanism for TCP ACK, that is, instead of sending an ACK for each request, you wait for a while (such as 40ms). If there are other packets that need to be sent during this period, send them with the ACK. Of course, if you can’t wait for other packets, then send ACK separately after timeout.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TCP_QUICKACK (since Linux 2.4.4)</span></span><br><span class="line"><span class="comment"># Enable  quickack mode if set or disable quickack mode if cleared.  In quickack mode, </span></span><br><span class="line"><span class="comment"># acks are sent imme‐diately, rather than delayed if needed in accordance to normal TCP operation.</span></span><br><span class="line"><span class="comment"># This flag is  not  perma‐nent,  it only enables a switch to or from quickack mode.  </span></span><br><span class="line"><span class="comment"># Subsequent operation of the TCP protocol will once again enter/leave quickack mode</span></span><br><span class="line"><span class="comment"># depending on internal  protocol  processing  and  factors  such  as delayed ack timeouts occurring </span></span><br><span class="line"><span class="comment"># and data transfer.  This option should not be used in code intended to be portable.</span></span><br></pre></td></tr></table></figure><p><a href="https://en.wikipedia.org/wiki/Nagle%27s_algorithm">The Nagle algorithm</a> is an optimization algorithm used in the TCP protocol to reduce the number of small packets sent, in order to improve the utilization of the actual bandwidth. The Nagle algorithm specifies that there can be at most one unconfirmed outstanding packet on a TCP connection; no other packets are sent until an ACK for this packet is received.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#TCP_NODELAY</span></span><br><span class="line"><span class="comment"># If set, disable the Nagle algorithm.  This means that segments are always sent as soon as possible,</span></span><br><span class="line"><span class="comment"># even if there is only a small amount of data.  When not set, data is buffered until there is a </span></span><br><span class="line"><span class="comment"># sufficient amount to send out, thereby avoiding the frequent sending of small packets, </span></span><br><span class="line"><span class="comment"># which results in poor uti‐lization of the network.  </span></span><br><span class="line"><span class="comment"># This option is overridden by TCP_CORK; however, setting this option forces an explicit flush of</span></span><br><span class="line"><span class="comment"># pending output, even if TCP_CORK is currently set.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check tcp_nodelay</span></span><br><span class="line"><span class="built_in">cat</span> /etc/nginx/nginx.conf | grep tcp_nodelay</span><br><span class="line">    tcp_nodelay    off;</span><br></pre></td></tr></table></figure><h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>Network Address and Port Translation<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101112538.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SNAT</span></span><br><span class="line"><span class="comment"># MASQUERADE, change out ip to Linux wan ip</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -j MASQUERADE</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100</span><br><span class="line"></span><br><span class="line"><span class="comment"># DNAT</span></span><br><span class="line">iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100</span><br><span class="line">iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable forward function</span></span><br><span class="line"><span class="comment"># sysctl net.ipv4.ip_forward</span></span><br><span class="line"><span class="comment"># net.ipv4.ip_forward = 1</span></span><br><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># open files</span></span><br><span class="line"><span class="built_in">ulimit</span> -n</span><br><span class="line">1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase to 66535</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 65536</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Requests per second:    6576.21 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       760.317 [ms] (mean)</span><br><span class="line">Time per request:       0.152 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          5390.19 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0  177 714.3      9    7338</span><br><span class="line">Processing:     0   27  39.8     19     961</span><br><span class="line">Waiting:        0   23  39.5     16     951</span><br><span class="line">Total:          1  204 716.3     28    7349</span><br><span class="line"></span><br><span class="line"><span class="comment"># run new test container</span></span><br><span class="line">docker run --name nginx --privileged -p 8080:8080 -itd feisky/nginx:nat</span><br><span class="line"></span><br><span class="line">iptables -nL -t nat</span><br><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">DOCKER     all  --  0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">Chain DOCKER (2 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">RETURN     all  --  0.0.0.0/0            0.0.0.0/0</span><br><span class="line">DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:172.17.0.2:8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># test again</span></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">apr_pollset_poll: The <span class="built_in">timeout</span> specified has expired (70007)</span><br><span class="line">Total of 5602 requests completed</span><br><span class="line"></span><br><span class="line"><span class="comment"># set timeout is 30s</span></span><br><span class="line">ab -c 5000 -n 10000 -r -s 30 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">Requests per second:    76.47 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       65380.868 [ms] (mean)</span><br><span class="line">Time per request:       13.076 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          44.79 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0 1300 5578.0      1   65184</span><br><span class="line">Processing:     0 37916 59283.2      1  130682</span><br><span class="line">Waiting:        0    2   8.7      1     414</span><br><span class="line">Total:          1 39216 58711.6   1021  130682</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>we create a script to follow this iptable path</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/env stap</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># Dropwatch.stp</span></span><br><span class="line"><span class="comment"># Author: Neil Horman &lt;nhorman@redhat.com&gt;</span></span><br><span class="line"><span class="comment"># An example script to mimic the behavior of the dropwatch utility</span></span><br><span class="line"><span class="comment"># http://fedorahosted.org/dropwatch</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Array to hold the list of drop points we find</span></span><br><span class="line">global locations</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Note when we turn the monitor on and off</span></span><br><span class="line">probe begin &#123; <span class="built_in">printf</span>(<span class="string">&quot;Monitoring for dropped packets\n&quot;</span>) &#125;</span><br><span class="line">probe end &#123; <span class="built_in">printf</span>(<span class="string">&quot;Stopping dropped packet monitor\n&quot;</span>) &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># increment a drop counter for every location we drop at</span></span><br><span class="line">probe kernel.trace(<span class="string">&quot;kfree_skb&quot;</span>) &#123; locations[<span class="variable">$location</span>] &lt;&lt;&lt; <span class="string">1 &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"># Every 5 seconds report our drop locations</span></span><br><span class="line"><span class="string">probe timer.sec(5)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  printf(&quot;\n&quot;)</span></span><br><span class="line"><span class="string">  foreach (l in locations-) &#123;</span></span><br><span class="line"><span class="string">    printf(&quot;%d packets dropped at %s\n&quot;,</span></span><br><span class="line"><span class="string">           @count(locations[l]), symname(l))</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  delete locations</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>run this script</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">stap --all-modules dropwatch.stp</span><br><span class="line">Monitoring <span class="keyword">for</span> dropped packets</span><br><span class="line"></span><br><span class="line">10031 packets dropped at nf_hook_slow</span><br><span class="line">676 packets dropped at tcp_v4_rcv</span><br><span class="line"> </span><br><span class="line">7284 packets dropped at nf_hook_slow</span><br><span class="line">268 packets dropped at tcp_v4_rcv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># use perf to check </span></span><br><span class="line"><span class="comment"># record 30s crtl + c</span></span><br><span class="line">$ perf record -a -g -- <span class="built_in">sleep</span> 30</span><br><span class="line"> </span><br><span class="line"><span class="comment"># print report</span></span><br><span class="line">$ perf report -g graph,0</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101140853.png"></p><p>Slow in 3 point</p><ol><li>ipv4_conntrack_in</li><li>br_nf_pre_routing</li><li>iptable_nat_ipv4_in</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check conntrack</span></span><br><span class="line">sysctl -a | grep conntrack</span><br><span class="line">net.netfilter.nf_conntrack_count = 180</span><br><span class="line">net.netfilter.nf_conntrack_max = 1000</span><br><span class="line">net.netfilter.nf_conntrack_buckets = 65536</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 60</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># net.netfilter.nf_conntrack_max = 1000 is to small</span></span><br><span class="line">dmesg | <span class="built_in">tail</span></span><br><span class="line">[104235.156774] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line">[104243.800401] net_ratelimit: 3939 callbacks suppressed</span><br><span class="line">[104243.800401] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line">[104262.962157] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The connection tracking object size is 376, and the list item size is 16</span><br><span class="line">nf_conntrack_max * connection tracking object size + nf_conntrack_buckets * list item size</span><br><span class="line">= 1000 * 376 + 65536 * 16 B</span><br><span class="line">= 1.4 MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase conntrack</span></span><br><span class="line">sysctl -w net.netfilter.nf_conntrack_max=131072</span><br><span class="line">sysctl -w net.netfilter.nf_conntrack_buckets=65536</span><br><span class="line"></span><br><span class="line"><span class="comment"># test again, now delay is ok</span></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">Requests per second:    6315.99 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       791.641 [ms] (mean)</span><br><span class="line">Time per request:       0.158 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          4985.15 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0  355 793.7     29    7352</span><br><span class="line">Processing:     8  311 855.9     51   14481</span><br><span class="line">Waiting:        0  292 851.5     36   14481</span><br><span class="line">Total:         15  666 1216.3    148   14645</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conntrack -L -o extended | <span class="built_in">head</span></span><br><span class="line">ipv4     2 tcp      6 7 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51744 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51744 [ASSURED] mark=0 use=1</span><br><span class="line">ipv4     2 tcp      6 6 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51524 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51524 [ASSURED] mark=0 use=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conntrack -L -o extended | <span class="built_in">wc</span> -l</span><br><span class="line">14289</span><br><span class="line"></span><br><span class="line"><span class="comment"># collecte all states</span></span><br><span class="line">conntrack -L -o extended | awk <span class="string">&#x27;/^.*tcp.*$/ &#123;sum[$6]++&#125; END &#123;for(i in sum) print i, sum[i]&#125;&#x27;</span></span><br><span class="line">SYN_RECV 4</span><br><span class="line">CLOSE_WAIT 9</span><br><span class="line">ESTABLISHED 2877</span><br><span class="line">FIN_WAIT 3</span><br><span class="line">SYN_SENT 2113</span><br><span class="line">TIME_WAIT 9283</span><br><span class="line"></span><br><span class="line"><span class="comment"># collect each source IP</span></span><br><span class="line">conntrack -L -o extended | awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&quot;=&quot;</span> -f 2 | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -nr | <span class="built_in">head</span> -n 10</span><br><span class="line">  14116 192.168.0.2</span><br><span class="line">    172 192.168.0.96</span><br></pre></td></tr></table></figure><h2 id="important"><a href="#important" class="headerlink" title="important"></a>important</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tcp time_wait settings check </span></span><br><span class="line">sysctl net.netfilter.nf_conntrack_tcp_timeout_time_wait</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br></pre></td></tr></table></figure><h2 id="summary-3"><a href="#summary-3" class="headerlink" title="summary"></a>summary</h2><p>After setting TCP_NODELAY for the TCP connection, you can disable the Nagle algorithm;</p><p>After TCP_CORK is enabled for a TCP connection, small packets can be aggregated into large packets before being sent (note that it will block the sending of small packets);</p><p>With SO_SNDBUF and SO_RCVBUF, you can adjust the size of the socket send buffer and receive buffer, respectively.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141930.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141933.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141936.png"><br>The three values of tcp_rmem and tcp_wmem are min, default, and max respectively. The system will automatically adjust the size of the TCP receive &#x2F; send buffer according to these settings.</p><p>The three values of udp_mem are min, pressure, max. The system will automatically adjust the size of the UDP send buffer according to these settings.</p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101215350.png"></p><h1 id="Best-Practice"><a href="#Best-Practice" class="headerlink" title="Best Practice"></a>Best Practice</h1><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check running  docker</span></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># check logs</span></span><br><span class="line">docker logs -f [container_id]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check container config in json format</span></span><br><span class="line">docker inspect [container_id] -f <span class="string">&#x27;&#123;&#123;json .State&#125;&#125;&#x27;</span> | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Status&quot;</span>: <span class="string">&quot;exited&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Running&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;Paused&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;Restarting&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;OOMKilled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;Dead&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;Pid&quot;</span>: 0,</span><br><span class="line">  <span class="string">&quot;ExitCode&quot;</span>: 137,</span><br><span class="line">  <span class="string">&quot;Error&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># OMM Kill, we can check in host</span></span><br><span class="line">dmesg</span><br><span class="line">[193038.106393] java invoked oom-killer: gfp_mask=0x14000c0(GFP_KERNEL), nodemask=(null), order=0, oom_score_adj=0</span><br><span class="line">[193038.106396] java cpuset=0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53 mems_allowed=0</span><br><span class="line">[193038.106402] CPU: 0 PID: 27424 Comm: java Tainted: G  OE    4.15.0-1037 <span class="comment">#39-Ubuntu</span></span><br><span class="line">[193038.106404] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS 090007  06/02/2017</span><br><span class="line">[193038.106405] Call Trace:</span><br><span class="line">[193038.106414]  dump_stack+0x63/0x89</span><br><span class="line">[193038.106419]  dump_header+0x71/0x285</span><br><span class="line">[193038.106422]  oom_kill_process+0x220/0x440</span><br><span class="line">[193038.106424]  out_of_memory+0x2d1/0x4f0</span><br><span class="line">[193038.106429]  mem_cgroup_out_of_memory+0x4b/0x80</span><br><span class="line">[193038.106432]  mem_cgroup_oom_synchronize+0x2e8/0x320</span><br><span class="line">[193038.106435]  ? mem_cgroup_css_online+0x40/0x40</span><br><span class="line">[193038.106437]  pagefault_out_of_memory+0x36/0x7b</span><br><span class="line">[193038.106443]  mm_fault_error+0x90/0x180</span><br><span class="line">[193038.106445]  __do_page_fault+0x4a5/0x4d0</span><br><span class="line">[193038.106448]  do_page_fault+0x2e/0xe0</span><br><span class="line">[193038.106454]  ? page_fault+0x2f/0x50</span><br><span class="line">[193038.106456]  page_fault+0x45/0x50</span><br><span class="line">[193038.106459] RIP: 0033:0x7fa053e5a20d</span><br><span class="line">[193038.106460] RSP: 002b:00007fa0060159e8 EFLAGS: 00010206</span><br><span class="line">[193038.106462] RAX: 0000000000000000 RBX: 00007fa04c4b3000 RCX: 0000000009187440</span><br><span class="line">[193038.106463] RDX: 00000000943aa440 RSI: 0000000000000000 RDI: 000000009b223000</span><br><span class="line">[193038.106464] RBP: 00007fa006015a60 R08: 0000000002000002 R09: 00007fa053d0a8a1</span><br><span class="line">[193038.106465] R10: 00007fa04c018b80 R11: 0000000000000206 R12: 0000000100000768</span><br><span class="line">[193038.106466] R13: 00007fa04c4b3000 R14: 0000000100000768 R15: 0000000010000000</span><br><span class="line">[193038.106468] Task <span class="keyword">in</span> /docker/0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53</span><br><span class="line">killed as a result of <span class="built_in">limit</span> of /docker/</span><br><span class="line">0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53</span><br><span class="line">[193038.106478] memory: usage 524288kB, <span class="built_in">limit</span> 524288kB, failcnt 77</span><br><span class="line">[193038.106480] memory+swap: usage 0kB, <span class="built_in">limit</span> 9007199254740988kB, failcnt 0</span><br><span class="line">[193038.106481] kmem: usage 3708kB, <span class="built_in">limit</span> 9007199254740988kB, failcnt 0</span><br><span class="line">[193038.106481] Memory cgroup stats <span class="keyword">for</span> /docker/0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53: cache:0KB rss:520580KB rss_huge:450560KB shmem:0KB mapped_file:0KB dirty:0KB writeback:0KB inactive_anon:0KB active_anon:520580KB inactive_file:0KB active_file:0KB unevictable:0KB</span><br><span class="line">[193038.106494] [ pid ]   uid  tgid total_vm      rss pgtables_bytes swapents oom_score_adj name</span><br><span class="line">[193038.106571] [27281]     0 27281  1153302   134371  1466368        0             0 java</span><br><span class="line">[193038.106574] Memory cgroup out of memory: Kill process 27281 (java) score 1027 or sacrifice child</span><br><span class="line">[193038.148334] Killed process 27281 (java) total-vm:4613208kB, anon-rss:517316kB, file-rss:20168kB, shmem-rss:0kB</span><br><span class="line">[193039.607503] oom_reaper: reaped process 27281 (java), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># add memory limit</span></span><br><span class="line">docker run --name tomcat --cpus 0.1 -m 512M -p 8080:8080 -itd feisky/tomcat:8</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> tomcat java -XX:+PrintFlagsFinal -version | grep HeapSize</span><br><span class="line">uintx ErgoHeapSizeLimit                         = 0                                   &#123;product&#125;</span><br><span class="line">uintx HeapSizePerGCThread                       = 87241520                            &#123;product&#125;</span><br><span class="line">uintx InitialHeapSize                          := 132120576                           &#123;product&#125;</span><br><span class="line">uintx LargePageHeapSizeThreshold                = 134217728                           &#123;product&#125;</span><br><span class="line">uintx MaxHeapSize                              := 2092957696   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># set env to limit memory</span></span><br><span class="line">docker run --name tomcat --cpus 0.1 -m 512M -e JAVA_OPTS=<span class="string">&#x27;-Xmx512m -Xms512m&#x27;</span> -p 8080:8080 -itd feisky/tomcat:8</span><br><span class="line"></span><br><span class="line"><span class="comment"># check thread </span></span><br><span class="line">PID=$(docker inspect [container_id] -f <span class="string">&#x27;&#123;&#123;.State.Pid&#125;&#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># run pidstat</span></span><br><span class="line">$ pidstat -t -p <span class="variable">$PID</span> 1</span><br><span class="line">12:59:28      UID      TGID       TID    %usr %system  %guest   %<span class="built_in">wait</span>    %CPU   CPU  Command</span><br><span class="line">12:59:29        0     29850         -   10.00    0.00    0.00    0.00   10.00     0  java</span><br><span class="line">12:59:29        0         -     29850    0.00    0.00    0.00    0.00    0.00     0  |__java</span><br><span class="line">12:59:29        0         -     29897    5.00    1.00    0.00   86.00    6.00     1  |__java</span><br><span class="line">...</span><br><span class="line">12:59:29        0         -     29905    3.00    0.00    0.00   97.00    3.00     0  |__java</span><br><span class="line">12:59:29        0         -     29906    2.00    0.00    0.00   49.00    2.00     1  |__java</span><br><span class="line">12:59:29        0         -     29908    0.00    0.00    0.00   45.00    0.00     0  |__java</span><br><span class="line"></span><br><span class="line"><span class="comment"># io_wait is high</span></span><br></pre></td></tr></table></figure><h2 id="packet-loss"><a href="#packet-loss" class="headerlink" title="packet loss"></a>packet loss</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check max connection</span></span><br><span class="line">sysctl net.netfilter.nf_conntrack_max</span><br><span class="line">net.netfilter.nf_conntrack_max = 262144</span><br><span class="line"></span><br><span class="line">sysctl net.netfilter.nf_conntrack_count</span><br><span class="line">net.netfilter.nf_conntrack_count = 182</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute in container</span></span><br><span class="line">root@nginx:/ iptables -t filter -nvL</span><br><span class="line">Chain INPUT (policy ACCEPT 25 packets, 1000 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line">    6   240 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981</span><br><span class="line"> </span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line"> </span><br><span class="line">Chain OUTPUT (policy ACCEPT 15 packets, 660 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line">    6   264 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981</span><br><span class="line"></span><br><span class="line"><span class="comment"># check MTU</span></span><br><span class="line">netstat -i</span><br><span class="line">Kernel Interface table</span><br><span class="line">Iface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg</span><br><span class="line">eth0       100      157      0    344 0            94      0      0      0 BMRU</span><br><span class="line">lo       65536        0      0      0 0             0      0      0      0 LRU</span><br></pre></td></tr></table></figure><p>During Linux startup, there are three special processes, that is, the three processes with the smallest PID numbers.</p><p>Process 0 is an idle process. This is also the first process created by the system. After initializing processes 1 and 2, it becomes an idle task. It runs when no other tasks are executing on the CPU.</p><p>Process 1 is the init process, which is usually the systemd process. It runs in user mode and is used to manage other user mode processes.</p><p>Process 2 is a kthreadd process, which runs in kernel mode and is used to manage kernel threads.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ps -f --ppid 2 -p 2</span><br><span class="line">UID         PID   PPID  C STIME TTY          TIME CMD</span><br><span class="line">root          2      0  0 12:02 ?        00:00:01 [kthreadd]</span><br><span class="line">root          9      2  0 12:02 ?        00:00:21 [ksoftirqd/0]</span><br><span class="line">root         10      2  0 12:02 ?        00:11:47 [rcu_sched]</span><br><span class="line">root         11      2  0 12:02 ?        00:00:18 [migration/0]</span><br><span class="line">...</span><br><span class="line">root      11094      2  0 14:20 ?        00:00:00 [kworker/1:0-eve]</span><br><span class="line">root      11647      2  0 14:27 ?        00:00:00 [kworker/0:2-cgr]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kernel thread names (CMD) are in square brackets []</span></span><br><span class="line">ps -ef | grep <span class="string">&quot;\[.*\]&quot;</span></span><br><span class="line">root         2     0  0 08:14 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0 08:14 ?        00:00:00 [rcu_gp]</span><br><span class="line">root         4     2  0 08:14 ?        00:00:00 [rcu_par_gp]</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># test -S: SYN  -p port, -i interval 10us</span></span><br><span class="line">hping3 -S -p 80 -i u10 192.168.0.30</span><br><span class="line"></span><br><span class="line"><span class="comment"># top</span></span><br><span class="line">top</span><br><span class="line">top - 08:31:43 up 17 min,  1 user,  load average: 0.00, 0.00, 0.02</span><br><span class="line">Tasks: 128 total,   1 running,  69 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  0.3 us,  0.3 sy,  0.0 ni, 66.8 <span class="built_in">id</span>,  0.3 wa,  0.0 hi, 32.4 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 65.2 <span class="built_in">id</span>,  0.0 wa,  0.0 hi, 34.5 si,  0.0 st</span><br><span class="line">KiB Mem :  8167040 total,  7234236 free,   358976 used,   573828 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7560460 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">    9 root      20   0       0      0      0 S   7.0  0.0   0:00.48 ksoftirqd/0</span><br><span class="line">   18 root      20   0       0      0      0 S   6.9  0.0   0:00.56 ksoftirqd/1</span><br><span class="line"> 2489 root      20   0  876896  38408  21520 S   0.3  0.5   0:01.50 docker-containe</span><br><span class="line"> 3008 root      20   0   44536   3936   3304 R   0.3  0.0   0:00.09 top</span><br><span class="line">    1 root      20   0   78116   9000   6432 S   0.0  0.1   0:11.77 systemd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check ksoftirqd pid is 9</span></span><br><span class="line">pstack 9</span><br><span class="line">Could not attach to target 9: Operation not permitted.</span><br><span class="line">detach: No such process</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/9/stack</span><br><span class="line">[&lt;0&gt;] smpboot_thread_fn+0x166/0x170</span><br><span class="line">[&lt;0&gt;] kthread+0x121/0x140</span><br><span class="line">[&lt;0&gt;] ret_from_fork+0x35/0x40</span><br><span class="line">[&lt;0&gt;] 0xffffffffffffffff</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf </span></span><br><span class="line">perf record -a -g -p 9 -- <span class="built_in">sleep</span> 30</span><br><span class="line">perf report</span><br><span class="line"></span><br><span class="line"><span class="comment"># install flamegraph</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/brendangregg/FlameGraph</span><br><span class="line"><span class="built_in">cd</span> FlameGraph</span><br><span class="line"></span><br><span class="line">perf script -i /root/perf.data | ./stackcollapse-perf.pl --all |  ./flamegraph.pl &gt; ksoftirqd.svg</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Dynamic-Tracing"><a href="#Dynamic-Tracing" class="headerlink" title="Dynamic Tracing"></a>Dynamic Tracing</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /sys/kernel/debug/tracing</span><br><span class="line"></span><br><span class="line"><span class="comment"># if not exist this directory</span></span><br><span class="line">mount -t debugfs nodev /sys/kernel/debug</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> available_tracers</span><br><span class="line">hwlat blk mmiotrace function_graph wakeup_dl wakeup_rt wakeup <span class="keyword">function</span> nop</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> available_filter_functions</span><br><span class="line"><span class="built_in">cat</span> available_events</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="built_in">echo</span> do_sys_open &gt; set_graph_function</span><br><span class="line"><span class="built_in">echo</span> function_graph &gt; current_tracer</span><br><span class="line"><span class="built_in">echo</span> funcgraph-proc &gt; trace_options</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable trace</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; tracing_on</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="comment"># disable trace</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; tracing_on</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> trace</span><br><span class="line"><span class="comment"># tracer: function_graph</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># CPU  TASK/PID         DURATION                  FUNCTION CALLS</span></span><br><span class="line"><span class="comment"># |     |    |           |   |                     |   |   |   |</span></span><br><span class="line"> 0)    ls-12276    |               |  <span class="function"><span class="title">do_sys_open</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |    <span class="function"><span class="title">getname</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |      <span class="function"><span class="title">getname_flags</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |        <span class="function"><span class="title">kmem_cache_alloc</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |          <span class="function"><span class="title">_cond_resched</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |   0.049 us    |            rcu_all_qs();</span><br><span class="line"> 0)    ls-12276    |   0.791 us    |          &#125;</span><br><span class="line"> 0)    ls-12276    |   0.041 us    |          should_failslab();</span><br><span class="line"> 0)    ls-12276    |   0.040 us    |          prefetch_freepointer();</span><br><span class="line"> 0)    ls-12276    |   0.039 us    |          memcg_kmem_put_cache();</span><br><span class="line"> 0)    ls-12276    |   2.895 us    |        &#125;</span><br><span class="line"> 0)    ls-12276    |               |        <span class="function"><span class="title">__check_object_size</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |   0.067 us    |          __virt_addr_valid();</span><br><span class="line"> 0)    ls-12276    |   0.044 us    |          __check_heap_object();</span><br><span class="line"> 0)    ls-12276    |   0.039 us    |          check_stack_object();</span><br><span class="line"> 0)    ls-12276    |   1.570 us    |        &#125;</span><br><span class="line"> 0)    ls-12276    |   5.790 us    |      &#125;</span><br><span class="line"> 0)    ls-12276    |   6.325 us    |    &#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install trace-cmd</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install trace-cmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># above 5 step simplify to follow 1 step</span></span><br><span class="line">trace-cmd record -p function_graph -g do_sys_open -O funcgraph-proc <span class="built_in">ls</span></span><br><span class="line">$ trace-cmd report</span><br><span class="line">...</span><br><span class="line">  ls-12418 [000] 85558.075341: funcgraph_entry:                   |  <span class="function"><span class="title">do_sys_open</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075363: funcgraph_entry:                   |    <span class="function"><span class="title">getname</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075364: funcgraph_entry:                   |      <span class="function"><span class="title">getname_flags</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075364: funcgraph_entry:                   |        <span class="function"><span class="title">kmem_cache_alloc</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075365: funcgraph_entry:                   |          <span class="function"><span class="title">_cond_resched</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075365: funcgraph_entry:        0.074 us   |            rcu_all_qs();</span><br><span class="line">  ls-12418 [000] 85558.075366: funcgraph_exit:         1.143 us   |          &#125;</span><br><span class="line">  ls-12418 [000] 85558.075366: funcgraph_entry:        0.064 us   |          should_failslab();</span><br><span class="line">  ls-12418 [000] 85558.075367: funcgraph_entry:        0.075 us   |          prefetch_freepointer();</span><br><span class="line">  ls-12418 [000] 85558.075368: funcgraph_entry:        0.085 us   |          memcg_kmem_put_cache();</span><br><span class="line">  ls-12418 [000] 85558.075369: funcgraph_exit:         4.447 us   |        &#125;</span><br><span class="line">  ls-12418 [000] 85558.075369: funcgraph_entry:                   |        <span class="function"><span class="title">__check_object_size</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075370: funcgraph_entry:        0.132 us   |          __virt_addr_valid();</span><br><span class="line">  ls-12418 [000] 85558.075370: funcgraph_entry:        0.093 us   |          __check_heap_object();</span><br><span class="line">  ls-12418 [000] 85558.075371: funcgraph_entry:        0.059 us   |          check_stack_object();</span><br><span class="line">  ls-12418 [000] 85558.075372: funcgraph_exit:         2.323 us   |        &#125;</span><br><span class="line">  ls-12418 [000] 85558.075372: funcgraph_exit:         8.411 us   |      &#125;</span><br><span class="line">  ls-12418 [000] 85558.075373: funcgraph_exit:         9.195 us   |    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">perf probe --add do_sys_open</span><br><span class="line">Added new event:</span><br><span class="line">  probe:do_sys_open    (on do_sys_open)</span><br><span class="line">You can now use it <span class="keyword">in</span> all perf tools, such as:</span><br><span class="line">    perf record -e probe:do_sys_open -aR <span class="built_in">sleep</span> 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perf probe -V do_sys_open</span><br><span class="line">Available variables at do_sys_open</span><br><span class="line">        @&lt;do_sys_open+0&gt;</span><br><span class="line">                char*   filename</span><br><span class="line">                int     dfd</span><br><span class="line">                int     flags</span><br><span class="line">                struct open_flags     op</span><br><span class="line">                umode_t mode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete probe</span></span><br><span class="line">perf probe --del probe:do_sys_open</span><br><span class="line"></span><br><span class="line">perf probe --add <span class="string">&#x27;do_sys_open filename:string&#x27;</span></span><br><span class="line">Added new event:</span><br><span class="line">  probe:do_sys_open    (on do_sys_open with filename:string)</span><br><span class="line">You can now use it <span class="keyword">in</span> all perf tools, such as:</span><br><span class="line">    perf record -e probe:do_sys_open -aR <span class="built_in">sleep</span> 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># run</span></span><br><span class="line">perf record -e probe:do_sys_open -aR <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># result</span></span><br><span class="line">perf script</span><br><span class="line">   perf 13593 [000] 91846.053622: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">&quot;/proc/13596/status&quot;</span></span><br><span class="line">   <span class="built_in">ls</span> 13596 [000] 91846.053995: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">&quot;/etc/ld.so.cache&quot;</span></span><br><span class="line">   <span class="built_in">ls</span> 13596 [000] 91846.054011: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">&quot;/lib/x86_64-linux-gnu/libselinux.so.1&quot;</span></span><br><span class="line">   <span class="built_in">ls</span> 13596 [000] 91846.054066: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6”</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># delete probe before leave</span></span><br><span class="line">perf probe --del probe:do_sys_open</span><br><span class="line"></span><br><span class="line"><span class="comment"># starce is based on ptrace</span></span><br><span class="line">strace <span class="built_in">ls</span></span><br><span class="line">...</span><br><span class="line">access(<span class="string">&quot;/etc/ld.so.nohwcap&quot;</span>, F_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">access(<span class="string">&quot;/etc/ld.so.preload&quot;</span>, R_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">...</span><br><span class="line">access(<span class="string">&quot;/etc/ld.so.nohwcap&quot;</span>, F_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">&quot;/lib/x86_64-linux-gnu/libselinux.so.1&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf trace is light</span></span><br><span class="line">perf trace <span class="built_in">ls</span></span><br><span class="line">         ? (         ): <span class="built_in">ls</span>/14234  ... [continued]: execve()) = 0</span><br><span class="line">     0.177 ( 0.013 ms): <span class="built_in">ls</span>/14234 brk(                                                                  ) = 0x555d96be7000</span><br><span class="line">     0.224 ( 0.014 ms): <span class="built_in">ls</span>/14234 access(filename: 0xad98082                                            ) = -1 ENOENT No such file or directory</span><br><span class="line">     0.248 ( 0.009 ms): <span class="built_in">ls</span>/14234 access(filename: 0xad9add0, mode: R                                   ) = -1 ENOENT No such file or directory</span><br><span class="line">     0.267 ( 0.012 ms): <span class="built_in">ls</span>/14234 openat(dfd: CWD, filename: 0xad98428, flags: CLOEXEC                  ) = 3</span><br><span class="line">     0.288 ( 0.009 ms): <span class="built_in">ls</span>/14234 fstat(fd: 3&lt;/usr/lib/locale/C.UTF-8/LC_NAME&gt;, statbuf: 0x7ffd2015f230 ) = 0</span><br><span class="line">     0.305 ( 0.011 ms): <span class="built_in">ls</span>/14234 mmap(len: 45560, prot: READ, flags: PRIVATE, fd: 3                    ) = 0x7efe0af92000</span><br><span class="line">     0.324 Dockerfile  test.sh</span><br><span class="line">( 0.008 ms): <span class="built_in">ls</span>/14234 close(fd: 3&lt;/usr/lib/locale/C.UTF-8/LC_NAME&gt;                          ) = 0</span><br><span class="line">     ...</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101221820.png"></p><h2 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">netstat -s | grep socket</span><br><span class="line">    73 resets received <span class="keyword">for</span> embryonic SYN_RECV sockets</span><br><span class="line">    308582 TCP sockets finished time <span class="built_in">wait</span> <span class="keyword">in</span> fast timer</span><br><span class="line">    8 delayed acks further delayed because of locked socket</span><br><span class="line">    290566 <span class="built_in">times</span> the listen queue of a socket overflowed</span><br><span class="line">    290566 SYNs to LISTEN sockets dropped</span><br><span class="line"></span><br><span class="line">ss -ltnp</span><br><span class="line">State     Recv-Q     Send-Q            Local Address:Port            Peer Address:Port</span><br><span class="line">LISTEN    10         10                      0.0.0.0:80                   0.0.0.0:*         <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">10491</span>,fd=<span class="number">6</span>),(&quot;nginx&quot;,pid=<span class="number">10490</span>,fd=<span class="number">6</span>),(&quot;nginx&quot;,pid=<span class="number">10487</span>,fd=<span class="number">6</span>))</span><br><span class="line">LISTEN    7          10                            *:9000                       *:*         <span class="built_in">users</span>:((&quot;php-fpm&quot;,pid=<span class="number">11084</span>,fd=<span class="number">9</span>),...,(&quot;php-fpm&quot;,pid=<span class="number">10529</span>,fd=<span class="number">7</span>))</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.ip_local_port_range</span><br><span class="line">net.ipv4.ip_local_port_range=20000 20050</span><br><span class="line"></span><br><span class="line">sysctl -w net.ipv4.ip_local_port_range=<span class="string">&quot;10000 65535&quot;</span></span><br><span class="line">net.ipv4.ip_local_port_range = 10000 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># timewait is still use port, can decrase timewait time or port reuse</span></span><br><span class="line">ss -s</span><br><span class="line">TCP:   32775 (estab 1, closed 32768, orphaned 0, synrecv 0, timewait 32768/0), ports 0</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_tw_reuse</span><br><span class="line">net.ipv4.tcp_tw_reuse = 0</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="monitor"><a href="#monitor" class="headerlink" title="monitor"></a>monitor</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222832.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222835.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222947.png"></p><h2 id="learn-kernel"><a href="#learn-kernel" class="headerlink" title="learn kernel"></a>learn kernel</h2><ol><li><a href="https://elixir.bootlin.com/linux/latest/source">kernel</a></li><li><a href="https://github.com/iovisor/bcc">eBPF</a></li></ol><h1 id="Additions"><a href="#Additions" class="headerlink" title="Additions"></a>Additions</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224237.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224240.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224243.png"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224245.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习笔记</title>
      <link href="/post/bigdata/"/>
      <url>/post/bigdata/</url>
      
        <content type="html"><![CDATA[<p>大数据技术主要是要解决大规模数据的计算处理问题，但是我们要想对数据进行计算，首先要解决的其实是大规模数据的存储问题。</p><span id="more"></span><h1 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h1><p>大规模数据存储都需要解决 3 个核心问题: 1.数据存储容量的问题 2.数据读写速度的问题 3.数据可靠性的问题  </p><p>RAID（独立磁盘冗余阵列）技术是将多块普通磁盘组成一个阵列，共同对外提供服务。主要是为了改善磁盘的存储容量、读写速度，增强磁盘的可用性和容错能力。目前服务器级别的计算机都支持插入多块磁盘（8 块或者更多），通过使用 RAID 技术，实现数据在多块磁盘上的并发读写和数据备份。<br>首先，我们先假设服务器有 N 块磁盘，RAID 0是数据在从内存缓冲区写入磁盘时，根据磁盘数量将数据分成 N 份，这些数据同时并发写入 N 块磁盘，使得数据整体写入速度是一块磁盘的 N 倍；读取的时候也一样，因此 RAID 0 具有极快的数据读写速度。但是 RAID 0 不做数据备份，N 块磁盘中只要有一块损坏，数据完整性就被破坏，其他磁盘的数据也都无法使用了。</p><p>RAID 1是数据在写入磁盘时，将一份数据同时写入两块磁盘，这样任何一块磁盘损坏都不会导致数据丢失，插入一块新磁盘就可以通过复制数据的方式自动修复，具有极高的可靠性。</p><p>结合 RAID 0 和 RAID 1 两种方案构成了RAID 10，它是将所有磁盘 N 平均分成两份，数据同时在两份磁盘写入，相当于 RAID 1；但是平分成两份，在每一份磁盘（也就是 N&#x2F;2 块磁盘）里面，利用 RAID 0 技术并发读写，这样既提高可靠性又改善性能。不过 RAID 10 的磁盘利用率较低，有一半的磁盘用来写备份数据。</p><p>一般情况下，一台服务器上很少出现同时损坏两块磁盘的情况，在只损坏一块磁盘的情况下，如果能利用其他磁盘的数据恢复损坏磁盘的数据，这样在保证可靠性和性能的同时，磁盘利用率也得到大幅提升。</p><p>顺着这个思路，RAID 3可以在数据写入磁盘的时候，将数据分成 N-1 份，并发写入 N-1 块磁盘，并在第 N 块磁盘记录校验数据，这样任何一块磁盘损坏（包括校验数据磁盘），都可以利用其他 N-1 块磁盘的数据修复。</p><p>但是在数据修改较多的场景中，任何磁盘数据的修改，都会导致第 N 块磁盘重写校验数据。频繁写入的后果是第 N 块磁盘比其他磁盘更容易损坏，需要频繁更换，所以 RAID 3 很少在实践中使用，因此在上面图中也就没有单独列出。</p><p>相比 RAID 3，RAID 5是使用更多的方案。RAID 5 和 RAID 3 很相似，但是校验数据不是写入第 N 块磁盘，而是螺旋式地写入所有磁盘中。这样校验数据的修改也被平均到所有磁盘上，避免 RAID 3 频繁写坏一块磁盘的情况。</p><p>如果数据需要很高的可靠性，在出现同时损坏两块磁盘的情况下（或者运维管理水平比较落后，坏了一块磁盘但是迟迟没有更换，导致又坏了一块磁盘），仍然需要修复数据，这时候可以使用RAID 6。</p><p>RAID 6 和 RAID 5 类似，但是数据只写入 N-2 块磁盘，并螺旋式地在两块磁盘中写入校验信息（使用不同算法生成）。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bigdata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Algorithm</title>
      <link href="/post/algo/"/>
      <url>/post/algo/</url>
      
        <content type="html"><![CDATA[<p>Record the learning algorithm experience.</p><span id="more"></span><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141136.jpeg"></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/FQ0LCROtEQu3iBZiJb0VBw">背包问题</a></li></ol><h1 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h1><h2 id="Reverse-Integer"><a href="#Reverse-Integer" class="headerlink" title="Reverse Integer"></a>Reverse Integer</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="comment">//math.MinInt32 = -2147483648</span></span><br><span class="line">    <span class="comment">//math.MaxInt32 = 2147483647</span></span><br><span class="line">    <span class="keyword">var</span> result <span class="type">int</span></span><br><span class="line">    <span class="keyword">for</span> x!=<span class="number">0</span>&#123;</span><br><span class="line">        result=result*<span class="number">10</span>+x%<span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> result &gt; <span class="number">2147483647</span>  || result &lt; <span class="number">-2147483648</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        x/=<span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Evolving-Diﬃculty"><a href="#Evolving-Diﬃculty" class="headerlink" title="Evolving Diﬃculty"></a>Evolving Diﬃculty</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200830103637.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brute force O(n2)</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">test = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(test):</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    a = [<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">input</span>().split()]</span><br><span class="line">    begin = time.time()</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>, n-<span class="number">1</span>):</span><br><span class="line">            result += (a[i]*a[j]*<span class="built_in">sum</span>(a[j+<span class="number">1</span>:]))</span><br><span class="line"></span><br><span class="line">    end = time.time()</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;time is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(end - begin))</span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="number">4536</span></span><br><span class="line">time <span class="keyword">is</span> <span class="number">3.0994415283203125e-05</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arithmetic O(n)</span></span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"></span><br><span class="line">test = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(test):</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    a = [<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">input</span>().split()]</span><br><span class="line">    begin = time.time()</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    sumai = a[<span class="number">0</span>] + a[<span class="number">1</span>]</span><br><span class="line">    sumai2 = a[<span class="number">0</span>]**<span class="number">2</span> + a[<span class="number">1</span>]**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n):</span><br><span class="line">        aiaj = (sumai**<span class="number">2</span> - sumai2) // <span class="number">2</span></span><br><span class="line">        result += aiaj*a[k]</span><br><span class="line">        sumai += a[k]</span><br><span class="line">        sumai2 += a[k]**<span class="number">2</span></span><br><span class="line">    end = time.time()</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;time is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(end - begin))</span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="number">4536</span></span><br><span class="line">time <span class="keyword">is</span> <span class="number">2.1219253540039062e-05</span></span><br></pre></td></tr></table></figure><h1 id="quickSort"><a href="#quickSort" class="headerlink" title="quickSort"></a>quickSort</h1><h2 id="Based-on-recursive"><a href="#Based-on-recursive" class="headerlink" title="Based on recursive"></a>Based on recursive</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(arr []<span class="type">int</span>, startIndex, endIndex <span class="type">int</span> )</span></span>  &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> startIndex &gt;= endIndex &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">pivotIndex:= partition(arr,startIndex,endIndex)</span><br><span class="line">quickSort(arr,startIndex,pivotIndex<span class="number">-1</span>)</span><br><span class="line">quickSort(arr,pivotIndex+<span class="number">1</span>,endIndex)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(arr []<span class="type">int</span>, startIndex, endIndex <span class="type">int</span> )</span></span>  <span class="type">int</span> &#123;</span><br><span class="line"></span><br><span class="line">pivot:=arr[startIndex]</span><br><span class="line">mark:=startIndex</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=startIndex+<span class="number">1</span>; i&lt;= endIndex; i++&#123;</span><br><span class="line"><span class="keyword">if</span> arr[i]&lt;pivot &#123;</span><br><span class="line">mark++    <span class="comment">//  numbers that smaller pivot ++</span></span><br><span class="line">arr[i],arr[mark] = arr[mark], arr[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[startIndex] = arr [mark]</span><br><span class="line">arr[mark] = pivot</span><br><span class="line"><span class="keyword">return</span> mark</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = []<span class="type">int</span>&#123;<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">1</span>&#125;</span><br><span class="line">quickSort(arr,<span class="number">0</span>, <span class="built_in">len</span>(arr)<span class="number">-1</span>)</span><br><span class="line">fmt.Print(arr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Use-stack"><a href="#Use-stack" class="headerlink" title="Use stack"></a>Use stack</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/golang-collections/collections/stack&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(arr []<span class="type">int</span>, startIndex, endIndex <span class="type">int</span> )</span></span>  &#123;</span><br><span class="line"></span><br><span class="line">quickSortStack := stack.New()</span><br><span class="line">rootParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">rootParam[<span class="string">&quot;startIndex&quot;</span>] = startIndex</span><br><span class="line">rootParam[<span class="string">&quot;endIndex&quot;</span>] = endIndex</span><br><span class="line">quickSortStack.Push(rootParam)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> quickSortStack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line"></span><br><span class="line">param := quickSortStack.Pop().(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">pivotIndex := partition(arr, param[<span class="string">&quot;startIndex&quot;</span>], param[<span class="string">&quot;endIndex&quot;</span>] )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> param[<span class="string">&quot;startIndex&quot;</span>] &lt; pivotIndex<span class="number">-1</span> &#123;</span><br><span class="line">leftParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">leftParam[<span class="string">&quot;startIndex&quot;</span>] = param[<span class="string">&quot;startIndex&quot;</span>]</span><br><span class="line">leftParam[<span class="string">&quot;endIndex&quot;</span>] = pivotIndex<span class="number">-1</span></span><br><span class="line">quickSortStack.Push(leftParam)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> pivotIndex+<span class="number">1</span> &lt; param[<span class="string">&quot;endIndex&quot;</span>] &#123;</span><br><span class="line"></span><br><span class="line">rightParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">rightParam[<span class="string">&quot;startIndex&quot;</span>] = pivotIndex+<span class="number">1</span></span><br><span class="line">rightParam[<span class="string">&quot;endIndex&quot;</span>] = param[<span class="string">&quot;endIndex&quot;</span>]</span><br><span class="line">quickSortStack.Push(rightParam)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(arr []<span class="type">int</span>, startIndex, endIndex <span class="type">int</span> )</span></span>  <span class="type">int</span> &#123;</span><br><span class="line"></span><br><span class="line">pivot:=arr[startIndex]</span><br><span class="line">mark:=startIndex</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=startIndex+<span class="number">1</span>; i&lt;= endIndex; i++&#123;</span><br><span class="line"><span class="keyword">if</span> arr[i]&lt;pivot &#123;</span><br><span class="line">mark++    <span class="comment">//  smaller pivot numbers ++</span></span><br><span class="line">arr[i],arr[mark] = arr[mark], arr[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[startIndex] = arr [mark]</span><br><span class="line">arr[mark] = pivot</span><br><span class="line"><span class="keyword">return</span> mark</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = []<span class="type">int</span>&#123;<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">1</span>&#125;</span><br><span class="line">quickSort(arr,<span class="number">0</span>, <span class="built_in">len</span>(arr)<span class="number">-1</span>)</span><br><span class="line">fmt.Print(arr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Hash-Table"><a href="#Hash-Table" class="headerlink" title="Hash Table"></a>Hash Table</h1><h2 id="Two-Sum"><a href="#Two-Sum" class="headerlink" title="Two Sum"></a>Two Sum</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(nums []<span class="type">int</span>, target <span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    </span><br><span class="line">    dic := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>)</span><br><span class="line">    <span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">        </span><br><span class="line">        k,ok := dic[target-v]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ok &#123;</span><br><span class="line">            <span class="keyword">return</span> []<span class="type">int</span>&#123;k, i&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dic[v]=i     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="least-recently-used"><a href="#least-recently-used" class="headerlink" title="least recently used"></a>least recently used</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Your LRUCache object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"># obj = LRUCache(capacity)</span></span><br><span class="line"><span class="comment"># param_1 = obj.get(key)</span></span><br><span class="line"><span class="comment"># obj.put(key,value)</span></span><br><span class="line"><span class="comment"># leetcode 146</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DoubleNode</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, key, val, pre=<span class="literal">None</span>, <span class="built_in">next</span>=<span class="literal">None</span></span>):</span><br><span class="line">        self.key = key</span><br><span class="line">        self.val = val</span><br><span class="line">        self.pre = pre</span><br><span class="line">        self.<span class="built_in">next</span> = <span class="built_in">next</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LRUCache</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, capacity: <span class="built_in">int</span></span>):</span><br><span class="line">        self._capacity = capacity</span><br><span class="line">        self._index = &#123;&#125;</span><br><span class="line">        self._head = DoubleNode(-<span class="number">1</span>, -<span class="number">1</span>, <span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">        </span><br><span class="line">        cur = self._head</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, capacity):</span><br><span class="line">            cur.<span class="built_in">next</span> = DoubleNode(-<span class="number">1</span>, -<span class="number">1</span>, cur)</span><br><span class="line">            cur = cur.<span class="built_in">next</span></span><br><span class="line">        cur.<span class="built_in">next</span> = self._head</span><br><span class="line">        self._head.pre = cur</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_to_head</span>(<span class="params">self, cur</span>):</span><br><span class="line">        <span class="keyword">if</span> cur == self._head:</span><br><span class="line">            self._head = self._head.pre</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cur.pre.<span class="built_in">next</span> = cur.<span class="built_in">next</span></span><br><span class="line">        cur.<span class="built_in">next</span>.pre = cur.pre</span><br><span class="line">        <span class="comment"># attach to head pointer</span></span><br><span class="line">        cur.<span class="built_in">next</span> = self._head.<span class="built_in">next</span></span><br><span class="line">        cur.<span class="built_in">next</span>.pre = cur</span><br><span class="line">        self._head.<span class="built_in">next</span> = cur</span><br><span class="line">        cur.pre = self._head</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self, key: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        cur = self._index.get(key, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cur:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.move_to_head(cur)</span><br><span class="line">            <span class="keyword">return</span> cur.val</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">put</span>(<span class="params">self, key: <span class="built_in">int</span>, value: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">if</span> self._index.get(key, <span class="literal">None</span>):</span><br><span class="line">            cur = self._index[key]</span><br><span class="line">            cur.val = value</span><br><span class="line">            self.move_to_head(cur)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> self._head.val != -<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">del</span>(self._index[self._head.key])</span><br><span class="line">            </span><br><span class="line">            self. _head.key = key</span><br><span class="line">            self._head.val = value</span><br><span class="line">            self._index[key] = self._head</span><br><span class="line">            self._head = self._head.pre</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Leetcode"><a href="#Leetcode" class="headerlink" title="Leetcode"></a>Leetcode</h1><h2 id="Longest-Palindromic-Substring"><a href="#Longest-Palindromic-Substring" class="headerlink" title="Longest Palindromic Substring"></a>Longest Palindromic Substring</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># leetcode 5  Longest Palindromic Substring</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_expand</span>(<span class="params">self, s: <span class="built_in">str</span>, left: <span class="built_in">int</span>, right: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">while</span> left &gt;= <span class="number">0</span> <span class="keyword">and</span> right &lt; <span class="built_in">len</span>(s) <span class="keyword">and</span> s[left] == s[right] :</span><br><span class="line">            left -= <span class="number">1</span></span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> right - left - <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestPalindrome</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">if</span>  s <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> <span class="built_in">len</span>(s) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        start = <span class="number">0</span></span><br><span class="line">        maxLen = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">            len1 = self._expand(s, i, i)</span><br><span class="line">            len2 = self._expand(s, i, i+<span class="number">1</span>)</span><br><span class="line">            length = <span class="built_in">max</span>(len1, len2)</span><br><span class="line">            <span class="keyword">if</span> length &gt; maxLen:</span><br><span class="line">                start = i - (length-<span class="number">1</span>)//<span class="number">2</span></span><br><span class="line">                maxLen = length</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> s[start:start+maxLen]</span><br></pre></td></tr></table></figure><h2 id="Palindrome-Linked-List"><a href="#Palindrome-Linked-List" class="headerlink" title="Palindrome Linked List"></a>Palindrome Linked List</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, next=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.next = next</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isPalindrome</span>(<span class="params">self, head: ListNode</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        length = <span class="number">0</span></span><br><span class="line">        p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">None</span>:</span><br><span class="line">            length += <span class="number">1</span></span><br><span class="line">            p = p.<span class="built_in">next</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># get length of link</span></span><br><span class="line">        </span><br><span class="line">        cur = head</span><br><span class="line">        pre = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length//<span class="number">2</span>):</span><br><span class="line">            nex = cur.<span class="built_in">next</span></span><br><span class="line">            cur.<span class="built_in">next</span> = pre</span><br><span class="line">            pre = cur</span><br><span class="line">            cur = nex</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># even need goback 1 seat</span></span><br><span class="line">        <span class="keyword">if</span> length % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            cur = cur.<span class="built_in">next</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> pre != <span class="literal">None</span> <span class="keyword">and</span> cur != <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> pre.val != cur.val:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">            pre = pre.<span class="built_in">next</span></span><br><span class="line">            cur = cur.<span class="built_in">next</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="Median-of-Two-Sorted-Arrays"><a href="#Median-of-Two-Sorted-Arrays" class="headerlink" title="Median of Two Sorted Arrays"></a>Median of Two Sorted Arrays</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="comment"># 分奇 偶情况来找到第 K 小的数字</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findMedianSortedArrays</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        total = <span class="built_in">len</span>(nums1) + <span class="built_in">len</span>(nums2)</span><br><span class="line">        <span class="keyword">if</span> total &amp; <span class="number">1</span> == <span class="number">1</span>: <span class="comment"># 按位与来判断奇偶性</span></span><br><span class="line">            <span class="keyword">return</span> self.find(nums1, nums2, total//<span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = self.find(nums1, nums2, total//<span class="number">2</span>)</span><br><span class="line">            b = self.find(nums1, nums2, total//<span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> (a+b) / <span class="number">2</span></span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        len1 = <span class="built_in">len</span>(nums1)</span><br><span class="line">        len2 = <span class="built_in">len</span>(nums2)</span><br><span class="line">        base1 = <span class="number">0</span> <span class="comment"># 用 base 来增加偏移量，避免重复创建新的数组，节约空间</span></span><br><span class="line">        base2 = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> len1 == <span class="number">0</span>: <span class="keyword">return</span> nums2[base2 + k - <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> len2 == <span class="number">0</span>: <span class="keyword">return</span> nums1[base1 + k - <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> k == <span class="number">1</span>: <span class="keyword">return</span> <span class="built_in">min</span>(nums1[base1], nums2[base2])</span><br><span class="line">            </span><br><span class="line">            i = <span class="built_in">min</span>(k//<span class="number">2</span>, len1)</span><br><span class="line">            j = <span class="built_in">min</span>(k-i, len2)</span><br><span class="line">            a = nums1[base1 + i - <span class="number">1</span>]</span><br><span class="line">            b = nums2[base2 + j - <span class="number">1</span>]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> i+j == k <span class="keyword">and</span> a == b: <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里 a == b 判断了两次，是因为 i+j&lt;k, 第 k 小的数不在这两个部分，都可以排除</span></span><br><span class="line">            <span class="keyword">if</span> a &lt;=b:</span><br><span class="line">                base1 += i</span><br><span class="line">                len1 -= i</span><br><span class="line">                k -= i</span><br><span class="line">            <span class="keyword">if</span> a &gt;= b:</span><br><span class="line">                base2 += j</span><br><span class="line">                len2 -= j</span><br><span class="line">                k -= j</span><br><span class="line">                </span><br></pre></td></tr></table></figure><h2 id="Longest-Substring-Without-Repeating-Characters"><a href="#Longest-Substring-Without-Repeating-Characters" class="headerlink" title="Longest Substring Without Repeating Characters"></a>Longest Substring Without Repeating Characters</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lengthOfLongestSubstring</span>(<span class="params">self, s</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int abcabcbb</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(s) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        seen = &#123;&#125;</span><br><span class="line">        left, right = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        longest = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> right &lt; <span class="built_in">len</span>(s):</span><br><span class="line">            <span class="keyword">if</span> s[right] <span class="keyword">in</span> seen:</span><br><span class="line">                left = <span class="built_in">max</span>(left,seen[s[right]]+<span class="number">1</span>)</span><br><span class="line">            longest = <span class="built_in">max</span>(longest, right - left + <span class="number">1</span>)</span><br><span class="line">            seen[s[right]] = right</span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> longest</span><br></pre></td></tr></table></figure><h2 id="Regular-Expression-Matching"><a href="#Regular-Expression-Matching" class="headerlink" title="Regular Expression Matching"></a>Regular Expression Matching</h2>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 学习笔记</title>
      <link href="/post/golang/"/>
      <url>/post/golang/</url>
      
        <content type="html"><![CDATA[<p>本文初始化于 2019-11-11 02:12:12，深夜开启学习 golang 的道路。</p><span id="more"></span> <h1 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h1><p>2021 年 06 月 26 日 - 更新 go 语言中文网<br>2021 年 06 月 20 日 - 如今是 go 1.16 了， go module 是主流<br>2021 年 06 月 19 日 - 更新 库源码文件</p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><p>go 是静态类型的语言，入门推荐<a href="https://tour.go-zh.org/list">Go 编程语言指南</a><br>还有一个极客时间的课程<a href="https://github.com/hyper0x/Golang_Puzzlers/blob/master/mapping_table.md">示例代码</a></p><p>社区推荐：<a href="https://studygolang.com/">go 语言中文网</a> </p><p>教学视频：只推荐目前比较新的 go1.14: <a href="https://www.bilibili.com/video/BV1gf4y1r79E?p=8&share_source=copy_web">8小时转职Golang工程师</a><br>入门 <a href="https://www.liwenzhou.com/posts/Go/go_menu/">Go语言学习之路&#x2F;Go语言教程</a></p><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><ul><li><a href="https://github.com/studygolang/studygolang">论坛搭建</a></li><li><a href="https://mp.weixin.qq.com/s/v_wonIeuxQWT_qPTGv7GIw">推荐三个Go实战开源项目</a></li></ul><h2 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h2><ol><li><a href="https://mp.weixin.qq.com/s/rthJS8M5_6ttQ-O2Av2UIQ">runtime</a></li><li><a href="https://mp.weixin.qq.com/s/A_g6X7kdoPSx7MX0fxTYzw">Go并发编程-runtime包</a></li><li><a href="https://mp.weixin.qq.com/s/DPHGRK1Cq7iIDOnqzoNueQ">Go 语言 50 个技巧</a></li><li><a href="https://mp.weixin.qq.com/s/RkuWRSn27PS3WwHWKrIi3Q">并发与并行</a></li><li><a href="https://tomotoes.com/blog/the-top-10-most-common-mistakes-ive-seen-in-go-projects/">The Top 10 Most Common Mistakes I’ve Seen in Go Projects</a></li></ol><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="工作区和GOPATH"><a href="#工作区和GOPATH" class="headerlink" title="工作区和GOPATH"></a>工作区和GOPATH</h2><p>GOPATH 已经被弃用，现在官方推荐 Go Modules ， 但因为有的老项目没有启用 go modules , 所以还是有必要学习一下历史的行程</p><ul><li><a href="https://segmentfault.com/a/1190000021854441">煎鱼 Go Modules指南</a></li><li>因为 GOPATH 模式下没有版本控制的概念， 所以被弃用</li><li>Go Modules 下，GOPATH 还是存在，新建的项目可以在 $GOPATH 外任意地方。</li><li>Go Modules 优势： 一是依赖包的版本控制，而是集中管理包，go mod download 下载的包统一存放在<a href="https://golang.org/ref/mod#glos-module-cache">module cache</a>, located in GOPATH&#x2F;pkg&#x2F;mod.</li></ul><h3 id="GOROOT-GOPATH-已过时"><a href="#GOROOT-GOPATH-已过时" class="headerlink" title="GOROOT (GOPATH 已过时)"></a>GOROOT (GOPATH 已过时)</h3><ol><li>GOROOT：Go 语言安装根目录的路径，也就是 GO 语言的安装路径。 </li><li>GOPATH：若干工作区目录的路径。是我们自己定义的工作空间。 <a href="https://golang.org/doc/code.html#GOPATH">官方解释</a></li><li>GOBIN：GO 程序生成的可执行文件（executable file）的路径。</li></ol><p><img src="/img/misc/7.jpg"><br>注意，环境变量 GOPATH 中包含的路径不能与环境变量 GOROOT 的值重复。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  go_entrytask git:(master) ✗ <span class="built_in">env</span> | grep GO  </span><br><span class="line">GOPROXY=direct</span><br><span class="line">GOPATH=/Users/yang.fei/go</span><br><span class="line">GOROOT=/usr/local/Cellar/go/1.16/libexec</span><br><span class="line">GO111MODULE=on</span><br></pre></td></tr></table></figure><blockquote><p>面试问题是：你知道设置 GOPATH 有什么意义吗？</p></blockquote><p>你可以把 GOPATH 简单理解成 Go 语言的工作目录，它的值是一个目录的路径，也可以是多个目录路径，每个目录都代表 Go 语言的一个工作区（workspace）。我们需要利于这些工作区，去放置 Go 语言的源码文件（source file），以及安装（install）后的归档文件（archive file，也就是以“.a”为扩展名的文件）和可执行文件（executable file）。</p><p><img src="/img/misc/gopath.png"> </p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="go-build"><a href="#go-build" class="headerlink" title="go build"></a>go build</h4><ul><li>go build  在运行go build命令的时候，默认不会编译目标代码包所依赖的那些代码包。如果要强制编译它们，可以在执行命令的时候加入标记-a。此时，不但目标代码包总是会被编译，它依赖的代码包也总会被编译，即使依赖的是标准库中的代码包也是如此。另外，如果不但要编译依赖的代码包，还要安装它们的归档文件，那么可以加入标记-i。<br>那么我们怎么确定哪些代码包被编译了呢？有两种方法。</li></ul><ol><li>运行go build命令时加入标记-x，这样可以看到go build命令具体都执行了哪些操作。另外也可以加入标记-n，这样可以只查看具体操作而不执行它们。</li><li>运行go build命令时加入标记-v，这样可以看到go build命令编译的代码包的名称。它在与-a标记搭配使用时很有用。</li></ol><h4 id="go-get"><a href="#go-get" class="headerlink" title="go get"></a>go get</h4><p>go get 命令go get会自动从一些主流公用代码仓库（比如 GitHub）下载目标代码包，并把它们安装到环境变量GOPATH包含的第 1 工作区的相应目录中。如果存在环境变量GOBIN，那么仅包含命令源码文件的代码包会被安装到GOBIN指向的那个目录。<br>最常用的几个标记有下面几种。</p><ul><li>-u：下载并安装代码包，不论工作区中是否已存在它们。</li><li>-d：只下载代码包，不安装代码包。</li><li>-fix：在下载代码包后先运行一个用于根据当前 Go 语言版本修正代码的工具，然后再安装代码包。</li><li>-t：同时下载测试所需的代码包。</li><li>-insecure：允许通过非安全的网络协议下载和安装代码包。HTTP 就是这样的协议。</li></ul><p>Go 语言官方提供的go get命令是比较基础的，其中并没有提供依赖管理的功能。对代码包的远程导入路径进行自定义的方法是：在该代码包中的库源码文件的包声明语句的右边加入导入注释，像这样：</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> semaphore <span class="comment">// import &quot;golang.org/x/sync/semaphore&quot;</span></span><br></pre></td></tr></table></figure><p>这个代码包原本的完整导入路径是github.com&#x2F;golang&#x2F;sync&#x2F;semaphore。这与实际存储它的网络地址对应的。该代码包的源码实际存在 GitHub 网站的 golang 组的 sync 代码仓库的 semaphore 目录下。而加入导入注释之后，用以下命令即可下载并安装该代码包了：</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get golang.org/x/sync/semaphore</span><br></pre></td></tr></table></figure><p>而 Go 语言官网 golang.org 下的路径 &#x2F;x&#x2F;sync&#x2F;semaphore 并不是存放semaphore包的真实地址。我们称之为代码包的自定义导入路径。不过，这还需要在 golang.org 这个域名背后的服务端程序上，添加一些支持才能使这条命令成功。<br>关于自定义代码包导入路径的完整说明可以<a href="https://github.com/hyper0x/go_command_tutorial/blob/master/0.3.md">参看这里</a>。</p><h4 id="go-install"><a href="#go-install" class="headerlink" title="go install"></a>go install</h4><p>go install : 我们在构建或者安装这个代码包的时候，提供给go命令的路径应该是目录的相对路径，就像这样：</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> install puzzlers/article3/q2/lib </span><br></pre></td></tr></table></figure><p>安装后的目录如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  Golang_Puzzlers git:(master) ✗ tree pkg </span><br><span class="line">pkg</span><br><span class="line">`-- darwin_amd64</span><br><span class="line">    `-- puzzlers</span><br><span class="line">        `-- article3</span><br><span class="line">            `-- q2</span><br><span class="line">                `-- lib.a</span><br><span class="line"></span><br><span class="line">4 directories, 1 file</span><br></pre></td></tr></table></figure><h4 id="get-vs-install"><a href="#get-vs-install" class="headerlink" title="get vs install"></a>get vs install</h4><p><a href="https://stackoverflow.com/questions/24878737/what-is-the-difference-between-go-get-and-go-install">What is the difference between go get and go install?</a><br><code>go get</code> does two main things in this order:</p><ul><li>downloads and saves in <code>$GOPATH/src/&lt;import-path&gt;</code> the packages (source code) named in the import paths, along with their dependencies, then</li><li>executes a <code>go install</code></li></ul><p><code>go get -d</code> 只下载不安装。 那面 <code>go install</code> 存在的意义，是当需要测试本地的 packages 时，就直接安装</p><p>Go 1.16 has updated and clarified the usage of go install and go get: <a href="https://tip.golang.org/doc/go1.16#modules">https://tip.golang.org/doc/go1.16#modules</a></p><ul><li><code>go install</code>, with or without a version suffix (as described above), is now the <strong>recommended</strong> way to build and install packages in module mode. </li><li><code>go get</code> should be used with the -d flag to adjust the current module’s dependencies without building packages, and use of go get to build and install packages is deprecated. In a future release, the -d flag will always be enabled.</li></ul><h3 id="命令源码文件"><a href="#命令源码文件" class="headerlink" title="命令源码文件"></a>命令源码文件</h3><p>其实就是你自己写的代码</p><p>命令源码文件是程序的运行入口，是每个可独立运行的程序必须拥有的。我们可以通过构建或安装，生成与其对应的可执行文件，后者一般会与该命令源码文件的直接父目录同名。<br>如果一个源码文件声明属于main包，并且包含一个 无参数声明 且无结果声明 的main函数，那么它就是命令源码文件。<br>在同一个目录下的源码文件都需要被声明为属于同一个代码包。源码文件声明的包名可以与其所在目录的名称不同，只要这些文件声明的包名一致就可以。</p><h3 id="库源码文件"><a href="#库源码文件" class="headerlink" title="库源码文件"></a>库源码文件</h3><p>类似 python 的包</p><p>库源码文件是不能被直接运行的源码文件，它仅用于存放程序实体，这些程序实体可以被其他代码使用（只要遵从 Go 语言规范的话）。<br>第一条规则，同目录下的源码文件的代码包声明语句要一致。也就是说，它们要同属于一个代码包。这对于所有源码文件都是适用的。如果目录中有命令源码文件，那么其他种类的源码文件也应该声明属于main包。这也是我们能够成功构建和运行它们的前提。  </p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">➜  q1 git:(master) ✗ cat demo4.<span class="keyword">go</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">&quot;flag&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">        flag.StringVar(&amp;name, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;everyone&quot;</span>, <span class="string">&quot;The greeting object.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        flag.Parse()</span><br><span class="line">        hello(name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// go run demo4.go demo4_lib.go</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">➜  q1 git:(master) ✗ cat demo4_lib.<span class="keyword">go</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">(name <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Hello, %s!\n&quot;</span>, name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">➜  q1 git:(master) ✗ <span class="keyword">go</span> run demo4.<span class="keyword">go</span> demo4_lib.<span class="keyword">go</span>                                        </span><br><span class="line">Hello, everyone!</span><br></pre></td></tr></table></figure><p>第二条规则，源码文件声明的代码包的名称可以与其所在的目录的名称不同。在针对代码包进行构建时，生成的结果文件的主名称与其父目录的名称一致。对于命令源码文件而言，构建生成的可执行文件的主名称会与其父目录的名称相同。</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">➜  q2 git:(master) ✗ cat demo5.<span class="keyword">go</span>                                                                                                </span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">&quot;flag&quot;</span></span><br><span class="line">        <span class="string">&quot;puzzlers/article3/q2/lib&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">        flag.StringVar(&amp;name, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;everyone&quot;</span>, <span class="string">&quot;The greeting object.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        flag.Parse()</span><br><span class="line">        lib.Hello(name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>名称的首字母为大写的程序实体才可以被当前包外的代码引用，否则它就只能被当前包内的其他代码引用。</li><li>通过名称，Go 语言自然地把程序实体的访问权限划分为了包级私有的和公开的。对于包级私有的程序实体，即使你导入了它所在的代码包也无法引用到它。</li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  q2 git:(master) ✗ cat lib/demo5_lib.<span class="keyword">go</span>                                                                                                                                                                            </span><br><span class="line"><span class="keyword">package</span> lib</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Hello</span><span class="params">(name <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Hello, %s!\n&quot;</span>, name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Go 1.5 及后续版本中，我们可以通过创建internal代码包让一些程序实体仅仅能被当前模块中的其他代码引用。这被称为 Go 程序实体的第三种访问权限：模块级私有。具体规则是，internal代码包中声明的公开程序实体仅能被该代码包的直接父包及其子包中的代码引用。当然，引用前需要先导入这个internal包。对于其他代码包，导入该internal包都是非法的，无法通过编译。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  q4 git:(master) ✗ tree .</span><br><span class="line">.</span><br><span class="line">|-- demo6.go</span><br><span class="line">`-- lib</span><br><span class="line">    |-- demo6_lib.go</span><br><span class="line">    `-- internal</span><br><span class="line">        `-- internal.go</span><br><span class="line"></span><br><span class="line">2 directories, 3 files</span><br></pre></td></tr></table></figure><p>demo6.go 只能调用 demo6_lib.go ， 而  demo6_lib.go 能调用 internal.go 。但是 demo6.go 不能直接调用 internal.go， 因为不是直接父级</p><h2 id="Go-Modues-推荐"><a href="#Go-Modues-推荐" class="headerlink" title="Go Modues (推荐)"></a>Go Modues (推荐)</h2><ul><li><a href="https://segmentfault.com/a/1190000021854441">Go Modules 终极入门</a></li><li><a href="https://studygolang.com/articles/28177">一起弄明白go的依赖管理 Go Modues&#x2F; GOPATH</a></li><li><a href="https://insujang.github.io/2020-04-04/go-modules/">Go Modules: an Alternative to GOPATH for Package Distribution</a></li><li><a href="https://segmentfault.com/q/1010000022718982">Go Module 和 GOPATH 模式之间的区别？</a></li><li><a href="https://mp.weixin.qq.com/s/JJYpPD4vgn_Hbfxo3R0bXQ">Go Modules的前世今生与基本使用</a></li></ul><p>下图是实际的 go module 结构<br><img src="/img/misc/gomodule.png"> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">go mod init      <span class="comment">#初始化当前目录为模块根目录，生成go.mod, go.sum文件</span></span><br><span class="line">go mod download  <span class="comment">#下载依赖包</span></span><br><span class="line">go mod tidy      <span class="comment">#整理检查依赖，如果缺失包会下载或者引用的不需要的包会删除</span></span><br><span class="line">go mod vendor    <span class="comment">#复制依赖到vendor目录下面</span></span><br><span class="line">go mod           <span class="comment">#可看完整所有的命令</span></span><br><span class="line">go mod graph     <span class="comment">#以文本模式打印模块需求图</span></span><br><span class="line">go mod verify    <span class="comment">#验证依赖是否正确</span></span><br><span class="line">go mod edit      <span class="comment">#编辑go.mod文件</span></span><br><span class="line"></span><br><span class="line">go list -m all   <span class="comment">#显示依赖关系。</span></span><br><span class="line">go list -m -json all  <span class="comment">#显示详细依赖关系。</span></span><br><span class="line">go list -m -versions &lt;path&gt;  <span class="comment">#显示包有哪些已发布版本</span></span><br></pre></td></tr></table></figure><h3 id="go-mod"><a href="#go-mod" class="headerlink" title="go.mod"></a>go.mod</h3><p>go.mod 提供了 <code>module</code>, <code>require</code>、<code>replace</code> 和 <code>exclude</code> 四个命令</p><ul><li>module 语句指定包的名字（路径）</li><li>require 语句指定的依赖项模块</li><li>replace 语句可以替换依赖项模块</li><li>exclude 语句可以忽略依赖项模块</li></ul><h3 id="go-sum"><a href="#go-sum" class="headerlink" title="go.sum"></a>go.sum</h3><p>go.sum 的每一行都是一个条目，大致是这样的格式：  </p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;module&gt; &lt;version&gt;/<span class="keyword">go</span>.mod &lt;hash&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line">&lt;module&gt; &lt;version&gt; &lt;hash&gt;</span><br><span class="line">&lt;module&gt; &lt;version&gt;/<span class="keyword">go</span>.mod &lt;hash&gt;</span><br></pre></td></tr></table></figure><p>备注：其中module是依赖的路径，version是依赖的版本号。hash是以h1:开头的字符串，表示生成checksum的算法是第一版的hash算法（sha256）</p><ul><li>项目没有打 tag，会生成一个版本号，格式如下：v0.0.0-commit日期-commitID 引用一个项目的特定分支，比如 develop branch，也会生成类似的版本号：v当前版本+1-commit日期-commitID</li><li>项目有用到 go module，那么就是正常地用 tag 来作为版本号。如果项目打了 tag，但是没有用到 go module，为了跟用了 go module 的项目相区别，需要加个 + incompatible 的标志。比如: <module>+<version>+incompatible&#x2F;go.mod+<hash></li><li>对于使用了 v2+ go module 的项目，项目路径会有个版本号的后缀。比如： &lt;module&#x2F;v2&gt;+<version> + <hash></li></ul><h3 id="Migration"><a href="#Migration" class="headerlink" title="Migration"></a>Migration</h3><p><a href="https://blog.golang.org/migrating-to-go-modules">Migrating to Go Modules</a></p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p><a href="https://yourbasic.org/golang/three-dots-ellipsis/">Go 三个点(…)用法</a></p><h2 id="数组-array"><a href="#数组-array" class="headerlink" title="数组 array"></a>数组 array</h2><p>数组是连续存储在内存中的，每一个切片的底层实现都是绑定着一个数组。当切面的值改变时，底层数组也会跟着改变。当切片的 capacity 增大超过当前数组长度时，go 会自动产生一个新的底层数组，长度为以前的 2 倍，然后再绑定到切片上。当切片 capacity 大于 1000 时，底层数组的增长因子就会有 2 变为 1.25。数组的容量永远等于其长度，都是不可变的。<br>数组类型的值（以下简称数组）的长度是固定的，而切片类型的值（以下简称切片）是可变长的。</p><h2 id="切片-slice"><a href="#切片-slice" class="headerlink" title="切片 slice"></a>切片 slice</h2><p>Go 语言的切片类型属于引用类型，同属引用类型的还有字典类型、通道类型、函数类型等；而 Go 语言的数组类型则属于值类型，同属值类型的有基础数据类型以及结构体类型。<br>注意，Go 语言里不存在像 Java 等编程语言中令人困惑的“传值或传引用”问题。在 Go 语言中，我们判断所谓的“传值”或者“传引用”只要看被传递的值的类型就好了。<br>如果传递的值是引用类型的，那么就是“传引用”。如果传递的值是值类型的，那么就是“传值”。从传递成本的角度讲，引用类型的值往往要比值类型的值低很多。<br>我们在数组和切片之上都可以应用索引表达式，得到的都会是某个元素。我们在它们之上也都可以应用切片表达式，也都会得到一个新的切片。切片的容量却不是这样，并且它的变化是有规律可寻的。用make函数初始化切片时，如果不指明其容量，那么它就会和长度一致。如果在初始化时指明了容量，那么切片的实际容量也就是它了。 切片代表的窗口是无法向左扩展的。<br>slice :&#x3D; make([]int, len, cap)</p><h2 id="字典的操作和约束"><a href="#字典的操作和约束" class="headerlink" title="字典的操作和约束"></a>字典的操作和约束</h2><p>Go 语言的字典类型其实是一个哈希表（hash table）的特定实现，在这个实现中，键和元素的最大不同在于，键的类型是受限的，而元素却可以是任意类型的。</p><ul><li>Go 语言字典的键类型不可以是函数类型、字典类型和切片类型。</li><li>Go 语言规范规定，在键类型的值之间必须可以施加操作符&#x3D;&#x3D;和!&#x3D;。换句话说，键类型的值必须要支持判等操作。由于函数类型、字典类型和切片类型的值并不支持判等操作，所以字典的键类型不能是这些类型。</li><li>在那些基本类型中应该优先选择哪一个？答案是，优先选用数值类型和指针类型，通常情况下类型的宽度越小越好。如果非要选择字符串类型的话，最好对键值的长度进行额外的约束。</li></ul><h2 id="通道的基本操作"><a href="#通道的基本操作" class="headerlink" title="通道的基本操作"></a>通道的基本操作</h2><p>一个通道相当于一个先进先出（FIFO）的队列。也就是说，通道中的各个元素值都是严格地按照发送的顺序排列的，先被发送通道的元素值一定会先被接收。元素值的发送和接收都需要用到操作符&lt;-。我们也可以叫它接送操作符。一个左尖括号紧接着一个减号形象地代表了元素值的传输方向。</p><ul><li>问题：单向通道有什么应用价值？概括地说，单向通道最主要的用途就是约束其他代码的行为。我们可以使用带range子句的for语句从通道中获取数据，也可以通过select语句操纵通道。</li><li>select语句与通道怎样联用，应该注意些什么？ select语句是专门为通道而设计的，它可以包含若干个候选分支，每个分支中的case表达式都会包含针对某个通道的发送或接收操作。当select语句被执行时，它会根据一套分支选择规则选中某一个分支并执行其中的代码。如果所有的候选分支都没有被选中，那么默认分支（如果有的话）就会被执行。注意，发送和接收操作的阻塞是分支选择规则的一个很重要的依据。</li></ul><h2 id="使用函数的正确姿势"><a href="#使用函数的正确姿势" class="headerlink" title="使用函数的正确姿势"></a>使用函数的正确姿势</h2><p>高阶函数可以满足下面的两个条件：1. 接受其他的函数作为参数传入；<br>关于函数传参的一个注意事项： 既不要把你程序的细节暴露给外界，也尽量不要让外界的变动影响到你的程序。你可以想想这个原则在这里可以起到怎样的指导作用。</p><h2 id="结构体-struct"><a href="#结构体-struct" class="headerlink" title="结构体 struct"></a>结构体 struct</h2><p><a href="https://www.liwenzhou.com/posts/Go/struct_memory_layout/">Go语言结构体内存布局</a><br>一个结构体类型可以包含若干个字段，每个字段通常都需要有确切的名字和类型。</p><h2 id="接口类型的合理运用"><a href="#接口类型的合理运用" class="headerlink" title="接口类型的合理运用"></a>接口类型的合理运用</h2><p>接口类型与其他数据类型不同，它是没法被实例化的。接口类型声明中的这些方法所代表的就是该接口的方法集合。一个接口的方法集合就是它的全部特征。<br>对于任何数据类型，只要它的方法集合中完全包含了一个接口的全部特征（即全部的方法），那么它就一定是这个接口的实现类型。</p><h2 id="关于指针的有限操作"><a href="#关于指针的有限操作" class="headerlink" title="关于指针的有限操作"></a>关于指针的有限操作</h2><ul><li>常量的值。</li><li>基本类型值的字面量。</li><li>算术操作的结果值。 </li><li>对各种字面量的索引表达式和切片表达式的结果值。不过有一个例外，对切片字面量的索引结果值却是可寻址的。 </li><li>对字符串变量的索引表达式和切片表达式的结果值。 </li><li>对字典变量的索引表达式的结果值。 </li><li>函数字面量和方法字面量，以及对它们的调用表达式的结果值。 </li><li>结构体字面量的字段值，也就是对结构体字面量的选择表达式的结果值。 </li><li>类型转换表达式的结果值。 </li><li>类型断言表达式的结果值。 </li><li>接收表达式的结果值。</li></ul><h2 id="go语句及其执行规则"><a href="#go语句及其执行规则" class="headerlink" title="go语句及其执行规则"></a>go语句及其执行规则</h2><p>一个进程至少会包含一个线程。如果一个进程只包含了一个线程，那么它里面的所有代码都只会被串行地执行。每个进程的第一个线程都会随着该进程的启动而被创建，它们可以被称为其所属进程的主线程。<br>相对应的，如果一个进程中包含了多个线程，那么其中的代码就可以被并发地执行。除了进程的第一个线程之外，其他的线程都是由进程中已存在的线程创建出来的。<br>Go 语言不但有着独特的并发编程模型，以及用户级线程 goroutine，还拥有强大的用于调度 goroutine、对接系统级线程的调度器。<br>G（goroutine 的缩写）、P（processor 的缩写）和 M（machine 的缩写）。</p><ul><li>什么是主 goroutine，它与我们启用的其他 goroutine 有什么不同？ 面试中经常提问的编程题。<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>与一个进程总会有一个主线程类似，每一个独立的 Go 程序在运行时也总会有一个主 goroutine。已存在的 goroutine 总是会被优先复用。<br>严谨地讲，Go 语言并不会去保证这些 goroutine 会以怎样的顺序运行。由于主 goroutine 会与我们手动启用的其他 goroutine 一起接受调度，又因为调度器很可能会在 goroutine 中的代码只执行了一部分的时候暂停，以期所有的 goroutine 有更公平的运行机会。<br>一旦主 goroutine 中的代码（也就是main函数中的那些代码）执行完毕，当前的 Go 程序就会结束运行。如此一来，如果在 Go 程序结束的那一刻，还有 goroutine 未得到运行机会，那么它们就真的没有运行机会了，它们中的代码也就不会被执行了。</li><li>怎样才能让主 goroutine 等待其他 goroutine？<br>最简单粗暴的办法就是让主 goroutine“小睡”一会儿。<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(time.Millisecond * <span class="number">500</span>)</span><br></pre></td></tr></table></figure>你可能会想到，既然不容易预估时间，那我们就让其他的 goroutine 在运行完毕的时候告诉我们好了。这个思路很好，但怎么做呢？你是否想到了通道呢？我们先创建一个通道，它的长度应该与我们手动启用的 goroutine 的数量一致。在每个手动启用的 goroutine 即将运行完毕的时候，我们都要向该通道发送一个值。<br>如果你知道标准库中的代码包sync的话，那么可能会想到sync.WaitGroup类型</li></ul>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus 指南</title>
      <link href="/post/prometheus/"/>
      <url>/post/prometheus/</url>
      
        <content type="html"><![CDATA[<p>Prometheus 作为业务级监控告警工具，再配合上可视化工具 Grafana，运维人员能方便的监控所需的指标。本文记录了小白入门学习的过程</p><span id="more"></span>  <h1 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h1><ol><li><a href="https://ryanyang.gitbook.io/prometheus/">Prometheus 中文文档</a> </li><li><a href="https://prometheus.io/docs/introduction/overview/">官方文档地址</a></li></ol><h1 id="入门体验区"><a href="#入门体验区" class="headerlink" title="入门体验区"></a>入门体验区</h1><h2 id="快速安装"><a href="#快速安装" class="headerlink" title="快速安装"></a>快速安装</h2><p>快速安装应用首选 docker 方式，不需要配置复杂的环境。当我们已经非常熟悉如何使用 prometheus 的时候，再返回来使用普通安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只监听在本地</span></span><br><span class="line">docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将配置文件挂载到容器中，方便修改</span></span><br><span class="line">docker run -p 9090:9090 -v /tmp/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用额外的数据卷挂载配置文件：</span></span><br><span class="line">docker run -p 9090:9090 -v /prometheus-data prom/prometheus --config.file=/prometheus-data/prometheus.yml</span><br></pre></td></tr></table></figure><p>安装完成后，即可访问 <a href="http://localhost:9090/">http://localhost:9090</a> 可以在 Graph 查询监控项，在 Status 查看监控了哪些机器，配置文件等。</p><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>[配置介绍官方文档]<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/">https://prometheus.io/docs/prometheus/latest/configuration/configuration/</a>)<br>我是在 Mac 电脑上 docker 安装 prometheus。由于我没有把配置文件挂载出来，只能进入容器去修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -u root -it 51ae3954e880 sh</span><br><span class="line"></span><br><span class="line">vi /etc/prometheus/prometheus.yml</span><br></pre></td></tr></table></figure><p>配置文件如下所示</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">15s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="comment"># - alertmanager:9093</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - &quot;first_rules.yml&quot;</span></span><br><span class="line">  <span class="comment"># - &quot;second_rules.yml&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it&#x27;s Prometheus itself.</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;prometheus&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to &#x27;/metrics&#x27;</span></span><br><span class="line">    <span class="comment"># scheme defaults to &#x27;http&#x27;.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;localhost:9090&#x27;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;feiy&#x27;</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;host.docker.internal:8000&#x27;</span>]</span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">group:</span> <span class="string">&#x27;production&#x27;</span></span><br></pre></td></tr></table></figure><p>完整的配置例子，请点击<a href="https://github.com/prometheus/prometheus/blob/master/config/testdata/conf.good.yml">这里</a></p><h2 id="检查结果"><a href="#检查结果" class="headerlink" title="检查结果"></a>检查结果</h2><p>打开 <a href="http://localhost:9090/targets">http://localhost:9090/targets</a> 我们可以看到如下的结果  </p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191003155435.png"></p><p>图中两个 target，第一个 feiy 是我自己写的一个 django 小程序，暴露出来了我关心的指标，用了<a href="https://github.com/prometheus/client_python">Prometheus Python Client</a>。第二个则是 Prometheus 服务器自带的监控数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># feiy 暴露出来的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HELP python_gc_objects_collected_total Objects collected during gc</span></span><br><span class="line"><span class="comment"># TYPE python_gc_objects_collected_total counter</span></span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">&quot;0&quot;</span>&#125; 17999.0</span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">&quot;1&quot;</span>&#125; 2384.0</span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">&quot;2&quot;</span>&#125; 833.0</span><br><span class="line"><span class="comment"># HELP python_gc_objects_uncollectable_total Uncollectable object found during GC</span></span><br><span class="line"><span class="comment"># TYPE python_gc_objects_uncollectable_total counter</span></span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">&quot;0&quot;</span>&#125; 0.0</span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">&quot;1&quot;</span>&#125; 0.0</span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">&quot;2&quot;</span>&#125; 0.0</span><br><span class="line"><span class="comment"># HELP python_gc_collections_total Number of times this generation was collected</span></span><br><span class="line"><span class="comment"># TYPE python_gc_collections_total counter</span></span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">&quot;0&quot;</span>&#125; 255.0</span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">&quot;1&quot;</span>&#125; 23.0</span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">&quot;2&quot;</span>&#125; 2.0</span><br><span class="line"><span class="comment"># HELP python_info Python platform information</span></span><br><span class="line"><span class="comment"># TYPE python_info gauge</span></span><br><span class="line">python_info&#123;implementation=<span class="string">&quot;CPython&quot;</span>,major=<span class="string">&quot;3&quot;</span>,minor=<span class="string">&quot;7&quot;</span>,patchlevel=<span class="string">&quot;1&quot;</span>,version=<span class="string">&quot;3.7.1&quot;</span>&#125; 1.0</span><br><span class="line"><span class="comment"># HELP request_processing_seconds Time spent processing request</span></span><br><span class="line"><span class="comment"># TYPE request_processing_seconds summary</span></span><br><span class="line">request_processing_seconds_count&#123;endpoint=<span class="string">&quot;/metrics/&quot;</span>,method=<span class="string">&quot;GET&quot;</span>,status_code=<span class="string">&quot;200&quot;</span>&#125; 3.0</span><br><span class="line">request_processing_seconds_sum&#123;endpoint=<span class="string">&quot;/metrics/&quot;</span>,method=<span class="string">&quot;GET&quot;</span>,status_code=<span class="string">&quot;200&quot;</span>&#125; 0.0</span><br><span class="line"><span class="comment"># TYPE request_processing_seconds_created gauge</span></span><br><span class="line">request_processing_seconds_created&#123;endpoint=<span class="string">&quot;/metrics/&quot;</span>,method=<span class="string">&quot;GET&quot;</span>,status_code=<span class="string">&quot;200&quot;</span>&#125; 1.570089497964517e+09</span><br><span class="line"><span class="comment"># HELP request_byte_sum_total Total request byte sum</span></span><br><span class="line"><span class="comment"># TYPE request_byte_sum_total counter</span></span><br><span class="line">request_byte_sum_total&#123;endpoint=<span class="string">&quot;/metrics/&quot;</span>,method=<span class="string">&quot;GET&quot;</span>,status_code=<span class="string">&quot;200&quot;</span>&#125; 0.0</span><br><span class="line"><span class="comment"># TYPE request_byte_sum_created gauge</span></span><br><span class="line">request_byte_sum_created&#123;endpoint=<span class="string">&quot;/metrics/&quot;</span>,method=<span class="string">&quot;GET&quot;</span>,status_code=<span class="string">&quot;200&quot;</span>&#125; 1.570089497964633e+09</span><br><span class="line"><span class="comment"># HELP response_byte_sum_total Total response byte sum</span></span><br><span class="line"><span class="comment"># TYPE response_byte_sum_total counter</span></span><br><span class="line">response_byte_sum_total&#123;endpoint=<span class="string">&quot;/metrics/&quot;</span>,method=<span class="string">&quot;GET&quot;</span>,status_code=<span class="string">&quot;200&quot;</span>&#125; 5533.0</span><br><span class="line"><span class="comment"># TYPE response_byte_sum_created gauge</span></span><br><span class="line">response_byte_sum_created&#123;endpoint=<span class="string">&quot;/metrics/&quot;</span>,method=<span class="string">&quot;GET&quot;</span>,status_code=<span class="string">&quot;200&quot;</span>&#125; 1.5700894979645782e+09</span><br></pre></td></tr></table></figure><p>我们可以在 Graph 查询结果，比如查询 python_info{implementation&#x3D;”CPython”,major&#x3D;”3”,minor&#x3D;”7”,patchlevel&#x3D;”1”,version&#x3D;”3.7.1”} 1.0<br>得到了如下的结果</p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191003160311.png"></p><h1 id="进阶区"><a href="#进阶区" class="headerlink" title="进阶区"></a>进阶区</h1><h2 id="暴露数据-node-exporter"><a href="#暴露数据-node-exporter" class="headerlink" title="暴露数据 node exporter"></a>暴露数据 node exporter</h2><ol><li><a href="https://prometheus.io/docs/guides/node-exporter/">监控 Linux 机器</a></li><li><a href="https://prometheus.io/docs/guides/cadvisor/">监控容器</a></li></ol><h2 id="metric"><a href="#metric" class="headerlink" title="metric"></a>metric</h2><ol><li><a href="https://prometheus.io/docs/concepts/metric_types/">官方文档</a></li><li><a href="https://mp.weixin.qq.com/s/1EuTeQKeCX7-B2Ihj85dCA">详细解读 Prometheus 的指标类型</a></li><li><a href="https://mp.weixin.qq.com/s/WJM-DTUrdl8KFpLD5kabZg">一文搞懂 Prometheus 的直方图</a></li></ol><h2 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h2><ol><li><a href="https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/">官方文档</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果有错的话，则那一条规则不会更新。</span></span><br><span class="line">go get github.com/prometheus/prometheus/cmd/promtool</span><br><span class="line">promtool check rules /path/to/example.rules.yml</span><br></pre></td></tr></table></figure></li></ol><h1 id="采坑区"><a href="#采坑区" class="headerlink" title="采坑区"></a>采坑区</h1>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 小技巧</title>
      <link href="/post/mac/"/>
      <url>/post/mac/</url>
      
        <content type="html"><![CDATA[<p>苹果电脑小技巧。</p><span id="more"></span><h1 id="命令行技巧"><a href="#命令行技巧" class="headerlink" title="命令行技巧"></a>命令行技巧</h1><ul><li>移动到行首 <strong>ctrl+A</strong></li><li>移动当行尾 <strong>ctrl+E</strong></li><li>往左移一个单词 <strong>esc+B</strong></li><li>往右移一个单词 <strong>esc+F</strong></li><li>删除光标前一个单词 <strong>ctrl+W</strong></li><li>删除光标前所有 <strong>ctrl+U</strong></li></ul><h1 id="上传rz-下载sz"><a href="#上传rz-下载sz" class="headerlink" title="上传rz 下载sz"></a>上传rz 下载sz</h1><ul><li>首先下载 <a href="https://www.iterm2.com/">iTerm2</a> 因为自带的 terminal 不行啊</li><li>安装 lrzsz <strong>brew install lrzsz</strong> ， 安装完成后，m1的brew安装位置是在 &#x2F;opt&#x2F;homebrew&#x2F; ，需要 copy 到 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">M1 需要</span></span><br><span class="line">cd /opt/homebrew/bin</span><br><span class="line">cp sz /usr/local/bin/ cp rz /usr/local/bin/</span><br></pre></td></tr></table></figure></li><li>下载两个脚本 send-zmodem.sh  recv-zmodem.sh<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/bin </span><br><span class="line">sudo wget https://gist.githubusercontent.com/sy-records/1b3010b566af42f57fa6fa38138dd22a/raw/2bfe590665d3b0e6c8223623922474361058920c/iterm2-send-zmodem.sh </span><br><span class="line">sudo wget https://gist.githubusercontent.com/sy-records/40f4ba22e3fbdeedf58463b067798962/raw/b32d2f7ac3fa54acca81be3664797cebb724690f/iterm2-recv-zmodem.sh</span><br><span class="line">sudo <span class="built_in">chmod</span> 755 /usr/local/bin/iterm2-* </span><br></pre></td></tr></table></figure>如果链接失败，可以复制以下文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vim /usr/local/bin/iterm2-send-zmodem.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to version&#x27;</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">&quot;iTerm&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">&#x27;tell application &quot;iTerm&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm&quot; to set thefile to choose file with prompt &quot;Choose a file to send&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to set thefile to choose file with prompt &quot;Choose a file to send&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">&quot;&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    /usr/local/bin/sz <span class="string">&quot;<span class="variable">$FILE</span>&quot;</span> -e -b</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Received $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#vim /usr/local/bin/iterm2-recv-zmodem.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to version&#x27;</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">&quot;iTerm&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">&#x27;tell application &quot;iTerm&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm&quot; to set thefile to choose folder with prompt &quot;Choose a folder to place received files in&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to set thefile to choose folder with prompt &quot;Choose a folder to place received files in&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">&quot;&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$FILE</span>&quot;</span></span><br><span class="line">    /usr/local/bin/rz -E -e -b</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Sent \-\&gt; $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li>iTerm2 的配置<br>点击 iTerm2 的设置界面 Perference -&gt; Profiles -&gt; Default -&gt; Advanced -&gt; Triggers 的 Edit 按钮<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190911151439.png"><br>点击+号，添加如下的参数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Regular expression: \*\*B0100</span><br><span class="line">            Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /usr/local/bin/iterm2-send-zmodem.sh</span><br><span class="line">           Instant: checked</span><br><span class="line"></span><br><span class="line">Regular expression: \*\*B00000000000000</span><br><span class="line">            Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /usr/local/bin/iterm2-recv-zmodem.sh</span><br><span class="line">           Instant: checked</span><br></pre></td></tr></table></figure>添加完成如下图所示<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190911151446.png"><br>简单的用法，当 ssh 登录后<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 下载一个文件： </span><br><span class="line">sz filename </span><br><span class="line"># 下载多个文件： </span><br><span class="line">sz filename1 filename2</span><br><span class="line"># 下载dir目录下的所有文件，不包含dir下的文件夹： </span><br><span class="line">sz dir/*</span><br><span class="line"></span><br><span class="line"># 直接键入rz命令即可</span><br><span class="line">rz</span><br><span class="line"># 在弹出的文件窗口，选择需要上传的文件</span><br></pre></td></tr></table></figure></li></ul><h1 id="遍历子目录更新-git"><a href="#遍历子目录更新-git" class="headerlink" title="遍历子目录更新 git"></a>遍历子目录更新 git</h1><ul><li><a href="https://www.itranslater.com/qa/details/2123046276676715520">https://www.itranslater.com/qa/details/2123046276676715520</a></li><li><a href="https://mp.weixin.qq.com/s/J-FQc150eoNvt3ZoSv_kfg">https://mp.weixin.qq.com/s/J-FQc150eoNvt3ZoSv_kfg</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find . -type d -depth 1 -exec git --git-dir=&#123;&#125;/.git --work-tree=$PWD/&#123;&#125; pull origin master \;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="brew"><a href="#brew" class="headerlink" title="brew"></a>brew</h1><p><a href="https://brew.sh/">https://brew.sh/</a> Mac 上面最好用的软件管理工具。<br>mac上使用brew install &#x2F;brew cask install安装软件总是先updating HomeBrew…<br>HomeBrew 关闭自动更新， 减少等待的时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> HOMEBREW_NO_AUTO_UPDATE=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>更稳妥的办法是<a href="https://docs.brew.sh/FAQ#how-do-i-stop-certain-formulae-from-being-updated">固定版本</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew pin python@3.9 </span><br><span class="line"></span><br><span class="line">brew list --pinned</span><br><span class="line">python@3.9</span><br></pre></td></tr></table></figure><p>固定好之后，python 就不会被自动更新了。之前遇到过 brew 自动更新了 python 从 3.7 到 3.9 导致了 pycharm 创建的虚拟环境都不能用了。</p><h1 id="zshrc"><a href="#zshrc" class="headerlink" title=".zshrc"></a>.zshrc</h1><p>mac 常用的小脚本， 顺便安利一下大佬的 <a href="https://wangdoc.com/bash/index.html">bash 教程</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HOMEBREW_NO_AUTO_UPDATE=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">sshbytower</span></span>() &#123; ssh -i .ssh/tower-key.priv  ubuntu@<span class="variable">$1</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> feiyang-shutdown=<span class="string">&#x27;ansible-playbook -i /Users/yang.fei/ansible/hosts /Users/yang.fei/ansible/shutdown.yml&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ec2 service-name aws-profile</span></span><br><span class="line"><span class="function"><span class="title">ec2</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -eq 2 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">local</span> profile=<span class="variable">$2</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> profile=<span class="string">&quot;default&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    aws ec2 describe-instances --profile <span class="variable">$profile</span> \</span><br><span class="line">    --filters <span class="string">&quot;Name=instance-state-name,Values=running&quot;</span> <span class="string">&quot;Name=tag:Name,Values=<span class="variable">$1</span>*&quot;</span> \</span><br><span class="line">    --query <span class="string">&quot;Reservations[*].Instances[*].&#123;Image:ImageId,Instance:InstanceId,AZ:Placement.AvailabilityZone,IP:PrivateIpAddress,Name:Tags[?Key==&#x27;Name&#x27;]|[0].Value&#125;&quot;</span> \</span><br><span class="line">    --output table --color off</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">ecip</span></span>() &#123;</span><br><span class="line">  aws ec2 describe-instances --filter <span class="string">&quot;Name=private-ip-address,Values=<span class="variable">$1</span>&quot;</span> \</span><br><span class="line">  --query <span class="string">&quot;Reservations[*].Instances[*].&#123;Image:ImageId,Instance:InstanceId,AZ:Placement.AvailabilityZone,IP:PrivateIpAddress,Name:Tags[?Key==&#x27;Name&#x27;]|[0].Value&#125;&quot;</span> \</span><br><span class="line">  --output table --color off</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">ami</span></span>() &#123;</span><br><span class="line">  aws ec2 describe-images \</span><br><span class="line">  --region ap-southeast-1 \</span><br><span class="line">  --image-ids <span class="variable">$1</span> --output table</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">server</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> port=<span class="string">&quot;<span class="variable">$&#123;1:-8000&#125;</span>&quot;</span></span><br><span class="line">    python3 -m http.server  <span class="string">&quot;<span class="variable">$port</span>&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们来亲测一下 ec2 [name] [awscli profile]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">feiyang@MAC ~ % ec2 stg-hako</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">|                     DescribeInstances                    |</span><br><span class="line">+-----------------+----------------+-----------------------+</span><br><span class="line">|       AZ        |      IP        |       Instance        |</span><br><span class="line">+-----------------+----------------+-----------------------+</span><br><span class="line">|  ap-southeast-1b|  10.10.64.177  |  i-xxxxxxxxxxxxxxxxx  |</span><br><span class="line">|  ap-southeast-1c|  10.10.76.44   |  i-xxxxxxxxxxxxxxxxx  |</span><br><span class="line">+-----------------+----------------+-----------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">feiyang@MAC ~ % ec2 stg-vault-v2-a-0 vaultstg</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">|                     DescribeInstances                    |</span><br><span class="line">+-----------------+----------------+-----------------------+</span><br><span class="line">|       AZ        |      IP        |       Instance        |</span><br><span class="line">+-----------------+----------------+-----------------------+</span><br><span class="line">|  ap-southeast-1b|  10.10.153.90  |  i-xxxxxxxxxxxxxxxxx  |</span><br><span class="line">+-----------------+----------------+-----------------------+</span><br></pre></td></tr></table></figure><p>关于上面的 AWS CLI 如果不想要返回的结果用 less 浏览，可以<a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-pagination.html">禁用 pager</a><br>The following example sets the default to disable the use of a pager.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ~/.aws/config</span></span><br><span class="line">[default]</span><br><span class="line">cli_pager=</span><br><span class="line"></span><br><span class="line"><span class="comment"># or </span></span><br><span class="line"><span class="built_in">export</span> AWS_PAGER=<span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="curl-计时"><a href="#curl-计时" class="headerlink" title="curl 计时"></a>curl 计时</h1><ul><li><a href="https://blog.csdn.net/yxys01/article/details/77447794">time 变量的含义</a></li><li><a href="https://www.codegrepper.com/code-examples/shell/get+curl+response+time">get curl response time</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ curl <span class="string">&quot;http://127.0.0.1:5000/v1/wdmanager?user_email=feiyang%40feiyang233.club&quot;</span> -w %&#123;time_connect&#125;:%&#123;time_starttransfer&#125;:%&#123;time_total&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;manager&quot;</span>: <span class="string">&quot;manager_name&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">0.000300:34.109901:34.110209% </span><br><span class="line"></span><br><span class="line"><span class="comment"># 有了缓存就是快啊</span></span><br><span class="line">➜  ~ curl <span class="string">&quot;http://127.0.0.1:5000/v1/wdmanager?user_email=feiyang%40feiyang233.club&quot;</span> -w %&#123;time_connect&#125;:%&#123;time_starttransfer&#125;:%&#123;time_total&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;manager&quot;</span>: <span class="string">&quot;manager_name&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">0.000295:0.004138:0.004199%  </span><br></pre></td></tr></table></figure></li></ul><h1 id="2K-显示器-HiDPI"><a href="#2K-显示器-HiDPI" class="headerlink" title="2K 显示器 HiDPI"></a>2K 显示器 HiDPI</h1><ul><li>intel 可以尝试这个方法 <a href="https://blog.csdn.net/qq_37417018/article/details/113701115">https://blog.csdn.net/qq_37417018/article/details/113701115</a> </li><li>M1 芯片可以用这个方法  <a href="https://sspai.com/post/70141">https://sspai.com/post/70141</a>  普通版就可以，不需要 Pro 的高级功能。但 2022-06-19 今天它更新了，不需要 dummy 投影来修改分辨率了。<br>而且还支持键盘控制多个屏幕的亮度，修改默认分辨率等高级功能, 真心建议 15 美元买 Pro 版本。 这篇文章也有介绍 <a href="https://zzbloc.top/archives/turn-on-hidpi-for-macbook">https://zzbloc.top/archives/turn-on-hidpi-for-macbook</a><br>关于显示器亮度： 软件上默认最大亮度是你的显示器按键设置的当前值，比如我的显示器按键设置当前值为60%，用 BetterDisplay 控制亮度时，最大值就是60%，我可调整的区间为0-60%，而不能增加到60%以上<br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/iShot_2022-06-19_23.30.02.png"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/iShot_2022-06-19_23.31.37.png"><br><img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/202206192344125.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Script 学习</title>
      <link href="/post/google-script/"/>
      <url>/post/google-script/</url>
      
        <content type="html"><![CDATA[<p>本文记录用<a href="https://developers.google.com/apps-script/guides/sheets">Google Script</a> 处理数据，发送每日邮件的过程。</p><span id="more"></span><h1 id="创建-Sheet-和-Script"><a href="#创建-Sheet-和-Script" class="headerlink" title="创建 Sheet 和 Script"></a>创建 Sheet 和 Script</h1><p>首先用自己的谷歌账号创建一个新的 Google Sheet, 然后点击菜单栏的 Tools &gt; Script editor 就可以创建脚本。其语法和 JavaScript 相似的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sends emails with data from the current spreadsheet.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 首先添加一个发送按钮名称为 Action，绑定到函数 SendEmail</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onOpen</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getUi</span>()</span><br><span class="line">      .<span class="title function_">createMenu</span>(<span class="string">&#x27;Action&#x27;</span>)</span><br><span class="line">      .<span class="title function_">addItem</span>(<span class="string">&#x27;Send Daily Report&#x27;</span>, <span class="string">&#x27;SendEmail&#x27;</span>)</span><br><span class="line">      .<span class="title function_">addToUi</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="学会-debug"><a href="#学会-debug" class="headerlink" title="学会 debug"></a>学会 debug</h1><p>可以调用函数 Logger.log(); 打印结果到后台，然后在 View &gt; Logs 查看结果。举一个简单的例子：<br>markdown 语法注意，使用时发现，表格的语句上一行必须为空行，不然表格不生效。比如你的表是这个样子的  </p><table><thead><tr><th align="center"></th><th align="center">A</th><th align="center">B</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">A1</td><td align="center">B1</td></tr><tr><td align="center">2</td><td align="center">A2</td><td align="center">B2</td></tr><tr><td align="center">3</td><td align="center">A3</td><td align="center">B3</td></tr><tr><td align="center">4</td><td align="center">A4</td><td align="center">B4</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">logProductInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSheet</span>();</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="title class_">Logger</span>.<span class="title function_">log</span>(<span class="string">&#x27;Product name: &#x27;</span> + data[i][<span class="number">0</span>]);</span><br><span class="line">    <span class="title class_">Logger</span>.<span class="title function_">log</span>(<span class="string">&#x27;Product number: &#x27;</span> + data[i][<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在 script editor 界面点击 Run &gt; Run function &gt; logProductInfo, 运行结束后，可以点击 View &gt; Logs 查看结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[19-08-15 01:16:37:475 PDT] Product name: A1</span><br><span class="line">[19-08-15 01:16:37:475 PDT] Product number: B1</span><br><span class="line">[19-08-15 01:16:37:476 PDT] Product name: A2</span><br><span class="line">[19-08-15 01:16:37:476 PDT] Product number: B2</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product name: A3</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product number: B3</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product name: A4</span><br><span class="line">[19-08-15 01:16:37:478 PDT] Product number: B4</span><br></pre></td></tr></table></figure><h1 id="Code-gs"><a href="#Code-gs" class="headerlink" title="Code.gs"></a>Code.gs</h1><p>直接放上代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sends emails with data from the current spreadsheet.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onOpen</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getUi</span>()</span><br><span class="line">      .<span class="title function_">createMenu</span>(<span class="string">&#x27;Action&#x27;</span>)</span><br><span class="line">      .<span class="title function_">addItem</span>(<span class="string">&#x27;Send Daily Report&#x27;</span>, <span class="string">&#x27;SendEmail&#x27;</span>)</span><br><span class="line">      .<span class="title function_">addToUi</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> scriptProperties = <span class="title class_">PropertiesService</span>.<span class="title function_">getScriptProperties</span>();</span><br><span class="line">  <span class="keyword">var</span> nickname = scriptProperties.<span class="title function_">getProperty</span>(<span class="string">&#x27;Project&#x27;</span>);</span><br><span class="line">  <span class="title class_">Logger</span>.<span class="title function_">log</span>(nickname)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SendEmail</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> client = <span class="title class_">PropertiesService</span>.<span class="title function_">getScriptProperties</span>().<span class="title function_">getProperty</span>(<span class="string">&#x27;Project&#x27;</span>);</span><br><span class="line">  <span class="comment">// Property 可以在 File &gt; Project Properties &gt; Script properties 里面设置</span></span><br><span class="line">  <span class="keyword">var</span> monitor_vn = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&quot;VN&quot;</span>).<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line">  <span class="comment">// 获取表单名称为 VN 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> monitor_th = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&quot;TH&quot;</span>).<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line">  <span class="comment">// 获取表单名称为 TH 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> sendlist = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&quot;email&quot;</span>).<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line">  <span class="comment">// 获取表单名称为 email 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> sendto = []</span><br><span class="line">  <span class="keyword">var</span> sendcc = []</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将发送和 cc 分开存储</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;sendlist.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (sendlist[i][<span class="number">0</span>]!=<span class="string">&#x27;&#x27;</span>) sendto.<span class="title function_">push</span>(sendlist[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> (sendlist[i][<span class="number">1</span>]!=<span class="string">&#x27;&#x27;</span>) sendcc.<span class="title function_">push</span>(sendlist[i][<span class="number">1</span>])</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  sendto = sendto.<span class="title function_">join</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">  sendcc = sendcc.<span class="title function_">join</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">  </span><br><span class="line"> <span class="comment">// Email Template 连接绑定文件 index.html</span></span><br><span class="line">  <span class="keyword">var</span> template = <span class="title class_">HtmlService</span>.<span class="title function_">createTemplateFromFile</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">  <span class="comment">// 传参到 template</span></span><br><span class="line">  template.<span class="property">monitor_vn</span> = monitor_vn;</span><br><span class="line">  template.<span class="property">monitor_th</span> = monitor_th;</span><br><span class="line">  template.<span class="property">client</span> = client;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 自定义一个数组，将数字月份映射为英文</span></span><br><span class="line">  <span class="keyword">const</span> monthNames = [<span class="string">&quot;January&quot;</span>, <span class="string">&quot;February&quot;</span>, <span class="string">&quot;March&quot;</span>, <span class="string">&quot;April&quot;</span>, <span class="string">&quot;May&quot;</span>, <span class="string">&quot;June&quot;</span>,</span><br><span class="line">  <span class="string">&quot;July&quot;</span>, <span class="string">&quot;August&quot;</span>, <span class="string">&quot;September&quot;</span>, <span class="string">&quot;October&quot;</span>, <span class="string">&quot;November&quot;</span>, <span class="string">&quot;December&quot;</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="comment">// 获取当前的日期</span></span><br><span class="line">  <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 发送邮件</span></span><br><span class="line">  <span class="title class_">MailApp</span>.<span class="title function_">sendEmail</span>(&#123;</span><br><span class="line">    <span class="attr">to</span>: sendto,</span><br><span class="line">    <span class="attr">cc</span>: sendcc,</span><br><span class="line">    <span class="attr">subject</span>: client+<span class="string">&#x27; Monitoring Daily Report (&#x27;</span>+d.<span class="title function_">getDate</span>()+<span class="string">&#x27;-&#x27;</span>+monthNames[d.<span class="title function_">getMonth</span>()]+<span class="string">&#x27;-&#x27;</span>+d.<span class="title function_">getYear</span>()+<span class="string">&#x27;)&#x27;</span>,</span><br><span class="line">    <span class="attr">htmlBody</span>: template.evaluate().<span class="title function_">getContent</span>()&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h1><p>这个是邮件的主体模板，可以看一下<a href="https://developers.google.com/apps-script/guides/html/templates">官网介绍</a><br>条件语句嵌套<? ... ?></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_top&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &lt;? if (true) &#123; ?&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>This will always be served!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>This will never be served.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;? &#125; ?&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>赋值语句<?= ... ?> 是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_top&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &lt;?= &#x27;My favorite Google products:&#x27; ?&gt;</span><br><span class="line">    &lt;? var data = [&#x27;Gmail&#x27;, &#x27;Docs&#x27;, &#x27;Android&#x27;];</span><br><span class="line">      for (var i = 0; i &lt; data.length; i++) &#123; ?&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span>&gt;</span>&lt;?= data[i] ?&gt;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    &lt;? &#125; ?&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_top&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hi,<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Below is daily ops report for &lt;?=client?&gt;:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 15px;&quot;</span>&gt;</span>Monitoring_VN:<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">&quot;border-collapse: collapse; margin-left:20px;border: 1px solid black&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? for (var j=1;j&lt;7;j++) &#123; ?&gt;  <span class="comment">&lt;!-- 因为只读取1-6列的数据 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;background-color: grey; color: white; width:15%&quot;</span>&gt;</span>&lt;?= monitor_vn[0][j] ?&gt;<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--monitor_vn.length 是行数--&gt;</span></span><br><span class="line">     &lt;? for(var i=1;i&lt;monitor_vn.length;i++) &#123; ?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       &lt;? for(var j=1;j&lt;7;j++) &#123; ?&gt;</span><br><span class="line">         &lt;? if ( j&gt;2 &amp;&amp; j&lt; 6  ) &#123; ?&gt;</span><br><span class="line">          &lt;? if (monitor_vn[i][j] &gt; 0.7) &#123;?&gt; <span class="comment">&lt;!-- 值大于0.7 底色红色--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black; background-color: red;&quot;</span>&gt;</span>&lt;?= (monitor_vn[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;   <span class="comment">&lt;!--toFixed(2) 保留两位小数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;&quot;</span>&gt;</span>&lt;?= (monitor_vn[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">            &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">        &lt;? if ( j==6 &amp;&amp; monitor_vn[i][j] &gt; 100) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;background-color: red;&quot;</span>&gt;</span>&lt;?= (monitor_vn[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;&quot;</span>&gt;</span>&lt;?= (monitor_vn[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">     </span><br><span class="line">         &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 15px;&quot;</span>&gt;</span>Monitoring_TH:<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">&quot;border-collapse: collapse; margin-left:20px;border: 1px solid black&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? for (var j=1;j&lt;7;j++)&#123; ?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;background-color: grey; color: white; width:15%&quot;</span>&gt;</span>&lt;?= monitor_th[0][j] ?&gt;<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     &lt;? for(var i=1;i&lt;monitor_th.length;i++)&#123;?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       &lt;? for(var j=1;j&lt;7;j++)&#123;?&gt;</span><br><span class="line">         &lt;? if ( j&gt;2 &amp;&amp; j&lt; 6  ) &#123; ?&gt;</span><br><span class="line">           &lt;? if (monitor_th[i][j] &gt; 0.7) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black; background-color: red;&quot;</span>&gt;</span>&lt;?= (monitor_th[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;&quot;</span>&gt;</span>&lt;?= (monitor_th[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">         &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">           &lt;? if ( j==6 &amp;&amp; monitor_th[i][j] &gt; 100) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;background-color: red;&quot;</span>&gt;</span>&lt;?= (monitor_th[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;&quot;</span>&gt;</span>&lt;?= (monitor_th[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">         &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h1>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 学习笔记</title>
      <link href="/post/docker/"/>
      <url>/post/docker/</url>
      
        <content type="html"><![CDATA[<p>本文记录了一些基础的 docker 知识。</p><span id="more"></span> <h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol start="0"><li><a href="https://yeasy.gitbook.io/docker_practice/">Docker —— 从入门到实践</a> 非常不错的一本书，与时俱进</li><li><a href="https://mp.weixin.qq.com/s/wNCfYERWU3GOBHI2juTpmg">你确定你会写 Dockerfile 吗</a></li><li><a href="https://mp.weixin.qq.com/s/eZCi73pOFq0sSoMYSVujZw">Docker stop或者Docker kill为何不能停止容器</a></li><li><a href="https://mp.weixin.qq.com/s/HwmBNPaWBmD3-VW5V04MLg">P2P镜像分发Dragonfly使用</a></li><li><a href="https://mp.weixin.qq.com/s/5Nu9fnH7K-Y6a_pA2z2haA">Docker 数据持久化的三种方案</a></li><li><a href="https://yeasy.gitbooks.io/docker_practice/content/">Docker — 从入门到实践</a></li><li><a href="https://mp.weixin.qq.com/s/S4aMdmQW50HR7Lj2z2-VZQ">docker-proxy 存在合理性分析</a></li><li><a href="https://mp.weixin.qq.com/s/F8dFqdMBI0pfXJWow5dHhQ">Docker 的原理</a></li><li><a href="https://mp.weixin.qq.com/s/bRQUrpSbZyZ5kUg7vfvc1A">Docker 存储驱动与磁盘文件系统</a> 内含格式化磁盘，挂载磁盘</li><li><a href="https://mp.weixin.qq.com/s/jZN4U10NasdWiOPhiKaNbQ">深入理解 cgroup 中的 cpuset</a></li><li><a href="https://mp.weixin.qq.com/s/LtgGcS9b8X-TqbfaLfBldQ">一次有趣的 Docker 容器网络排查</a></li></ol><h1 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h1><p>分享一篇<a href="https://mp.weixin.qq.com/s/BCzL57RmJja2gfZ67a2Z9Q">CentOS 7 下 yum 方式安装 Docker 环境</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>一个“容器”，实际上是一个由 Linux Namespace、Linux Cgroups 和 rootfs 三种技术构建出来的进程的隔离环境。<br>这三种技术介绍？<br>Namespace 的作用是“隔离”，它让应用进程只能看到该 Namespace 内的“世界”；而 Cgroups 的作用是“限制”</p><p>rootfs 只是一个操作系统所包含的文件、配置和目录，并不包括操作系统内核。在 Linux 操作系统中，这两部分是分开存放的，操作系统只有在开机启动时才会加载指定版本的内核镜像。正是由于 rootfs 的存在，容器才有了一个被反复宣传至今的重要特性：一致性。</p><p>docker commit，实际上就是在容器运行起来后，把最上层的“可读写层”，加上原先容器镜像的只读层，打包组成了一个新的镜像。当然，下面这些只读层在宿主机上是共享的，不会占用额外的空间。</p><h1 id="docker-volume"><a href="#docker-volume" class="headerlink" title="docker volume"></a>docker volume</h1><p>镜像的各个层，保存在 &#x2F;var&#x2F;lib&#x2F;docker&#x2F;aufs&#x2F;diff 目录下，在容器进程启动后，它们会被联合挂载在 &#x2F;var&#x2F;lib&#x2F;docker&#x2F;aufs&#x2F;mnt&#x2F; 目录中，这样容器所需的 rootfs 就准备好了。<br>volume &#x2F;test 挂载出来之后，文件会出现在了宿主机上对应的临时目录里，但是如果你在宿主机上查看该容器的可读写层，虽然可以看到这个 &#x2F;test 目录，但其内容是空的。<br>而由于使用了联合文件系统，你在容器里对镜像 rootfs 所做的任何修改，都会被操作系统先复制到这个可读写层，然后再修改。这就是所谓的：Copy-on-Write。<br>有些时候，会由于配置文件的出错导致容器运行失败，这个时候不能进入容器修改文件，只能去 &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;ID&#x2F;diff 下面，找到对应的配置文件进行修改。</p><h1 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 docker 服务 </span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前系统 Docker 信息 </span></span><br><span class="line">docker info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取 docker 镜像 </span></span><br><span class="line">docker pull image_name</span><br><span class="line"><span class="comment"># 从 Docker hub 上下载某个镜像 </span></span><br><span class="line">docker pull centos:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看宿主机上的镜像，Docker 镜像保存在 / var/lib/docker 目录下:</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line">REPOSITORY                      TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mysql                           5.7                 1b30b36ae96a        8 days ago          372MB</span><br><span class="line">zabbix/zabbix-web-nginx-mysql   centos-4.0-latest   8be5f91b2fa1        3 weeks ago         415MB</span><br><span class="line">zabbix/zabbix-server-mysql      centos-4.0-latest   8e5becf45c4e        3 weeks ago         326MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像 </span></span><br><span class="line">docker rmi image_name/image_id</span><br><span class="line">docker rmi zabbix/zabbix-web-nginx-mysql:centos-4.0-latest 或者 docker rmi 8be5f91b2fa1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前有哪些容器正在运行 </span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 查看所有容器 </span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">CONTAINER ID        IMAGE                                             COMMAND                  CREATED             STATUS                       PORTS                           NAMES</span><br><span class="line">b30307ad65be        zabbix/zabbix-web-nginx-mysql:centos-4.0-latest   <span class="string">&quot;docker-entrypoint.sh&quot;</span>   7 days ago          Exited (255) 8 minutes ago   443/tcp, 0.0.0.0:8080-&gt;80/tcp   zabbix-web-nginx-mysql</span><br><span class="line">0ad822cd52b7        zabbix/zabbix-server-mysql:centos-4.0-latest      <span class="string">&quot;docker-entrypoint.sh&quot;</span>   7 days ago          Exited (255) 8 minutes ago   0.0.0.0:10051-&gt;10051/tcp        zabbix-server-mysql</span><br><span class="line">d01c89a112f7        mysql:5.7                                         <span class="string">&quot;docker-entrypoint.s…&quot;</span>   7 days ago          Exited (255) 8 minutes ago   3306/tcp, 33060/tcp             mysql-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动、停止、重启容器命令：</span></span><br><span class="line">docker start container_name/container_id</span><br><span class="line">docker stop container_name/container_id</span><br><span class="line">docker restart container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动一个容器后，如果想进入到这个容器，可以使用 attach</span></span><br><span class="line">docker attach container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除容器 </span></span><br><span class="line">docker <span class="built_in">rm</span> container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器日志 </span></span><br><span class="line">docker logs -f container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器 IP 地址 </span></span><br><span class="line">docker inspect container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器 </span></span><br><span class="line">docker <span class="built_in">exec</span> -it container_name/container_id bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 Docker 容器与宿主机相互传输文件 </span></span><br><span class="line">[root@localhost tmp]<span class="comment"># docker cp --help</span></span><br><span class="line"></span><br><span class="line">Usage:docker <span class="built_in">cp</span> [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class="line">docker <span class="built_in">cp</span> [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br><span class="line"></span><br><span class="line">Copy files/folders between a container and the <span class="built_in">local</span> filesystem</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">cp</span> zabbix_config.sql mysql-server:/tmp</span><br><span class="line">docker <span class="built_in">cp</span> mysql-server:/tmp/zabbix_config.sql /tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量删除所有已经退出的容器 </span></span><br><span class="line">docker <span class="built_in">rm</span> -v $(docker ps -aq -f status=exited)</span><br><span class="line"><span class="comment"># 批量删除所有仅创建并未成功运行的容器 </span></span><br><span class="line">docker <span class="built_in">rm</span> -v $(docker ps -aq -f status=created)</span><br></pre></td></tr></table></figure><h1 id="docker-logs"><a href="#docker-logs" class="headerlink" title="docker logs"></a>docker logs</h1><p><a href="https://blog.csdn.net/yjk13703623757/article/details/80283729">删除 logs</a> 设置 logs <a href="https://docs.docker.com/engine/reference/commandline/dockerd/">Daemon configuration file</a></p><h1 id="docker-iptables"><a href="#docker-iptables" class="headerlink" title="docker iptables"></a>docker iptables</h1><p>docker 默认会修改 iptables，但有时候会造成 iptables ip 限制失效的问题。如果对 iptables 比较了解的同学，可以 <a href="https://docs.docker.com/network/iptables/">Prevent Docker from manipulating iptables</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;iptables&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>:<span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;<span class="string">&quot;max-size&quot;</span>:<span class="string">&quot;500m&quot;</span>, <span class="string">&quot;max-file&quot;</span>:<span class="string">&quot;3&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">max-size=500m，意味着一个容器日志大小上限是500M，</span><br><span class="line">max-file=3，意味着一个容器有三个日志，分别是<span class="built_in">id</span>+.json、<span class="built_in">id</span>+1.json、<span class="built_in">id</span>+2.json。</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>还有一种办法就是添加 <a href="https://docs.docker.com/network/iptables/">DOCKER-USER</a>  If you need to add rules which load before Docker’s rules, add them to the DOCKER-USER chain. These rules are loaded before any rules Docker creates automatically.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line">:DOCKER-USER - [0:0]</span><br><span class="line">-A FORWARD -j DOCKER-USER</span><br><span class="line">-A DOCKER-USER -s x.x.x.x -p tcp --dport 80 -j RETURN</span><br><span class="line">-A DOCKER-USER -p tcp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -p udp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -j RETURN</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><p>首先，安利一下 <a href="https://mp.weixin.qq.com/s/wNCfYERWU3GOBHI2juTpmg">Dockerfile 优化指南</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.7</span><br><span class="line"></span><br><span class="line">RUN apt-get update \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line">WORKDIR /usr/src/app</span><br><span class="line">COPY requirements.txt ./</span><br><span class="line">RUN pip install -r requirements.txt</span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line">EXPOSE 8000</span><br><span class="line">CMD [&quot;python&quot;, &quot;manage.py&quot;, &quot;runserver&quot;, &quot;0.0.0.0:8000&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h1><p>docker 镜像有许多的版本，不同版本间差异需要注意。举个例子，我遇到因为版本不同，ip route get 结尾多了一个 uid 0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#执行这个命令，在不同 tag 版本的 Python 镜像里，结果会不一样。</span></span><br><span class="line">ip -4 route get 8.8.8.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果多了一个 uid 会导致提取 IP 时出错。</span></span><br><span class="line">8.8.8.8 via 192.168.0.1 dev eth0 src 192.168.0.105 uid 0 </span><br><span class="line"></span><br><span class="line">8.8.8.8 via 192.168.0.1 dev eth0 src 192.168.0.105 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 两者之间的差异是因为 iproute2 版本不一样</span></span><br><span class="line"></span><br><span class="line">root@feiy:/etc/apt<span class="comment"># apt-cache policy iproute2</span></span><br><span class="line">iproute2:</span><br><span class="line">  Installed: 4.9.0-1+deb9u1</span><br><span class="line">  Candidate: 4.9.0-1+deb9u1</span><br><span class="line">  Version table:</span><br><span class="line"> *** 4.9.0-1+deb9u1 500</span><br><span class="line">        500 http://deb.debian.org/debian stretch/main amd64 Packages</span><br><span class="line">        100 /var/lib/dpkg/status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@feiy:/etc/apt<span class="comment"># apt-cache policy iproute2</span></span><br><span class="line">iproute2:</span><br><span class="line">  Installed: 4.20.0-2</span><br><span class="line">  Candidate: 4.20.0-2</span><br><span class="line">  Version table:</span><br><span class="line"> *** 4.20.0-2 500</span><br><span class="line">        500 http://deb.debian.org/debian buster/main amd64 Packages</span><br><span class="line">        100 /var/lib/dpkg/status</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="network"><a href="#network" class="headerlink" title="network"></a>network</h1><p>docker 是基于 iptables 进行流量的转发，添加了一个虚拟的网卡 docker0 。 如果想从容器内部访问宿主机的 IP，比如从 172.17.0.3 访问宿主机的内网地址 192.168.1.10 ， 我们从 tcpdump 在网卡 docker0  抓包可以看到流量。 但是在内网网卡抓包没有结果。猜测原因是：当数据包从网卡 docker0 转发后，直接在内核进入 INPUT 链。所以，如果想访问宿主机的 IP， 需要在 INPUT 添加相关规则，允许访问。  iptables -A INPUT -i docker0 -j ACCEPT</p><h1 id="mac-上使用-docker"><a href="#mac-上使用-docker" class="headerlink" title="mac 上使用 docker"></a>mac 上使用 docker</h1><ol><li>volume 的位置和 linux 不同，解决办法如下</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Library/Containers/com.docker.docker/Data/vms/0/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接进入 tty</span></span><br><span class="line">screen <span class="built_in">tty</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 tty 可以就可以找到 docker container volume</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker/volumes/</span><br></pre></td></tr></table></figure><ol start="2"><li>如果想从容器内部访问 mac，也和 Linux 不同。详情可以看官网<a href="https://docs.docker.com/docker-for-mac/networking/">docker mac network</a> 在容器内部可以使用 host.docker.internal 就可以访问到 Mac 宿主机啦。 而在 Linux 机器上, 容器可以直接使用宿主机的 IP 来访问宿主机<br>NIA_URL&#x3D;<a href="http://host.docker.internal:5000/">http://host.docker.internal:5000</a></li></ol><h1 id="docker-proxy"><a href="#docker-proxy" class="headerlink" title="docker-proxy"></a>docker-proxy</h1><p>can refer this (article)[<a href="https://mp.weixin.qq.com/s/S4aMdmQW50HR7Lj2z2-VZQ]">https://mp.weixin.qq.com/s/S4aMdmQW50HR7Lj2z2-VZQ]</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/docker/daemon.json</span></span><br><span class="line"><span class="comment"># disable docker-proxy</span></span><br><span class="line">“userland-proxy”:<span class="literal">false</span> </span><br></pre></td></tr></table></figure><h1 id="find-process"><a href="#find-process" class="headerlink" title="find process"></a>find process</h1><p>In one hosts, if we have many dockers, sometimes we need find some proceess belong to which docker.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pstree -laps [pid]</span><br><span class="line"></span><br><span class="line">pstree -laps 38564</span><br><span class="line">systemd,1</span><br><span class="line">  `-dockerd,171350</span><br><span class="line">      `-docker-containe,171362 --config /var/run/docker/containerd/containerd.toml</span><br><span class="line">          `-docker-containe,332151 -namespace moby -workdir /var/lib/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/38dfefa95c1f8b4827e0a95834119b3756775d389820ea90d95878d3518eed67 -address /var/run/docker/containerd/docker-containerd.sock -containerd-binary /usr/bin/docker-containerd -runtime-root /var/run/docker/runtime-runc</span><br><span class="line">              `-smb,332174 /usr/local/bin/smb run -e live -c <span class="built_in">id</span> -i sg</span><br><span class="line">                  `-sh,332221 -c gunicorn webapi.wsgi -c webapi/gunicorn_config.py</span><br><span class="line">                      `-gunicorn: maste,332306                                                  </span><br><span class="line">                          `-gunicorn: worke,38564                                                  </span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,38613</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83641</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83642</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83643</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83644</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83645</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83646</span><br><span class="line">                              `-&#123;gunicorn: worke&#125;,83647</span><br><span class="line"></span><br><span class="line"><span class="comment"># 38dfefa95c1f8b4827e0a95834119b3756775d389820ea90d95878d3518eed67 is container ID</span></span><br></pre></td></tr></table></figure><h1 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h1><p><a href="https://wiki.jikexueyuan.com/project/docker-technology-and-combat/commands.html">https://wiki.jikexueyuan.com/project/docker-technology-and-combat/commands.html</a></p><h1 id="docker-cron"><a href="#docker-cron" class="headerlink" title="docker cron"></a>docker cron</h1><p>cron failed <a href="http://blog.allen-mo.com/2018/04/17/docker_crontab/">http://blog.allen-mo.com/2018/04/17/docker_crontab/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 0600 /var/spool/cron/crontabs</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>singtel 路由器踩坑经历</title>
      <link href="/post/singtel/"/>
      <url>/post/singtel/</url>
      
        <content type="html"><![CDATA[<p>2019-07-26 搬新家后贫困山区终于通网了。然而当我打算修改路由器的名称(SSID)和密码的时候，却发现被坑了。</p><span id="more"></span><h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>singtel 光纤宽带，有一个光模转换器，还有一个 WiFi 路由器。如下图所示：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100707.jpg"><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100704.jpg"><br><img src="/img/misc/6.png"> </p><h1 id="踩坑过程"><a href="#踩坑过程" class="headerlink" title="踩坑过程"></a>踩坑过程</h1><p>当家里有网后，我想修改一下 WiFi 名称和密码，谷歌一下，<a href="https://www.singtel.com/personal/support/broadband/routers-ont/arcadyan-ac-plus-guide/change-wireless-settings">答案如下</a>。<br>Step 1<br>Visit <a href="http://192.168.1.254/">http://192.168.1.254</a> to view your router configuration page.  </p><p>Step 2<br>Scroll down to Device Info and Internet Connection to find the information.   </p><p>Step 3<br>By default, you will see the 2.4GHz and 5GHz wireless settings, Band Steering and WPS feature..  </p><p>Step 4<br>To apply any changes made to your Wireless settings, click on the Apply button or cancel to disregard the changes.  </p><p>我按照以上说明操作一下，结果碰到的却是如下的画面：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727101742.png"><br>当时就懵逼了，账号和密码都不知道。结果看到右上角有一个型号 hg8244h, 谷歌一下 hg8244h default password. 结果如下<br>The default network address is 192.168.1.254 and so within a browser connect to <a href="http://192.168.1.254/">http://192.168.1.254</a>. The root user login’s default password is admin and should be changed.</p><p>登录进去之后，画面如下:<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100710.png"><br>我仔仔细细找了一圈，都没有发现修改 SSID 的地方。当我点开 Lan devices, 列表里发现了一个 Singtel-ACPlus, 我才意识到我登录到光模装换器的控制台了。在这里我看到了 Singtel-ACPlus 的 mac 地址。我在自己的苹果电脑命令行查询一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp -a</span><br></pre></td></tr></table></figure><p>得到的网关 192.168.1.254 mac 地址与 Singtel-ACPlus 的 mac 地址不符合</p><p>我的电脑连接的是 WiFi 路由器，结果网关却是光模路由器。其中必有蹊跷！</p><h1 id="解决的办法"><a href="#解决的办法" class="headerlink" title="解决的办法"></a>解决的办法</h1><p>先将光模路由器和 WiFi 路由器之间的网线断开，（一定要）再重启WiFi 路由器。等待一段时间连上 WiFi, 再次访问 <a href="http://192.168.1.254/">http://192.168.1.254</a>. 这次终于大功告成！<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100713.png"><br>猜测根本原因是：两个路由器之间是桥接模（也许有错）。 WiFi 路由器连上光模路由器了，都没有自己的 IP。 真是卑微，就像我这种菜菜子，不配拥有姓名。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DevOps 中踩过的坑</title>
      <link href="/post/ops-bug/"/>
      <url>/post/ops-bug/</url>
      
        <content type="html"><![CDATA[<p>仅以本文记录那些年弟弟背过的锅！</p><span id="more"></span>  <h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><ol><li>大部分时候，iptables 只存了 filter 表。 对于 nat 表，我们一旦 restart iptables， nat 表的规则就会被刷新。建议用 reload</li><li>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT 这一条 iptables 的规则也非常重要。Packets in a RELATED or ESTABLISHED state are those ones which belong to an already opened connection; you’ll generally want to accept them, otherwise connections will get established correctly but nothing will be able to flow after the initial handshake. 如果没有这一条，会遇到 DNS 解析失败， curl 失败。 凡是 iptables 没有允许的 IP, 都不能正常的工作。 例如 DNS 查询发包后，三次握手建立。回包收到了，却会被 iptables 阻挡，上层应用无法拿到解析的结果，导致 hang 住。</li><li>tcpdump 抓包分析时， 进入的包都可以抓到，不会受到 iptables, 发出的包会受到 iptables 影响，可能被 iptables 阻挡导致抓包失败。</li><li>如果是命令行添加的规则，例如 iptables -t nat -A OUTPUT -s 172.17.0.3 -p tcp –dport 10050 -j ACCEPT  在使用 reload 后，其规则一样会被刷掉。但 docker 的规则不会被 reload 刷掉，会被 restart 刷掉。这一点有疑问，期待大神给弟弟解惑。</li><li>docker iptables filter 表 input 链规则失效，原因是：从 NAT 表 prerouting 链匹配到 DOCKER 链，直接与容器沟通，跳过了 input 链。感谢智凯哥哥的解决办法如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line">:DOCKER-USER - [0:0]</span><br><span class="line">-A FORWARD -j DOCKER-USER</span><br><span class="line">-A DOCKER-USER -s x.x.x.x -p tcp --dport 80 -j RETURN</span><br><span class="line">-A DOCKER-USER -p tcp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -p udp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -j RETURN</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure></li></ol><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><ol><li>tab 键与空格不能混用</li><li>函数不要嵌套，例如 result&#x3D;A(B(C())) 这样不利于 debug，检查每个函数的返回值</li><li>在 multiprocessing 多进程中 apply_async()  报错不容易定位，最好使用 try catch 把报错写成 log</li></ol><h1 id="jenkins"><a href="#jenkins" class="headerlink" title="jenkins"></a>jenkins</h1><ol><li>在部署的时候，ansible 一直在 gathering facts 卡住了，直到 timeout。 <a href="https://serverfault.com/questions/630253/ansible-stuck-on-gathering-facts">网友解答</a> 我遇到的是 <a href="https://docs.ansible.com/ansible/2.4/intro_configuration.html#control-path">control_path</a> 文件太多了，导致了 jenkins deploy node 卡住，任务无法进行。 需要删除该部署节点下面的 control_path_dir 的文件，清空。</li></ol><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><ol><li>docker container IP default  is 172.17.0.0&#x2F;16  检查 iptables 是否阻挡</li><li>docker -v 挂载出来的时候，要注意文件夹权限问题。</li><li>docker logs 日志文件很大的时候，记得删除。<a href="https://blog.csdn.net/yjk13703623757/article/details/80283729">Docker容器日志查看与清理</a> 也可以在 &#x2F;etc&#x2F;docker&#x2F;daemon 里<a href="https://feiyang233.club/post/docker/#docker-iptables">设置 log 的大小</a>。</li><li>dind, 见 gitlab 搭建 post</li><li><a href="https://mp.weixin.qq.com/s/LtgGcS9b8X-TqbfaLfBldQ">一次有趣的 Docker 容器网络排查</a></li></ol><h1 id="NetworkManager"><a href="#NetworkManager" class="headerlink" title="NetworkManager"></a>NetworkManager</h1><ol><li>报错 bus-manager: could not create org.freedesktop.DBus proxy 直接 stop NetworkManager 就行了。</li></ol><h1 id="文件权限问题"><a href="#文件权限问题" class="headerlink" title="文件权限问题"></a>文件权限问题</h1><ol><li>&#x2F;tmp permission 又搞我 drwxrwxrwt.</li><li>文件夹权限 folder permission 对于目录文件来说，可读表示能够读取目录内的文件列表；可写表示能够在目录内新增、删除、重命名文件；可执行表示能够进入该目录。</li><li><a href="https://www.unixtutorial.org/atime-ctime-mtime-in-unix-filesystems">atime, ctime and mtime in Unix filesystems</a></li></ol><h1 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h1><ol><li>&#x2F;etc&#x2F;resolv.conf 有两个默认的值至关重要，一个是超时的 timeout，一个是重试的 attempts，默认情况下，前者是 5s 后者是 2 次。对于日常的应用来说，包括 web server、mail client、db 以及各种 app server 等等，任何使用 glibc resolver 都需要经过 resolv.conf 文件。对于 libresolv 来说，只认 resolv.conf 的前三个 nameserver，所以写的再多也没什么意义。正常情况下，resolver 会从上至下进行解析，每个 nameserver 等待 timeout 的时间，如果一直到第三个都没结果，resolver 会重复上面的步骤 (attempts – 1) 次。</li></ol><h1 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h1><ol><li>user 模块，密码必须要加密。需要用到 <a href="https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module">Ansible ad-hoc command</a></li><li>加密文件，解密文件 <a href="https://docs.ansible.com/ansible/latest/user_guide/vault.html#id10">https://docs.ansible.com/ansible/latest/user_guide/vault.html#id10</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault encrypt file_need_encrypt</span><br><span class="line">New Vault password: </span><br><span class="line">Confirm New Vault password: </span><br><span class="line"></span><br><span class="line">ansible-vault decrypt encrypted_file </span><br><span class="line">Vault password: </span><br><span class="line">Decryption successful</span><br></pre></td></tr></table></figure></li></ol><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><ol><li>Markdown链接括号的问题: %28 代替(, %29代替) 主要是后者会歧义链接部分的结束. 这是使用url符号码去代替ascii的符号. 能够解决这个问题</li></ol><h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h1><ol><li>文件名第一个字符为空格，设置 static 时，多了一个空格 %20 ，导致资源路径出出错。</li><li>Mac Django 连接 MySQL, <a href="https://docs.djangoproject.com/en/2.2/ref/databases/#mysql-notes">官网</a>上提供了两种方法。第一种 mysqlclient 在 Mac 上有遇到错误。 <a href="https://pypi.org/project/mysqlclient/">mysqlclient 官网</a>也有说明, <a href="https://ruddra.com/posts/install-mysqlclient-macos/">Google一下</a>后发现是因为我的 Mac 没有安装 clang，安装完 xcode-select –install 再 pip install mysqlclient 就可以了。<br>第二种，安装<a href="https://dev.mysql.com/downloads/connector/python/">Connector</a> 在 setting.py 里添加<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;user_data&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;mysql.connector.django&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;mysql_user&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;autocommit&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><ol><li>内存泄漏指由于疏忽或错误造成程序未能释放已经不再使用的内存。内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，导致在释放该段内存之前就失去了对该段内存的控制，从而造成了内存的浪费。 有一个服务跑在容器里面，当连接的时候总是 time out， 查看日志 是 stream is closed，还有一个错误是 No such file or directory: u’&#x2F;var&#x2F;run&#x2F;tmp&#x2F;summary_398320.db’  当我们进入 &#x2F;var&#x2F;run&#x2F;tmp 发现有太多的文件，每一个进程都会有一个 pid 命名的文件。说明 worker 进程不断被 kill 然后又被 master 拉起，当我们到宿主机上看 docker stats ， 发现该容器的内存已经满了，导致了 worker 进程不断被杀。需要增大容器的 memory 初始值。补充（gunicorn 会启动一组 worker进程，所有worker进程公用一组listener，在每个worker中为每个listener建立一个wsgi server。每当有HTTP链接到来时，wsgi server创建一个协程来处理该链接，协程处理该链接的时候，先初始化WSGI环境，然后调用用户提供的app对象去处理HTTP请求。）</li><li><a href="https://www.cnblogs.com/wangqiguo/p/6464234.html">xargs与管道的区别</a> 其实基本上linux的命令中很多的命令的设计是先从命令行参数中获取参数，然后从标准输入中读取。另外很多程序是不处理标准输入的，例如 kill , rm 这些程序如果命令行参数中没有指定要处理的内容则不会默认从标准输入中读取。所以 xargs 可以用来传递参数</li><li>Linux fork() <a href="https://mp.weixin.qq.com/s/MsGeaWNmSVOCT7kXFrQm_g">https://mp.weixin.qq.com/s/MsGeaWNmSVOCT7kXFrQm_g</a>  printf Unix下的设备有“块设备”和“字符设备”的概念，所谓块设备，就是以一块一块的数据存取的设备，字符设备是一次存取一个字符的设备。磁盘、内存都是块设备，字符设备如键盘和串口。块设备一般都有缓存，而字符设备一般都没有缓存。</li><li><a href="https://unix.stackexchange.com/questions/351725/why-eval-the-output-of-ssh-agent">为什么需要 eval 命令启动 ssh-agent?</a></li></ol><h1 id="读取超大日志文件"><a href="#读取超大日志文件" class="headerlink" title="读取超大日志文件"></a>读取超大日志文件</h1><p>如果日志没有做切割，有可能会导致生成一个超大的日志，这个时候对应我们查看日志文件非常的不方便。这个时候有一个方法就是用 <code>split</code> 将大日志均分为小日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#按行数均分</span></span><br><span class="line"><span class="built_in">split</span> -l 10000 test.log -d -a 4 test_</span><br><span class="line"></span><br><span class="line"><span class="comment">#-l, --lines=NUMBER：对file进行切分，每个文件有NUMBER行。</span></span><br><span class="line"><span class="comment">#每个文件10000行(-l 10000)</span></span><br><span class="line"><span class="comment">#文件名称后缀系数不是字母而是数字（-d）</span></span><br><span class="line"><span class="comment">#后缀系数为四位数（-a 4）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以按文件大小均分</span></span><br><span class="line"><span class="built_in">split</span> -b test.log -d -a 4 test_</span><br><span class="line"></span><br><span class="line"><span class="comment">#-b, --bytes=SIZE：对file进行切分，每个小文件大小为SIZE。可以指定单位b,k,m,g。</span></span><br></pre></td></tr></table></figure><h1 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h1><ol><li>kafka listen all interfaces<br>In order to listen all the interfaces, comment  #host.name in &#x2F;etc&#x2F;kafka&#x2F;server.properties<br>This action can make Kafka listen in all interfaces, but it will change hostname to localhost, then Kafka cannot communicate with each other.<br>Error is the connection with node -1 failed.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Info <span class="keyword">in</span> zookeeper: <span class="string">&quot;PLAINTEXT://localhost:29092&quot;</span>],<span class="string">&quot;jmx_port&quot;</span>:9093,<span class="string">&quot;host&quot;</span>:<span class="string">&quot;localhost&quot;</span>,</span><br></pre></td></tr></table></figure>solution: Kafka can listen in all interfaces and connection with each other.<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listeners=PLAINTEXT://0.0.0.0:29092</span><br><span class="line">advertised.host.name=10.66.236.43</span><br><span class="line">host.name=10.66.236.43</span><br></pre></td></tr></table></figure></li></ol><h1 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h1><ul><li><a href="https://gist.github.com/Kovrinic/ea5e7123ab5c97d451804ea222ecd78a">gitlab url 替换</a> </li><li><a href="https://stackoverflow.com/questions/55929417/how-to-securely-git-clone-pip-install-a-private-repository-into-my-docker-image">访问私有仓库</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> elk </tag>
            
            <tag> docker </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 从入门到放弃</title>
      <link href="/post/zabbix/"/>
      <url>/post/zabbix/</url>
      
        <content type="html"><![CDATA[<p>docker 安装 zabbix, 添加主机，设置报警，性能调优。</p><span id="more"></span><h1 id="监控模式"><a href="#监控模式" class="headerlink" title="监控模式"></a>监控模式</h1><p>zabbix 有两种监控模式，主动和被动。在客户端与服务端之间还可以加一个 proxy，入下图所示<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190823152533.png"></p><p><strong>需要注意 iptables问题</strong>: 跨地区监控的时候， proxy 必须监听在所有网卡上。内网是为了和客户端通信，外网是为了和服务端通信。我曾试过 proxy 只监听在内网，因为是主动模式，层层上报信息，在 zabbix server 还是能发现 proxy 的存活。但是当我打算添加一台 host 时，却一直报错。原因就是 proxy 和 服务端是外网通信的，proxy 发包查询 host 的信息（监控项等），因为只监听内网，服务端的回包 proxy 无法获取，导致通信失败。</p><h1 id="LAMP-架构安装"><a href="#LAMP-架构安装" class="headerlink" title="LAMP 架构安装"></a>LAMP 架构安装</h1><p>基于官方的 LAMP 架构，按照最简单的原生方式来部署，不做任何多余优化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"># 安装必要依赖包 </span><br><span class="line">yum install -y httpd mariadb-server mariadb php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mhash</span><br><span class="line"></span><br><span class="line"># 修改 apache 配置 </span><br><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName 192.168.1.10:8080</span><br><span class="line">Listen 192.168.1.10:8080</span><br><span class="line">DirectoryIndex index.html index.php</span><br><span class="line"></span><br><span class="line"># 修改 php 时区 </span><br><span class="line">vim /etc/php.ini</span><br><span class="line">date.timezone = Asia/Singapore</span><br><span class="line"></span><br><span class="line"># 启动 httpd 服务 </span><br><span class="line">systemctl start httpd.service</span><br><span class="line"></span><br><span class="line"># 修改数据库存储的位置 /data</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">bind-address = 127.0.0.1</span><br><span class="line">max_connections = 1000</span><br><span class="line"></span><br><span class="line"># 最大连接数很关键，如果 zabbix-server StartPollers= 设置过大</span><br><span class="line"># 则很容易出现，connection to database &#x27;zabbix&#x27; failed: [1040] Too many connections</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"># 启动 mariadb 服务 </span><br><span class="line">systemctl start mariadb.service</span><br><span class="line"></span><br><span class="line"># 初始化 mysql 数据库，并配置 root 用户密码 </span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line"># 万一新版本忘记随机密码可以通过日志获取 </span><br><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"># 创建一个测试页，测试 LAMP 是否搭建成功 </span><br><span class="line">cat &gt; /var/www/html/index.php &lt;&lt; EOF</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 创建 zabbix 数据库 </span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &#x27;zabbix&#x27;;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"># 部署 zabbix</span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/4.2/rhel/7/x86_64/zabbix-release-4.2-2.el7.noarch.rpm</span><br><span class="line">yum clean all</span><br><span class="line">yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br><span class="line"># 输入密码 zabbix</span><br><span class="line"></span><br><span class="line"># 配置数据库用户及密码 </span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">DBSocket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"># 修改时区 </span><br><span class="line">vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value date.timezone Asia/Singapore</span><br><span class="line"></span><br><span class="line"># 启动 zabbix 并设置自启动服务 </span><br><span class="line">systemctl restart zabbix-server zabbix-agent httpd</span><br><span class="line">systemctl enable zabbix-server zabbix-agent httpd mariadb</span><br></pre></td></tr></table></figure><p>一切就绪，打开浏览器，输入 <code>http://ServerName:port/zabbix</code></p><h1 id="zabbix-server-conf-参数调优"><a href="#zabbix-server-conf-参数调优" class="headerlink" title="zabbix_server.conf 参数调优"></a>zabbix_server.conf 参数调优</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CacheSize=8G               # Host 过多时，需要增大 CacheSize</span><br><span class="line">TrendCacheSize=2G          # __zbx_mem_realloc(): out of memory (requested 108424 bytes) </span><br><span class="line">Timeout=30                 # __zbx_mem_realloc(): please increase CacheSize configuration parameter</span><br><span class="line">StartPollers=500           # Poller 会导致连接数增大。需要调大数据库的最大连接数</span><br><span class="line">StartPollersUnreachable=100</span><br><span class="line">HousekeepingFrequency=0</span><br></pre></td></tr></table></figure><h1 id="docker-搭建"><a href="#docker-搭建" class="headerlink" title="docker 搭建"></a>docker 搭建</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install docker-ce</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做数据映射后的方案 </span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/docker/mysql/zabbix/data</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/docker/zabbix/alertscripts</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/docker/zabbix/externalscripts</span><br></pre></td></tr></table></figure><p>然后是安装 zabbix 前端，后端，数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库。</span></span><br><span class="line">docker run --name mysql-server -t \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">&quot;feiyang@2019+&quot;</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">&quot;feiyang@2019+&quot;</span> \</span><br><span class="line">-v /data/zabbix_data:/var/lib/mysql  \</span><br><span class="line">-d mysql:5.7  \</span><br><span class="line">--character-set-server=utf8 --collation-server=utf8_bin</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端 参数已经调优</span></span><br><span class="line">docker run --name zabbix-server-mysql  \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">&quot;mysql-server&quot;</span>  \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">&quot;zabbix&quot;</span>  \</span><br><span class="line">-e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span>  \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">&quot;feiyang@2019+&quot;</span>  \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">&quot;feiyang@2019+&quot;</span>  \</span><br><span class="line">-e ZBX_TIMEOUT=30   \</span><br><span class="line">-e ZBX_CACHESIZE=8G  \</span><br><span class="line">-e ZBX_TRENDCACHESIZE=2G  \</span><br><span class="line">-e ZBX_STARTPOLLERS=500   \</span><br><span class="line">-e ZBX_STARTPOLLERSUNREACHABLE=100  \</span><br><span class="line">-e ZBX_HOUSEKEEPINGFREQUENCY=0  \</span><br><span class="line">-v /data/zabbix/alertscripts:/usr/lib/zabbix/alertscripts  \</span><br><span class="line">-v /data/zabbix/externalscripts:/usr/lib/zabbix/externalscripts  \</span><br><span class="line">-v /data/zabbix/conf:/etc/zabbix  \</span><br><span class="line">--<span class="built_in">link</span> mysql-server:mysql  \</span><br><span class="line">-p 10051:10051  \</span><br><span class="line">-d zabbix/zabbix-server-mysql:centos-4.2-latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前端</span></span><br><span class="line">docker run --name zabbix-web-nginx-mysql \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">&quot;mysql-server&quot;</span> \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">&quot;zabbix&quot;</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">&quot;feiyang@2019+&quot;</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">&quot;feiyang@2019+&quot;</span> \</span><br><span class="line">-e PHP_TZ=<span class="string">&quot;Asia/Singapore&quot;</span> \</span><br><span class="line">--<span class="built_in">link</span> mysql-server:mysql \</span><br><span class="line">--<span class="built_in">link</span> zabbix-server-mysql:zabbix-server \</span><br><span class="line">-p 8080:80 \</span><br><span class="line">-d zabbix/zabbix-web-nginx-mysql:centos-4.2-latest</span><br></pre></td></tr></table></figure><p>安装完成后，在浏览器打开 <a href="http://localhost:8080/">http://localhost:8080</a>  默认的账户是 <code>Admin</code>  密码是 <code>zabbix</code></p><h1 id="ansible-批量添加主机"><a href="#ansible-批量添加主机" class="headerlink" title="ansible 批量添加主机"></a>ansible 批量添加主机</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">zabbix</span> <span class="string">hosts</span></span><br><span class="line">    <span class="attr">local_action:</span></span><br><span class="line">      <span class="attr">module:</span> <span class="string">zabbix_host</span></span><br><span class="line">      <span class="attr">server_url:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; var_server_url &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">login_user:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; var_login_user &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">login_password:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; var_login_password &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">host_name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; inventory_hostname &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">visible_name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; inventory_hostname &#125;&#125;</span>-<span class="template-variable">&#123;&#123;function&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">host_groups:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; var_host_group &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">link_templates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Template</span> <span class="string">Sea</span> <span class="string">Ops</span> <span class="string">OS</span> <span class="string">Linux</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Template</span> <span class="string">Sea</span> <span class="string">Ops</span> <span class="string">Disk</span> <span class="string">IO</span> <span class="string">Linux</span></span><br><span class="line">      <span class="comment">#status: disabled</span></span><br><span class="line">      <span class="attr">status:</span> <span class="string">enabled</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">      <span class="attr">interfaces:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">main:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">useip:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">ip:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;  var_lanip | default(inventory_hostname) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">dns:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">10050</span></span><br></pre></td></tr></table></figure><h1 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h1><p>设置触发警告的 Action 时，当 Step 设置为从 1 到 0 时，会一直发送告警信息，直到事件状态变成 OK，当 Step 设置为从 1 到 1 时，则只会发送一次告警，后面不会继续发送告警信息。</p><h1 id="Zabbix-监控"><a href="#Zabbix-监控" class="headerlink" title="Zabbix 监控"></a>Zabbix 监控</h1><h2 id="监控网页状态"><a href="#监控网页状态" class="headerlink" title="监控网页状态"></a>监控网页状态</h2><p>zabbix 自带的 Web monitoring 就可以进行简单的网页监控。目前官方的 zabbix 版本是 4.2 此时日期 2019-07-09<br>首先是找到一台机器 Go to Configuration → Hosts, pick a host and click on Web in the row of that host. Then click on Create web scenario. 详情请看<a href="https://www.zabbix.com/documentation/4.2/manual/web_monitoring/example">官方文档</a>，然后是添加报警，<a href="https://www.zabbix.com/documentation/4.2/manual/web_monitoring/items">网页监控的官方文档</a>也是介绍的非常详细。<br>具体的监控图表信息，可以在 zabbix 主页的 Monitoring -&gt; Web 可以看到网页监控的详细信息。</p><h2 id="监控-DNS"><a href="#监控-DNS" class="headerlink" title="监控 DNS"></a>监控 DNS</h2><p><a href="https://www.zabbix.com/documentation/4.2/manual/config/items/itemtypes/zabbix_agent?s%5B%5D=net&s%5B%5D=dns&s%5B%5D=record">官方文档 4.2 版本</a><br>zabbix默认支持检查解析成功与否和具体的解析结果。对应内置的KEY</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net.dns[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">net.dns.record[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">ip 指DNS服务器地址。</span><br><span class="line">zone 指要解析的域名</span><br><span class="line">type 指解析的记录类型</span><br><span class="line">timeout 指超时时间 默认1 秒</span><br><span class="line">count 指解析失败重试的次数 默认 2次</span><br><span class="line"></span><br><span class="line">trigger &#123;host:net.dns[dns_server,domain,A,1,2].count(#3)&#125;=0</span><br></pre></td></tr></table></figure><h1 id="数据库表优化"><a href="#数据库表优化" class="headerlink" title="数据库表优化"></a>数据库表优化</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> `partition_create`(SCHEMANAME <span class="type">varchar</span>(<span class="number">64</span>), TABLENAME <span class="type">varchar</span>(<span class="number">64</span>), PARTITIONNAME <span class="type">varchar</span>(<span class="number">64</span>), CLOCK <span class="type">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           PARTITIONNAME = The name of the partition to create</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Verify that the partition does not already exist</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="type">INT</span>;</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema <span class="operator">=</span> SCHEMANAME <span class="keyword">AND</span> table_name <span class="operator">=</span> TABLENAME <span class="keyword">AND</span> partition_description <span class="operator">&gt;=</span> CLOCK;</span><br><span class="line"></span><br><span class="line">        IF RETROWS <span class="operator">=</span> <span class="number">0</span> <span class="keyword">THEN</span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Print a message indicating that a partition was created.</span></span><br><span class="line"><span class="comment">                   2. Create the SQL to create the partition.</span></span><br><span class="line"><span class="comment">                   3. Execute the SQL from #2.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> CONCAT( &quot;partition_create(&quot;, SCHEMANAME, &quot;,&quot;, TABLENAME, &quot;,&quot;, PARTITIONNAME, &quot;,&quot;, CLOCK, &quot;)&quot; ) <span class="keyword">AS</span> msg;</span><br><span class="line">                <span class="keyword">SET</span> <span class="variable">@sql</span> <span class="operator">=</span> CONCAT( <span class="string">&#x27;ALTER TABLE &#x27;</span>, SCHEMANAME, <span class="string">&#x27;.&#x27;</span>, TABLENAME, <span class="string">&#x27; ADD PARTITION (PARTITION &#x27;</span>, PARTITIONNAME, <span class="string">&#x27; VALUES LESS THAN (&#x27;</span>, CLOCK, <span class="string">&#x27;));&#x27;</span> );</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> <span class="variable">@sql</span>;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> `partition_drop`(SCHEMANAME <span class="type">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="type">VARCHAR</span>(<span class="number">64</span>), DELETE_BELOW_PARTITION_DATE <span class="type">BIGINT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           DELETE_BELOW_PARTITION_DATE = Delete any partitions with names that are dates older than this one (yyyy-mm-dd)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> done <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> drop_part_name <span class="type">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Get a list of all the partitions that are older than the date</span></span><br><span class="line"><span class="comment">           in DELETE_BELOW_PARTITION_DATE.  All partitions are prefixed with</span></span><br><span class="line"><span class="comment">           a &quot;p&quot;, so use SUBSTRING TO get rid of that character.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> myCursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">                <span class="keyword">SELECT</span> partition_name</span><br><span class="line">                <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">                <span class="keyword">WHERE</span> table_schema <span class="operator">=</span> SCHEMANAME <span class="keyword">AND</span> table_name <span class="operator">=</span> TABLENAME <span class="keyword">AND</span> <span class="built_in">CAST</span>(<span class="built_in">SUBSTRING</span>(partition_name <span class="keyword">FROM</span> <span class="number">2</span>) <span class="keyword">AS</span> UNSIGNED) <span class="operator">&lt;</span> DELETE_BELOW_PARTITION_DATE;</span><br><span class="line">        <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="keyword">NOT</span> FOUND <span class="keyword">SET</span> done <span class="operator">=</span> <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Create the basics for when we need to drop the partition.  Also, create</span></span><br><span class="line"><span class="comment">           @drop_partitions to hold a comma-delimited list of all partitions that</span></span><br><span class="line"><span class="comment">           should be deleted.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">SET</span> <span class="variable">@alter</span>_header <span class="operator">=</span> CONCAT(&quot;ALTER TABLE &quot;, SCHEMANAME, &quot;.&quot;, TABLENAME, &quot; DROP PARTITION &quot;);</span><br><span class="line">        <span class="keyword">SET</span> <span class="variable">@drop</span>_partitions <span class="operator">=</span> &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Start looping through all the partitions that are too old.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">OPEN</span> myCursor;</span><br><span class="line">        read_loop: LOOP</span><br><span class="line">                <span class="keyword">FETCH</span> myCursor <span class="keyword">INTO</span> drop_part_name;</span><br><span class="line">                IF done <span class="keyword">THEN</span></span><br><span class="line">                        LEAVE read_loop;</span><br><span class="line">                <span class="keyword">END</span> IF;</span><br><span class="line">                <span class="keyword">SET</span> <span class="variable">@drop</span>_partitions <span class="operator">=</span> IF(<span class="variable">@drop</span>_partitions <span class="operator">=</span> &quot;&quot;, drop_part_name, CONCAT(<span class="variable">@drop</span>_partitions, &quot;,&quot;, drop_part_name));</span><br><span class="line">        <span class="keyword">END</span> LOOP;</span><br><span class="line">        IF <span class="variable">@drop</span>_partitions <span class="operator">!=</span> &quot;&quot; <span class="keyword">THEN</span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Build the SQL to drop all the necessary partitions.</span></span><br><span class="line"><span class="comment">                   2. Run the SQL to drop the partitions.</span></span><br><span class="line"><span class="comment">                   3. Print out the table partitions that were deleted.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SET</span> <span class="variable">@full</span>_sql <span class="operator">=</span> CONCAT(<span class="variable">@alter</span>_header, <span class="variable">@drop</span>_partitions, &quot;;&quot;);</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> <span class="variable">@full</span>_sql;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SELECT</span> CONCAT(SCHEMANAME, &quot;.&quot;, TABLENAME) <span class="keyword">AS</span> `<span class="keyword">table</span>`, <span class="variable">@drop</span>_partitions <span class="keyword">AS</span> `partitions_deleted`;</span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   No partitions are being deleted, so print out &quot;N/A&quot; (Not applicable) to indicate</span></span><br><span class="line"><span class="comment">                   that no changes were made.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> CONCAT(SCHEMANAME, &quot;.&quot;, TABLENAME) <span class="keyword">AS</span> `<span class="keyword">table</span>`, &quot;N/A&quot; <span class="keyword">AS</span> `partitions_deleted`;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> `partition_maintenance`(SCHEMA_NAME <span class="type">VARCHAR</span>(<span class="number">32</span>), TABLE_NAME <span class="type">VARCHAR</span>(<span class="number">32</span>), KEEP_DATA_DAYS <span class="type">INT</span>, HOURLY_INTERVAL <span class="type">INT</span>, CREATE_NEXT_INTERVALS <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> OLDER_THAN_PARTITION_DATE <span class="type">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="type">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> OLD_PARTITION_NAME <span class="type">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> LESS_THAN_TIMESTAMP <span class="type">INT</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> CUR_TIME <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">CALL</span> partition_verify(SCHEMA_NAME, TABLE_NAME, HOURLY_INTERVAL);</span><br><span class="line">        <span class="keyword">SET</span> CUR_TIME <span class="operator">=</span> UNIX_TIMESTAMP(DATE_FORMAT(NOW(), <span class="string">&#x27;%Y-%m-%d 00:00:00&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> @__interval <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        create_loop: LOOP</span><br><span class="line">                IF @__interval <span class="operator">&gt;</span> CREATE_NEXT_INTERVALS <span class="keyword">THEN</span></span><br><span class="line">                        LEAVE create_loop;</span><br><span class="line">                <span class="keyword">END</span> IF;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SET</span> LESS_THAN_TIMESTAMP <span class="operator">=</span> CUR_TIME <span class="operator">+</span> (HOURLY_INTERVAL <span class="operator">*</span> @__interval <span class="operator">*</span> <span class="number">3600</span>);</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME <span class="operator">=</span> FROM_UNIXTIME(CUR_TIME <span class="operator">+</span> HOURLY_INTERVAL <span class="operator">*</span> (@__interval <span class="operator">-</span> <span class="number">1</span>) <span class="operator">*</span> <span class="number">3600</span>, <span class="string">&#x27;p%Y%m%d%H00&#x27;</span>);</span><br><span class="line">                IF(PARTITION_NAME <span class="operator">!=</span> OLD_PARTITION_NAME) <span class="keyword">THEN</span></span><br><span class="line">                        <span class="keyword">CALL</span> partition_create(SCHEMA_NAME, TABLE_NAME, PARTITION_NAME, LESS_THAN_TIMESTAMP);</span><br><span class="line">                <span class="keyword">END</span> IF;</span><br><span class="line">                <span class="keyword">SET</span> @__interval<span class="operator">=</span>@__interval<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">                <span class="keyword">SET</span> OLD_PARTITION_NAME <span class="operator">=</span> PARTITION_NAME;</span><br><span class="line">        <span class="keyword">END</span> LOOP;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> OLDER_THAN_PARTITION_DATE<span class="operator">=</span>DATE_FORMAT(DATE_SUB(NOW(), <span class="type">INTERVAL</span> KEEP_DATA_DAYS <span class="keyword">DAY</span>), <span class="string">&#x27;%Y%m%d0000&#x27;</span>);</span><br><span class="line">        <span class="keyword">CALL</span> partition_drop(SCHEMA_NAME, TABLE_NAME, OLDER_THAN_PARTITION_DATE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> `partition_verify`(SCHEMANAME <span class="type">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="type">VARCHAR</span>(<span class="number">64</span>), HOURLYINTERVAL <span class="type">INT</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="type">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="type">INT</span>(<span class="number">11</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> FUTURE_TIMESTAMP <span class="type">TIMESTAMP</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Check if any partitions exist for the given SCHEMANAME.TABLENAME.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema <span class="operator">=</span> SCHEMANAME <span class="keyword">AND</span> table_name <span class="operator">=</span> TABLENAME <span class="keyword">AND</span> partition_name <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * If partitions do not exist, go ahead and partition the table</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        IF RETROWS <span class="operator">=</span> <span class="number">1</span> <span class="keyword">THEN</span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * Take the current date at 00:00:00 and add HOURLYINTERVAL to it.  This is the timestamp below which we will store values.</span></span><br><span class="line"><span class="comment">                 * We begin partitioning based on the beginning of a day.  This is because we don&#x27;t want to generate a random partition</span></span><br><span class="line"><span class="comment">                 * that won&#x27;t necessarily fall in line with the desired partition naming (ie: if the hour interval is 24 hours, we could</span></span><br><span class="line"><span class="comment">                 * end up creating a partition now named &quot;p201403270600&quot; when all other partitions will be like &quot;p201403280000&quot;).</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">SET</span> FUTURE_TIMESTAMP <span class="operator">=</span> TIMESTAMPADD(<span class="keyword">HOUR</span>, HOURLYINTERVAL, CONCAT(CURDATE(), &quot; &quot;, <span class="string">&#x27;00:00:00&#x27;</span>));</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME <span class="operator">=</span> DATE_FORMAT(CURDATE(), <span class="string">&#x27;p%Y%m%d%H00&#x27;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Create the partitioning query</span></span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL <span class="operator">=</span> CONCAT(&quot;ALTER TABLE &quot;, SCHEMANAME, &quot;.&quot;, TABLENAME, &quot; PARTITION BY RANGE(`clock`)&quot;);</span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL <span class="operator">=</span> CONCAT(@__PARTITION_SQL, &quot;(PARTITION &quot;, PARTITION_NAME, &quot; VALUES LESS THAN (&quot;, UNIX_TIMESTAMP(FUTURE_TIMESTAMP), &quot;));&quot;);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Run the partitioning query</span></span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @__PARTITION_SQL;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span>`partition_maintenance_all`(SCHEMA_NAME <span class="type">VARCHAR</span>(<span class="number">32</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">&#x27;history&#x27;</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">&#x27;history_log&#x27;</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">&#x27;history_str&#x27;</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">&#x27;history_text&#x27;</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">&#x27;history_uint&#x27;</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">&#x27;trends&#x27;</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">&#x27;trends_uint&#x27;</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><p>Trends 120,(‘history’, 30, 24, 14), 最多保存 30 天的数据，每隔 24 小时生成一个分区，每次生成 14 个分区   </p><p>首先进入容器内部，将上面这个  partition.sql 导入数据库 mysql </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql  -uzabbix  -pfeiyang@2019+  zabbix  &lt; partition.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 mysql 容器内部 vim /opt/mysql.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!bin/bash</span></span><br><span class="line">mysql  -uzabbix -pfeiyang@2019+ zabbix -e<span class="string">&quot;CALL partition_maintenance_all(&#x27;zabbix&#x27;)&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 755 /opt/mysql.sh</span><br></pre></td></tr></table></figure><p>退出容器，在宿主机上，建立定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/crontab</span></span><br><span class="line"></span><br><span class="line">23 03  * * * root /bin/docker <span class="built_in">exec</span> [mysql 容器 ID] bash -c  <span class="string">&quot;cd /opt &amp;&amp; bash mysql.sh&quot;</span> </span><br><span class="line"></span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure><h1 id="Zabbix-api"><a href="#Zabbix-api" class="headerlink" title="Zabbix api"></a>Zabbix api</h1><p><a href="https://www.zabbix.com/documentation/current/manual/api">官方文档</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># auth_zabbix</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://IP:port/api_jsonrpc.php&#x27;</span>  <span class="comment">#docker 方式</span></span><br><span class="line"><span class="comment"># 非 docker 方式为 &quot;http://IP:port/zabbix/api_jsonrpc.php&quot;</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;user.login&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;user&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&quot;xxx&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,  </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">post_header = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(ret)</span></span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> zabbix_ret.has_key(<span class="string">&#x27;result&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;login error&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> zabbix_ret.get(<span class="string">&#x27;result&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get hostid</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://IP:port/api_jsonrpc.php&#x27;</span></span><br><span class="line"></span><br><span class="line">server_list=[<span class="string">&quot;1.1.1.1&quot;</span>,<span class="string">&quot;233.233.233.233&quot;</span>]</span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;host.get&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;host&quot;</span>: server_list</span><br><span class="line">        &#125;,</span><br><span class="line">    <span class="string">&quot;sortfield&quot;</span>: <span class="string">&quot;host&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;auth&quot;</span>: <span class="string">&quot;由上文中的 auth_zabbix.py 得出&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> zabbix_ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> zabbix_ret.has_key(<span class="string">&#x27;result&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;login error&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> zabbix_ret.get(<span class="string">&#x27;result&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">hostid_list=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> zabbix_ret.get(<span class="string">&#x27;result&#x27;</span>):</span><br><span class="line">hostid_list.append(<span class="built_in">str</span>(i[<span class="string">&#x27;hostid&#x27;</span>]))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> hostid_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get hist_data</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = datetime.date.today()</span><br><span class="line">today_unix = <span class="built_in">int</span>(time.mktime(today.timetuple()))</span><br><span class="line">tomorrow = today+datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">tomorrow_unix = <span class="built_in">int</span>(time.mktime(tomorrow.timetuple()))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> today_unix</span><br><span class="line"><span class="built_in">print</span> tomorrow_unix</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://IP:port/api_jsonrpc.php&#x27;</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;history.get&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;output&quot;</span>: <span class="string">&quot;extend&quot;</span>,</span><br><span class="line">        <span class="string">&quot;history&quot;</span>: <span class="number">3</span>, <span class="comment"># 0,1,2,3,4 History object types</span></span><br><span class="line">        <span class="string">&quot;itemids&quot;</span>: <span class="string">&quot;31023&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sortfield&quot;</span>: <span class="string">&quot;clock&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sortorder&quot;</span>: <span class="string">&quot;DESC&quot;</span>,</span><br><span class="line">        <span class="string">&quot;time_from&quot;</span>: <span class="string">&quot;today_unix&quot;</span>,</span><br><span class="line">        <span class="string">&quot;time_till&quot;</span>: <span class="string">&quot;tomorrow_unix&quot;</span></span><br><span class="line">       </span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;auth&quot;</span>: <span class="string">&quot;由上文中的 auth_zabbix.py 得出&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> zabbix_ret.get(<span class="string">&#x27;result&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get trend_data</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = datetime.date.today()</span><br><span class="line">today_unix = <span class="built_in">int</span>(time.mktime(today.timetuple()))</span><br><span class="line">tomorrow = today+datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">tomorrow_unix = <span class="built_in">int</span>(time.mktime(tomorrow.timetuple()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://IP:port/api_jsonrpc.php&#x27;</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;trend.get&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;output&quot;</span>: [  <span class="comment"># 定义 output 格式</span></span><br><span class="line">            <span class="string">&quot;itemid&quot;</span>,</span><br><span class="line">            <span class="string">&quot;clock&quot;</span>, <span class="comment"># 当前时间</span></span><br><span class="line">            <span class="string">&quot;num&quot;</span>,   <span class="comment"># trend 一小时采集次数</span></span><br><span class="line">            <span class="string">&quot;value_min&quot;</span>,</span><br><span class="line">            <span class="string">&quot;value_avg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;value_max&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        </span><br><span class="line">        <span class="string">&quot;itemids&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;28959&quot;</span>,</span><br><span class="line">            <span class="string">&quot;28972&quot;</span></span><br><span class="line">            </span><br><span class="line">        ],</span><br><span class="line">        </span><br><span class="line">        <span class="string">&quot;time_from&quot;</span>: today_unix,</span><br><span class="line">        <span class="string">&quot;time_till&quot;</span>: tomorrow_unix</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;auth&quot;</span>: <span class="string">&quot;由上文中的 auth_zabbix.py 得出&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (zabbix_ret.get(<span class="string">&#x27;result&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="zabbix-get"><a href="#zabbix-get" class="headerlink" title="zabbix_get"></a>zabbix_get</h1><p>从 server 端检测到 client 端的网络是否通畅，可能是 iptables 或者 server host 白名单造成的问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 10.10.1.1 -k system.uname</span><br></pre></td></tr></table></figure><h1 id="zabbix-proxy"><a href="#zabbix-proxy" class="headerlink" title="zabbix proxy"></a>zabbix proxy</h1><p>如果 server cluster 规模不大，则我们可以采用被动模式（对 client 而言是被动的，被 zabbix server来拉取数据）。如果集群规模大，那么 zabbix server 的压力就很大了，如果要去抓取的客户端数量过于庞大。 还有一种建议用 proxy 模式的情况是跨地区监控，集中到一台中心 zabbix， 方便管理。<br>本次演示，我们用了三台机器，client: 10.66.236.98 , proxy: 10.66.236.99 , zabbix_server: 10.66.236.100 （可用上文的 docker 方式安装），非 docker 方式可用参考 <a href="https://wsgzao.github.io/post/zabbix/">奥哥博客</a></p><ol><li>首先是安装 zabbix proxy 在 10.66.236.99 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zabbix proxy 的依赖就只有数据库了，用于存储配置信息 </span></span><br><span class="line">yum install -y mariadb-server mariadb</span><br><span class="line"><span class="comment"># 启动 mariadb 服务 </span></span><br><span class="line">systemctl start mariadb.service</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb.service</span><br><span class="line"><span class="comment"># 初始化 mysql 数据库，并配置 root 用户密码 </span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"><span class="comment"># 初始化，然后输入密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 zabbix_proxy 数据库 </span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix_proxy character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix_proxy.* to zabbix@localhost identified by <span class="string">&#x27;zabbix&#x27;</span>;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署 zabbix_proxy 4.2 版本的</span></span><br><span class="line">rpm -Uvh  https://repo.zabbix.com/zabbix/4.2/rhel/7/x86_64/zabbix-release-4.2-2.el7.noarch.rpm</span><br><span class="line">yum install -y zabbix-proxy-mysql</span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql*/schema.sql.gz | mysql -uzabbix -p zabbix_proxy</span><br><span class="line"><span class="comment">#输入密码: zabbix</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库用户及密码 </span></span><br><span class="line">vim /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">Server=10.66.236.100   <span class="comment">#填写 zabbix server 的IP</span></span><br><span class="line">Hostname=zabbix_proxy</span><br><span class="line">DBName=zabbix_proxy</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网页上配置 Zabbix Server Proxy</span></span><br><span class="line">Administration -&gt; Proxies -&gt; Create proxy</span><br><span class="line">Proxy name: zabbix_proxy</span><br><span class="line">Proxy mode: Active</span><br><span class="line">Proxy address: 10.66.236.99</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 zabbix_proxy</span></span><br><span class="line">systemctl restart zabbix-proxy</span><br></pre></td></tr></table></figure></li></ol><p>如果是 Active 模式，这里不需要填写 IP， Passive 被动模式才一定要填写 IP<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822173033.png"></p><ol start="2"><li><p>修改 client 端的配置 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 zabbix_agent 配置指向 zabbix_proxy</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">ServerActive=10.66.236.99  <span class="comment">#proxy 的 IP</span></span><br><span class="line">Hostname=10.66.236.98  <span class="comment">#本机的 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 zabbix_agent</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure></li><li><p>在网页上添加 host</p></li></ol><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822173036.png"><br>一定要选择 proxy，IP 就填写 0.0.0.0  还有一个非常重要的就是 template 所有的 item 需要采用 Zabbix agent (active)</p><h1 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h1><ol><li>在测试 proxy 时，host name 不匹配造成的，我最开始随便填了一个 hostname ， 然后发现和 agent config 不一致，又在zabbix 网页上更新为 10.66.236.98 ，感觉数据库并没有更新，所以导致 host name 匹配不了，一直报错 no active checks on server no active checks on server [10.66.236.99:10051]: host [10.66.236.98] not found<br>解决的办法是：重新删除了 host , 再添加上 ，一次性填对了 host name 10.66.236.98 就可以了</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络相关</title>
      <link href="/post/network/"/>
      <url>/post/network/</url>
      
        <content type="html"><![CDATA[<p>记录网络相关知识与 Linux 网络相关的命令。</p><span id="more"></span><h1 id="tools"><a href="#tools" class="headerlink" title="tools"></a>tools</h1><p>好工具分享：<a href="https://www.youtube.com/watch?v=s6jPU8V1_8A">https://www.youtube.com/watch?v=s6jPU8V1_8A</a><br>github 地址：<a href="https://github.com/oh-my-docker/net-box">https://github.com/oh-my-docker/net-box</a></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol start="0"><li><a href="https://mp.weixin.qq.com/s/bUy220-ect00N4gnO0697A">图解网络</a></li><li><a href="https://mp.weixin.qq.com/s/TxcX8Xlp62Rpqo9NEsoLqA">TCP&#x2F;IP 三次握手与四次挥手</a></li><li><a href="https://mp.weixin.qq.com/s/yuwZ24gMMZsLta3psgYuPg">HTTPS 原理分析</a></li><li><a href="https://mp.weixin.qq.com/s/XmCMkgT_F5-bfHzxYQYsJQ">Iptables其底层架构 Netfilter</a></li><li><a href="https://mp.weixin.qq.com/s/TLeKpbHMLZ4hBFcz3vjbsg">面对 DDoS，实现在 1 秒内丢弃掉 1000 万个网络数据包攻击</a></li><li><a href="https://mp.weixin.qq.com/s/HDHK_U6aTspzXMUgNyQ91g">3 个 Linux 中快速检测端口的小技巧</a></li><li><a href="https://mp.weixin.qq.com/s/Z4X29GfZ_yRnuc2OblXF_A">HTTPS 需要 7 次握手</a></li></ol><h1 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h1><ol><li><a href="http://www.cnblogs.com/peida/archive/2013/03/05/2943698.html">route</a> 某些 IP 段故障</li><li><a href="https://blog.einverne.info/post/2017/11/mtr-usage.html">mtr</a> 连通性测试<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -I / --interface 网卡</span></span><br><span class="line"><span class="comment"># -n 不进行域名解析，显示 IP</span></span><br><span class="line"><span class="comment"># -c 定义数据包数量</span></span><br><span class="line"><span class="comment"># -r 生成报告</span></span><br><span class="line"><span class="comment"># --tcp / -T 或者 --udp / -u 或者 -S / --sctp, 默认是 icmp</span></span><br><span class="line"><span class="comment"># --port / -P</span></span><br><span class="line"></span><br><span class="line">root@ubuntu20:~<span class="comment"># mtr -n -c 3 -r --tcp --port 80  192.168.1.108</span></span><br><span class="line">Start: 2021-05-25T11:33:27+0000</span><br><span class="line">HOST: ubuntu20                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.2               0.0%     3    0.2   0.4   0.2   0.7   0.2</span><br><span class="line">  2.|-- 192.168.1.108              0.0%     3    1.0   0.9   0.8   1.0   0.1</span><br><span class="line"></span><br><span class="line">root@ubuntu20:~<span class="comment"># mtr -n -c 3 -r  192.168.1.125 </span></span><br><span class="line">Start: 2021-05-25T11:38:34+0000</span><br><span class="line">HOST: ubuntu20                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.2               0.0%     3    0.3   0.4   0.3   0.5   0.2</span><br><span class="line">  2.|-- 192.168.1.125              0.0%     3  107.3  66.8   4.6 107.3  54.7</span><br></pre></td></tr></table></figure></li><li><a href="http://cn.linux.vbird.org/linux_server/0140networkcommand_1.php">Linux 常用网络指令</a></li><li><a href="https://wsgzao.github.io/post/iptables/">iptables 奥哥篇</a></li><li><a href="http://cn.linux.vbird.org/linux_server/0250simple_firewall_5.php">iptables-NAT</a></li><li><a href="http://man.linuxde.net/iperf">iperf</a> <a href="https://docs.azure.cn/zh-cn/articles/azure-operations-guide/virtual-network/aog-virtual-network-iperf-bandwidth-test">测试网速</a>的工具</li><li>删除网卡 ip link delete  [网卡名称]</li><li>检查未被正确关闭的文件 <a href="https://www.cnblogs.com/276815076/p/3503923.html">lsof</a> 或者 <a href="https://mp.weixin.qq.com/s/o3Q-aiOWbn8s4jrwpf-4Qg">linux中如何解决文件已删除但空间不释放的案例</a></li><li>磁盘监控命令<a href="https://www.cnblogs.com/peida/archive/2012/12/28/2837345.html">iostat</a></li><li>高 disk IO 检查: <strong>iotop -oP</strong>  看哪个进程占用大量的 disk IO</li><li>查看链接状态<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">netstat -n | awk <span class="string">&#x27;/^tcp/ &#123;++state[$NF]&#125; END &#123;for(key in state) print key,&quot;\t&quot;,state[key]&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 如下结果</span></span><br><span class="line">FIN_WAIT2  5683</span><br><span class="line">SYN_RECV  311</span><br><span class="line">CLOSE_WAIT  3</span><br><span class="line">TIME_WAIT  127952</span><br><span class="line">ESTABLISHED  52032</span><br><span class="line">FIN_WAIT1  22345</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>What is a TCP Reset <a href="https://www.corvil.com/kb/what-is-a-tcp-reset-rst">RST</a>  </li><li>QPS TPS CCU Throughput <a href="https://mp.weixin.qq.com/s/JcvoziRPFxt-vphBOLpvyQ">https://mp.weixin.qq.com/s/JcvoziRPFxt-vphBOLpvyQ</a></li></ol><h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><p>iptables 默认有 4 个表</p><ul><li>nat 表（地址转换表）</li><li>filter 表（数据过滤表）</li><li>raw 表（状态跟踪表）</li><li>mangle 表（包标记表）</li></ul><p>每个表都有一组内置链，用户还可以添加自定义的链。最重要的内置链是 filter 表中的 INPUT、OUTPUT 和 FORWARD 链。</p><ul><li>INPUT 链（入站规则）</li><li>OUTPUT 链（出站规则）</li><li>FORWARD 链（转发规则）</li><li>PREROUTING 链（路有前规则）</li><li>POSTROUTING 链（路由后规则）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">iptables -t  nat  -nL   # 查看 nat 表</span><br><span class="line">iptables -t 表名 -N 自定义链名 # 创建一个链</span><br><span class="line">iptables -t 表名 -L  default filter</span><br><span class="line">iptables -t 表名 -L 链名</span><br><span class="line">iptables -t 表名 -nL --line</span><br><span class="line">iptables -t 表名 -D 链名 要删除的序号</span><br><span class="line">iptables -t 表名 -P 链名 动作    修改默认规则 DROP</span><br><span class="line">-A INPUT -m iprange --src-range x.x.x.x-x.x.x.x  -p tcp --dport 11211 -j ACCEPT #多 IP</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT  #多端口</span><br><span class="line">类型匹配 -p tcp udp udplite icmp icmpv6 esp ah sctp mh</span><br><span class="line">转发功能 cat /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><h1 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h1><h2 id="Public-IP"><a href="#Public-IP" class="headerlink" title="Public IP"></a>Public IP</h2><ul><li>Class A: 0.x.x.x ~ 127.x.x.x</li><li>Class B: 128.x.x.x ~ 191.x.x.x</li><li>Class C: 192.x.x.x ~ 223.x.x.x</li><li>Class D: 224.x.x.x ~ 239.x.x.x  #multicast</li><li>Class E: 240.x.x.x ~ 255.x.x.x  #保留</li></ul><h2 id="Private-IP"><a href="#Private-IP" class="headerlink" title="Private IP"></a>Private IP</h2><ul><li><p>Class A: 10.0.0.0 ~ 10.255.255.255</p></li><li><p>Class B: 172.16.0.0 ~ 172.31.255.255</p></li><li><p>Class C: 192.168.0.0 ~ 192.168.255.255 </p></li><li><p>169.254.x.x  临时 IP DHCP is full. 就用这个 IP</p></li></ul><h2 id="Loopback-IP"><a href="#Loopback-IP" class="headerlink" title="Loopback IP"></a>Loopback IP</h2><ul><li>Class A: 127.0.0.1&#x2F;8</li></ul><h1 id="设置-NAT-server"><a href="#设置-NAT-server" class="headerlink" title="设置 NAT server"></a>设置 NAT server</h1><p>开启转发功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward=1 <span class="comment"># 添加此行，开启转发功能</span></span><br><span class="line"></span><br><span class="line">sysctl -p    <span class="comment"># 执行生效</span></span><br></pre></td></tr></table></figure><p>还需要在 iptable 里设置转发规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line">*nat</span><br><span class="line">:PREROUTING ACCEPT [0:0]</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">:POSTROUTING ACCEPT [0:0]</span><br><span class="line">-A POSTROUTING -o em2 -j MASQUERADE</span><br><span class="line">COMMIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># em2 是公网网卡，当其他内网机器设置 NAT 机器的内网 IP 为网关时。 </span></span><br><span class="line"><span class="comment"># 内网机器发包给 NAT 机器， NAT 机器根据路由规则，将会由 em2 公网网卡转发出去。</span></span><br><span class="line"><span class="comment"># 转发时，会将包的源 IP 替换为自己公网的 IP</span></span><br></pre></td></tr></table></figure><h1 id="网络扫描"><a href="#网络扫描" class="headerlink" title="网络扫描"></a>网络扫描</h1><p>安装 <a href="https://nmap.org/download.html">nmap 官网</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">rpm -vhU https://nmap.org/dist/nmap-7.80-1.x86_64.rpm</span><br><span class="line"><span class="comment"># yum install nmap 版本比较老</span></span><br><span class="line"><span class="comment">#主机发现 ICMP ARP 两种方式</span></span><br><span class="line">nmap -v -n -sn -PE 192.168.21.0/24</span><br><span class="line"><span class="comment"># -v 指定详细输出</span></span><br><span class="line"><span class="comment"># -n 不进行 DNS 解析</span></span><br><span class="line"><span class="comment"># -sn 使用 ping 扫描，禁用端口扫描</span></span><br><span class="line"><span class="comment"># -PE 指定使用 ICMP Echo Request 发现主机</span></span><br><span class="line"><span class="comment"># 192.168.21.0/24 为目标网段</span></span><br><span class="line"><span class="comment"># -PR 指定使用 ARP Request 发现主机</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP Connect 端口扫描</span></span><br><span class="line">nmap  -v -n -sT --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"></span><br><span class="line"><span class="comment"># -sT 使用 TCP Connect </span></span><br><span class="line"><span class="comment"># --max-retries 每个端口最多重试的次数</span></span><br><span class="line"><span class="comment"># -p1-65535 指定端口的扫描范围</span></span><br><span class="line"><span class="comment"># 192.168.21.19 为被扫描主机的 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP SYN 端口扫描,导致服务器出现大量的半连接</span></span><br><span class="line">nmap  -v -n -sS --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"></span><br><span class="line"><span class="comment"># -sS 使用 TCP SYN </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># UDP 扫描</span></span><br><span class="line">nmap  -v -n -sU --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"><span class="comment"># -sU 使用 UDP 进行扫描</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 识别指定端口应用</span></span><br><span class="line">nmap  -v -n -sV -p2333 192.168.21.19</span><br><span class="line"><span class="comment"># -sV 指定识别该端口上的应用</span></span><br></pre></td></tr></table></figure><h1 id="tcpdump-抓包分析"><a href="#tcpdump-抓包分析" class="headerlink" title="tcpdump 抓包分析"></a>tcpdump 抓包分析</h1><ul><li>进入 INPUT 的流量不会被 iptable 影响</li><li>出口 OUTPIT 流量会受到 iptable 影响</li></ul><h1 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h1><ul><li>ping 默认发 4、5 个包</li><li>traceroute 显示的是不同 AS 之间的跳数。其实一个 AS 内部可能有很多路由器，TTL 与实际跳数是不符合的。</li></ul><h1 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h1><ul><li>三次握手建立连接</li><li>四次分手，等待 2 MSL</li><li>只走一条路径</li><li><a href="https://mp.weixin.qq.com/s/TxcX8Xlp62Rpqo9NEsoLqA">详细介绍</a></li></ul><h1 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h1><ul><li>更轻更快</li><li>多条路径同时发送</li></ul><h1 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h1><ul><li>域名基础知识  <a href="https://support.google.com/a/answer/2573637">https://support.google.com/a/answer/2573637</a></li><li>DNS 基础知识  <a href="https://support.google.com/a/answer/48090?hl=zh-Hans">https://support.google.com/a/answer/48090?hl=zh-Hans</a></li><li>SPF 记录：原理、语法及配置方法简介 <a href="https://www.renfei.org/blog/introduction-to-spf.html">https://www.renfei.org/blog/introduction-to-spf.html</a></li></ul><h1 id="DDos-攻击"><a href="#DDos-攻击" class="headerlink" title="DDos 攻击"></a>DDos 攻击</h1><p>DDOS 攻击，它在短时间内发起大量请求，耗尽服务器的资源，无法响应正常的访问，造成网站实质下线。DDOS 里面的 DOS 是 denial of service（停止服务）的缩写，表示这种攻击的目的，就是使得服务中断。最前面的那个 D 是 distributed （分布式），表示攻击不是来自一个地方，而是来自四面八方，因此更难防。</p><ol><li>比较常见的一种攻击是 cc 攻击。它就是简单粗暴地送来大量正常的请求，超出服务器的最大承受量，导致宕机。</li><li>SYN攻击属于DoS攻击的一种，它利用TCP协议缺陷，通过发送大量的半连接请求，耗费CPU和内存资源。SYN攻击除了能影响主机外，还可以危害路由器、防火墙等网络系统，事实上SYN攻击并不管目标是什么系统，只要这些系统打开TCP服务就可以实施。服务器接收到连接请求（syn&#x3D; j），将此信息加入未连接队列，并发送请求包给客户（syn&#x3D;k,ack&#x3D;j+1），此时进入SYN_RECV状态。当服务器未收到客户端的确认包时，重发请求包，一直到超时，才将此条目从未连接队列删除。配合IP欺骗，SYN攻击能达到很好的效果，通常，客户端在短时间内伪造大量不存在的IP地址，向服务器不断地发送syn包，服务器回复确认包，并等待客户的确认，由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，目标系统运行缓慢，严重者引起网络堵塞甚至系统瘫痪。</li></ol><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><ol><li>docker container IP default  is 172.17.0.0&#x2F;16  检查 iptables 是否阻挡</li><li>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT 这一条 iptables 的规则也非常重要。Packets in a RELATED or ESTABLISHED state are those ones which belong to an already opened connection; you’ll generally want to accept them, otherwise connections will get established correctly but nothing will be able to flow after the initial handshake. 如果没有这一条，会遇到 DNS 解析失败， curl 失败。 凡是 iptables 没有允许的 IP, 都不能正常的工作。 例如 DNS 查询发包后，三次握手建立。回包收到了，却会被 iptables 阻挡，上层应用无法拿到解析的结果，导致 hang 住。</li><li>抓包分析时， 进入的包都可以抓到，不会受到 iptables, 发出的包会受到 iptables 影响，可能被 iptables 阻挡导致抓包失败。</li><li>在此衷心的感谢，皇族后裔，八旗子弟，爱新觉罗·高Li，提供的帮助！</li><li>IP 冲突，导致服务不稳定。需要使用 arping -c 3  -I em2 192.168.1.1</li><li>docker 服务失败导致 telnet 不通，抓包表现为 宿主机收到了 telnet 的包，但不会转发给容器内部。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost feiyang]<span class="comment"># tcpdump -i any port 9200  -nnn</span></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">21:44:12.657584 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [S], <span class="built_in">seq</span> 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657654 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [S], <span class="built_in">seq</span> 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657658 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [S], <span class="built_in">seq</span> 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657711 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [S.], <span class="built_in">seq</span> 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657711 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [S.], <span class="built_in">seq</span> 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657727 IP 192.168.1.89.9200 &gt; 192.168.1.78.12118: Flags [S.], <span class="built_in">seq</span> 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657913 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:44:12.657921 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:44:12.657922 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:45:31.315560 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [F.], <span class="built_in">seq</span> 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315596 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [F.], <span class="built_in">seq</span> 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315598 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [F.], <span class="built_in">seq</span> 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315985 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [F.], <span class="built_in">seq</span> 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.315985 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [F.], <span class="built_in">seq</span> 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.316012 IP 192.168.1.89.9200 &gt; 192.168.1.78.12118: Flags [F.], <span class="built_in">seq</span> 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.316225 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [.], ack 2, win 229, length 0</span><br><span class="line">21:45:31.316277 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 2, win 229, length 0</span><br><span class="line">21:45:31.316279 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 2, win 229, length 0</span><br></pre></td></tr></table></figure></li></ol><h1 id="ubuntu16-network-config"><a href="#ubuntu16-network-config" class="headerlink" title="ubuntu16 network config"></a>ubuntu16 network config</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># /etc/network/interfaces</span><br><span class="line"></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eno1</span><br><span class="line">iface eno1 inet manual</span><br><span class="line">    bond-master bond0</span><br><span class="line"></span><br><span class="line">auto eno2</span><br><span class="line">iface eno2 inet manual</span><br><span class="line">    bond-master bond0</span><br><span class="line"></span><br><span class="line">auto bond0</span><br><span class="line">iface bond0 inet manual</span><br><span class="line">    bond-slaves eno1 eno2</span><br><span class="line">    bond-mode 4</span><br><span class="line">    bond-miimon 100</span><br><span class="line">    bond-lacp-rate 1</span><br><span class="line">    bond-xmit_hash_policy layer3+4</span><br><span class="line"></span><br><span class="line">auto bond0.1000</span><br><span class="line">iface bond0.1000 inet static</span><br><span class="line">    address 10.1.1.10</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 10.1.1.254</span><br><span class="line">    vlan-raw-device bond0</span><br><span class="line"></span><br><span class="line">#----------------------------------</span><br><span class="line">#ubuntu default</span><br><span class="line"># The loopback network interface</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"># The primary network interface</span><br><span class="line">auto ens33</span><br><span class="line">iface ens33 inet dhcp</span><br></pre></td></tr></table></figure><h1 id="ubuntu20-network-config"><a href="#ubuntu20-network-config" class="headerlink" title="ubuntu20 network config"></a>ubuntu20 network config</h1><p>在Ubuntu20.04中已经不使用&#x2F;etc&#x2F;networks&#x2F;interface来配置网络了，而是使用netplan配置网络：<br>参考 </p><ul><li><a href="https://blog.csdn.net/fansnn/article/details/105930009">https://blog.csdn.net/fansnn/article/details/105930009</a> </li><li><a href="https://linuxconfig.org/how-to-configure-static-ip-address-on-ubuntu-18-04-bionic-beaver-linux">How to configure static IP address on Ubuntu 18.04 Bionic Beaver Linux</a></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is the network config written by &#x27;subiquity&#x27;</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens33:</span></span><br><span class="line">      <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.17</span><span class="number">.5</span><span class="string">/24</span>]</span><br><span class="line">      <span class="attr">optional:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">no</span></span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">192.168</span><span class="number">.17</span><span class="number">.2</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">        <span class="attr">addresses:</span> [<span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>,<span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>]</span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">renderer:</span> <span class="string">networkd</span></span><br></pre></td></tr></table></figure><h1 id="docker-network"><a href="#docker-network" class="headerlink" title="docker network"></a>docker network</h1><p><a href="https://mp.weixin.qq.com/s/LtgGcS9b8X-TqbfaLfBldQ">一次有趣的 Docker 容器网络排查</a><br>把内核选项 <code>net.netfilter.nf_conntrack_tcp_be_liberal</code> 设置为 1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w <span class="string">&quot;net.netfilter.nf_conntrack_tcp_be_liberal=1&quot;</span></span><br><span class="line">net.netfilter.nf_conntrack_tcp_be_liberal = 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Sheet API 学习</title>
      <link href="/post/google-api/"/>
      <url>/post/google-api/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-修改-Google-sheet"><a href="#Python-修改-Google-sheet" class="headerlink" title="Python 修改 Google sheet"></a>Python 修改 Google sheet</h1><p><a href="https://developers.google.com/sheets/api/quickstart/python">官方文档</a><br>记录一下自己调用 Google Api 的方法。</p><span id="more"></span><h1 id="几个重要的概念"><a href="#几个重要的概念" class="headerlink" title="几个重要的概念"></a>几个重要的概念</h1><ol><li>spreadsheetId 整个总表的 ID 是很长的一串字符 </li><li>sheetId 单页的 ID 是纯数字</li></ol><h1 id="Get"><a href="#Get" class="headerlink" title="Get"></a>Get</h1><p>获取数据<a href="https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/get">get 方法</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SAMPLE_SPREADSHEET_ID = spreadsheetId</span><br><span class="line">SAMPLE_RANGE_NAME = <span class="string">&#x27;feiyang!G1:G4&#x27;</span></span><br><span class="line"></span><br><span class="line">sheet = service.spreadsheets()</span><br><span class="line">result = sheet.values().get(spreadsheetId=SAMPLE_SPREADSHEET_ID,</span><br><span class="line">                            <span class="built_in">range</span>=SAMPLE_RANGE_NAME).execute()</span><br><span class="line">values = result.get(<span class="string">&#x27;values&#x27;</span>, [])</span><br></pre></td></tr></table></figure><h1 id="Append-Data"><a href="#Append-Data" class="headerlink" title="Append Data"></a>Append Data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">range_ = <span class="string">&#x27;capacity-raw!A:E&#x27;</span>  <span class="comment"># 表内的页名称 ! 范围</span></span><br><span class="line">value_input_option = <span class="string">&#x27;USER_ENTERED&#x27;</span>  </span><br><span class="line">insert_data_option = <span class="string">&#x27;INSERT_ROWS&#x27;</span>  </span><br><span class="line"></span><br><span class="line">value_range_body = &#123;</span><br><span class="line">    <span class="string">&quot;range&quot;</span>: <span class="string">&quot;capacity-raw!A:E&quot;</span>,</span><br><span class="line"><span class="string">&quot;values&quot;</span>: getdata.get_data(today,product),</span><br><span class="line"><span class="string">&quot;majorDimension&quot;</span>: <span class="string">&quot;ROWS&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request = service.spreadsheets().values().append(spreadsheetId=spreadsheet_id, <span class="built_in">range</span>=range_, valueInputOption=value_input_option, insertDataOption=insert_data_option, body=value_range_body)</span><br><span class="line">response = request.execute()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Update-Data"><a href="#Update-Data" class="headerlink" title="Update Data"></a>Update Data</h1><p>举个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SAMPLE_SPREADSHEET_ID = <span class="string">&#x27;xxxxxxxxx&#x27;</span></span><br><span class="line">SAMPLE_RANGE_NAME = <span class="string">&#x27;daily_report!A9:D9&#x27;</span></span><br><span class="line">value_input_option = <span class="string">&quot;RAW&quot;</span>  <span class="comment"># 还有其他的方式</span></span><br><span class="line">value_body = &#123;</span><br><span class="line">    <span class="string">&quot;majorDimension&quot;</span>: <span class="string">&quot;ROWS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;range&quot;</span>: <span class="string">&quot;daily_report!A9:D9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;values&quot;</span>: [[<span class="string">&quot;test&quot;</span>,<span class="string">&quot;123&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>]],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sheet = service.spreadsheets()</span><br><span class="line">result = sheet.values().update(spreadsheetId=SAMPLE_SPREADSHEET_ID,</span><br><span class="line">                            <span class="built_in">range</span>=SAMPLE_RANGE_NAME, valueInputOption=value_input_option,body=value_body)</span><br><span class="line"></span><br><span class="line">response = result.execute()</span><br><span class="line">pprint(response)</span><br></pre></td></tr></table></figure><h1 id="Sheet-Operation"><a href="#Sheet-Operation" class="headerlink" title="Sheet Operation"></a>Sheet Operation</h1><p>删除行，插入行，复制一行，最重要的是 post body 格式。 官方文档写得不够详细。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">delete_body =<span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;requests&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;deleteDimension&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;sheetId&quot;</span><span class="punctuation">:</span> <span class="number">233333333</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;dimension&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ROWS&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;startIndex&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;endIndex&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">insert_body =<span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;requests&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;insertDimension&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;sheetId&quot;</span><span class="punctuation">:</span> <span class="number">233333333</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;dimension&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ROWS&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;startIndex&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;endIndex&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">copy_body =<span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;requests&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;copyPaste&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;sheetId&quot;</span><span class="punctuation">:</span> <span class="number">233333333</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;startRowIndex&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;endRowIndex&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;startColumnIndex&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;endColumnIndex&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;destination&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;sheetId&quot;</span><span class="punctuation">:</span> <span class="number">1172952310</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;startRowIndex&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;endRowIndex&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;startColumnIndex&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;endColumnIndex&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pasteType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PASTE_NORMAL&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pasteOrientation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NORMAL&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后是 Python post 部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">request = sheet.batchUpdate(spreadsheetId=SAMPLE_SPREADSHEET_ID, body=body_item)</span><br><span class="line">response = request.execute()</span><br><span class="line">pprint(response)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus 监控 memcached</title>
      <link href="/post/memcached/"/>
      <url>/post/memcached/</url>
      
        <content type="html"><![CDATA[<p>本文记录如何用安装 memcached_exporter 来收集 memcached 信息并且暴露给 Prometheus 监听程序，Prometheus 将收集的信息传递给 grafana 进行信息可视化。</p><span id="more"></span><h1 id="安装-Memcached-Exporter"><a href="#安装-Memcached-Exporter" class="headerlink" title="安装 Memcached Exporter"></a>安装 Memcached Exporter</h1><p>prometheus 官方的 memcached_exporter <a href="https://github.com/prometheus/memcached_exporter">文档</a>  </p><h2 id="bridge-桥接方式"><a href="#bridge-桥接方式" class="headerlink" title="bridge 桥接方式"></a>bridge 桥接方式</h2><p>在 192.168.21.16 服务器上运行了三个 memcached 端口分别为 11211:11213 目前官方的这个版本还不支持多个地址，社区的解决方案<a href="https://github.com/prometheus/memcached_exporter/issues/48">点这里</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9211:9150  --name=memcached_11211  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11211</span><br><span class="line"></span><br><span class="line">docker run -d -p 9212:9150  --name=memcached_11212  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11212</span><br><span class="line"></span><br><span class="line">docker run -d -p 9213:9150  --name=memcached_11213  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11213</span><br></pre></td></tr></table></figure><p>在这里我们启动了三个 docker container 用的是 bridge 网络方式来分别监听 11211–11213 需要注意的是 memcached.address 默认监听的是 localhost:11211 如果是 bridge 方式的话，用默认的方法 localhost 只能监听到容器内部。  </p><h2 id="host-网络方式"><a href="#host-网络方式" class="headerlink" title="host 网络方式"></a>host 网络方式</h2><p>如果服务器只有一个 memcached 进程的话，那么我们可以用 host 网络的方式。 容器和服务器共享网络，优点是网络高性能，缺点就是需要注意端口冲突。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --network=host  --name=memcached_11211  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=localhost:11211</span><br></pre></td></tr></table></figure><h2 id="注意-iptable"><a href="#注意-iptable" class="headerlink" title="注意 iptable"></a>注意 iptable</h2><p>一旦使用了 docker 我们需要特别注意的就是 <strong>iptable</strong> </p><ol><li><del>-A INPUT -s 172.16.0.0&#x2F;12 -j DROP</del>  #检查iptables filter 表 INPUT 链是否阻止了docker container IP，因为 docker 默认 IP 是 172.17.0.0&#x2F;24，</li><li>-A INPUT -s 172.17.0.0&#x2F;24 -p tcp –dport 11211:11213 -j ACCEPT  #若采用 bridge 桥接方式， 需要允许容器连接到 memcached</li><li>-A INPUT -s <em>Prometheus_IP</em> -p tcp –dport 9211:9213 -j ACCEPT  #给 Prometheus 开放监听的白名单</li></ol><h2 id="检查-memcached-exporter-结果"><a href="#检查-memcached-exporter-结果" class="headerlink" title="检查 memcached_exporter 结果"></a>检查 memcached_exporter 结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">curl 172.17.0.2:9150/metrics <span class="comment">#直接访问容器内部</span></span><br><span class="line">curl localhost:9211/metrics <span class="comment"># 从docker暴露出来的端口访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果中的字段在 grafana 设置图表时，相关的图表就要用对应的字段</span></span><br><span class="line"><span class="comment"># 比如当前连接上 (memcached_current_connections&#123;instance=~&quot;$node&quot;&#125;) </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TYPE memcached_connections_listener_disabled_total counter</span></span><br><span class="line">memcached_connections_listener_disabled_total 0</span><br><span class="line"><span class="comment"># HELP memcached_connections_total Total number of connections opened since the server started running.</span></span><br><span class="line"><span class="comment"># TYPE memcached_connections_total counter</span></span><br><span class="line">memcached_connections_total 255174</span><br><span class="line"><span class="comment"># HELP memcached_connections_yielded_total Total number of connections yielded running due to hitting the memcached&#x27;s -R limit.</span></span><br><span class="line"><span class="comment"># TYPE memcached_connections_yielded_total counter</span></span><br><span class="line">memcached_connections_yielded_total 0</span><br><span class="line"><span class="comment"># HELP memcached_current_bytes Current number of bytes used to store items.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_bytes gauge</span></span><br><span class="line">memcached_current_bytes 2.57801625e+08</span><br><span class="line"><span class="comment"># HELP memcached_current_connections Current number of open connections.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_connections gauge</span></span><br><span class="line">memcached_current_connections 663</span><br><span class="line"><span class="comment"># HELP memcached_current_items Current number of items stored by this instance.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_items gauge</span></span><br><span class="line">memcached_current_items 1.117251e+06</span><br><span class="line"><span class="comment"># HELP memcached_items_evicted_total Total number of valid items removed from cache to free memory for new items.</span></span><br><span class="line"><span class="comment"># TYPE memcached_items_evicted_total counter</span></span><br><span class="line">memcached_items_evicted_total 0</span><br></pre></td></tr></table></figure><p>如果看到输出的结果，那说明 memcached_exporter 已经收集到 memcached 的信息并将此暴露出来了。<br><a href="http://www.runoob.com/memcached/memcached-stats.html">memcached</a> 一些字段的含义</p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ol><li>配置错误 connection failed，注意地址 –memcached.address&#x3D;192.168.21.16:11212 </li><li>启动新的容器失败，地址端口占用，需要重启一下docker</li><li>iptables 一般 reload， restart 会刷新 NAT 表，导致 docker 路由失败。这种情况需要重启 docker， docker 会在 NAT 表添加路由</li></ol><h1 id="Grafana-数据可视化"><a href="#Grafana-数据可视化" class="headerlink" title="Grafana 数据可视化"></a>Grafana 数据可视化</h1><p><a href="https://grafana.com/docs/v3.1/datasources/prometheus/">grafana</a>  官方文档，添加数据源，模板。<br><a href="https://prometheus.io/docs/prometheus/latest/querying/functions/">prometheus function</a> 函数在画图时非常重要  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每分钟 command 的数量  </span></span><br><span class="line"><span class="built_in">sum</span>(rate(memcached_commands_total&#123;instance=~<span class="string">&quot;<span class="variable">$node</span>&quot;</span>&#125;[1m])) by (<span class="built_in">command</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELK 日志收集系统快速搭建</title>
      <link href="/post/elk/"/>
      <url>/post/elk/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.elastic.co/guide/index.html">ELK 官方文档</a> 是一个分布式、可扩展、实时的搜索与数据分析引擎。目前我在工作中只用来收集 server 的 log, 开发锅锅们 debug 的好助手。</p><span id="more"></span>  <h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol><li><a href="https://cloud.tencent.com/developer/column/4008">腾讯云Elasticsearch Service</a> 这个腾讯云的专栏非常的不错，请您一定要点开看一眼，总有你想要的。  </li><li><a href="https://www.cnblogs.com/along21/p/8613115.html">ELK重难点总结和整体优化配置</a></li><li><a href="https://mp.weixin.qq.com/s/KMiLRBrTxTafrq7I7PIWgA">腾讯万亿级 Elasticsearch 技术实战</a></li></ol><h1 id="安装设置单节点-ELK"><a href="#安装设置单节点-ELK" class="headerlink" title="安装设置单节点 ELK"></a>安装设置单节点 ELK</h1><p>如果你想快速的搭建单节点 ELK, 那么使用 docker 方式肯定是你的最佳选择。使用三合一的镜像，<a href="https://elk-docker.readthedocs.io/">文档详情</a><br>注意：安装完 docker, 记得设置 <code>mmap counts</code> 大小至少 262144<br><a href="https://nieyong.github.io/wiki_cpu/mmap%E8%AF%A6%E8%A7%A3.html">什么是 mmap</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 mmap 命令 二选一</span></span><br><span class="line"><span class="comment"># 一临时添加法</span></span><br><span class="line">sysctl -w vm.max_map_count=262144  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 二永久写入文件</span></span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line">vm.max_map_count=262144  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存好文件执行以下命令查看</span></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 docker 基于centos</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>单节点的机器，不必暴露 9200(Elasticsearch JSON interface) 和 9300(Elasticsearch transport interface) 端口。<br>如果想在 docker 上暴露端口，用 -p 如果没有填写监听的地址，默认是 0.0.0.0 所有的网卡。建议还是写明确监听的地址，安全性更好。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-p 监听的IP:宿主机端口:容器内的端口</span><br><span class="line">-p 192.168.10.10:9300:9300</span><br></pre></td></tr></table></figure><h2 id="命令行启动一个-ELK"><a href="#命令行启动一个-ELK" class="headerlink" title="命令行启动一个 ELK"></a>命令行启动一个 ELK</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -p 5601:5601 -p 5044:5044 \</span><br><span class="line">-v /data/elk-data:/var/lib/elasticsearch  \</span><br><span class="line">-v /data/elk/logstash:/etc/logstash/conf.d  \</span><br><span class="line">-it -e TZ=<span class="string">&quot;Asia/Singapore&quot;</span> -e ES_HEAP_SIZE=<span class="string">&quot;20g&quot;</span>  \</span><br><span class="line">-e LS_HEAP_SIZE=<span class="string">&quot;10g&quot;</span> --name elk-ubuntu sebp/elk</span><br></pre></td></tr></table></figure><p>将配置和数据挂载出来，即使 docker container 出现了问题。可以立即销毁再重启一个，服务受影响的时间很短。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意挂载出来的文件夹的权限问题</span></span><br><span class="line"><span class="built_in">chmod</span> 755 /data/elk-data </span><br><span class="line"><span class="built_in">chmod</span> 755 /data/elk/logstash</span><br><span class="line"><span class="built_in">chown</span> -R root:root /data </span><br><span class="line">-v /data/elk-data:/var/lib/elasticsearch   <span class="comment"># 将 elasticsearch 存储的数据挂载出来，数据持久化。</span></span><br><span class="line">-v /data/elk/logstash:/etc/logstash/conf.d <span class="comment"># 将 logstash 的配置文件挂载出来，方便在宿主机上修改。</span></span><br></pre></td></tr></table></figure><h2 id="elasticsearch-重要的参数调优"><a href="#elasticsearch-重要的参数调优" class="headerlink" title="elasticsearch 重要的参数调优"></a>elasticsearch 重要的参数调优</h2><ol><li>ES_HEAP_SIZE Elasticsearch will assign the entire heap specified in jvm.options via the Xms (minimum heap size) and Xmx (maximum heap size) settings. You should set these two settings to be equal to each other. Set Xmx and Xms to no more than 50% of your physical RAM.the exact threshold varies but is near 32 GB. the exact threshold varies but 26 GB is safe on most systems, but can be as large as 30 GB on some systems.<br>利弊关系: The more heap available to Elasticsearch, the more memory it can use for its internal caches, but the less memory it leaves available for the operating system to use for the filesystem cache. Also, larger heaps can cause longer garbage collection pauses.</li><li>LS_HEAP_SIZE 如果 heap size 过低，会导致 CPU 利用率到达瓶颈，造成 JVM 不断的回收垃圾。 不能设置 heap size 超过物理内存。 至少留 1G 给操作系统和其他的进程。</li><li>若是采用上述这个三合一的 docker 镜像，<a href="https://elk-docker.readthedocs.io/#troubleshooting">官方文档</a>, 对于 ELK 的日志，处理的方式为 Note that ELK’s logs are rotated daily and are deleted after a week, using logrotate. You can change this behaviour by overwriting the elasticsearch, logstash and kibana files in &#x2F;etc&#x2F;logrotate.d  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每天的 6:25 会对日志进行分割压缩处理，此时对机器的 disk 有大量的 IO 工作，会导致 system load 上升。 </span></span><br><span class="line">25 6 * * *  root  <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily )</span><br></pre></td></tr></table></figure>这里的解决办法请看下文的自定义部分。</li><li>使用Elasticsearch的REST Client的An HTTP line is larger than 4096 bytes<br>{“type”:”too_long_frame_exception”,”reason”:”An HTTP line is larger than 4096 bytes.”}，默认情况下ES对请求参数设置为4K，如果遇到请求参数长度限制可以在elasticsearch.yml中修改如下参数： 请参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-http.html">官方文档</a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http.max_initial_line_length:</span> <span class="string">8k</span></span><br><span class="line"><span class="attr">http.max_header_size:</span> <span class="string">16k</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="elasticsearch-普通方式安装"><a href="#elasticsearch-普通方式安装" class="headerlink" title="elasticsearch 普通方式安装"></a>elasticsearch 普通方式安装</h2><p>也是非常的简单，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html">官方文档</a>，或者是<a href="https://linuxize.com/post/how-to-install-elasticsearch-on-centos-7/">民间文档</a>，其实也就是安装一个 JDK， 然后添加一个 repo 仓库。</p><h2 id="filebeat-配置"><a href="#filebeat-配置" class="headerlink" title="filebeat 配置"></a>filebeat 配置</h2><p>在 client 端，我们需要安装并且配置 filebeat <a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-installation.html">请参考</a><br><a href="https://www.imooc.com/article/70007">Filebeat 模块与配置</a><br>配置文件 filebeat.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">paths:</span> <span class="comment"># 需要收集的日志</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/log/app/**</span>  <span class="comment">## ** need high versiob filebeat can support recursive</span></span><br><span class="line">  <span class="attr">exclude_files:</span> [<span class="string">&#x27;^/var/log/ocha/no_need_foler/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="attr">fields:</span> <span class="comment">#需要添加的字段</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;inventory_hostname&#125;&#125;</span>&quot;</span> </span><br><span class="line">    <span class="attr">function:</span> <span class="string">&quot;xxx&quot;</span></span><br><span class="line">  <span class="attr">multiline:</span>  <span class="comment"># 多行匹配</span></span><br><span class="line">    <span class="attr">match:</span> <span class="string">after</span></span><br><span class="line">    <span class="attr">negate:</span> <span class="literal">true</span>  <span class="comment"># pay attention the format</span></span><br><span class="line">    <span class="attr">pattern:</span> <span class="string">&#x27;^\[[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;&#x27;</span>   <span class="comment">#\[</span></span><br><span class="line">  <span class="attr">ignore_older:</span> <span class="string">24h</span></span><br><span class="line">  <span class="attr">clean_inactive:</span> <span class="string">72h</span></span><br><span class="line"></span><br><span class="line"><span class="attr">output.logstash:</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;<span class="template-variable">&#123;&#123;elk_server&#125;&#125;</span>:25044&quot;</span>]</span><br><span class="line">  <span class="comment"># ssl:</span></span><br><span class="line">  <span class="comment">#   certificate_authorities: [&quot;/etc/filebeat/logstash.crt&quot;]</span></span><br></pre></td></tr></table></figure><p>批量部署 filebeat.yml 最好使用 ansible</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">stop</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">service:</span> </span><br><span class="line">      <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">stopped</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">      </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">upload</span> <span class="string">filebeat.yml</span> </span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">     <span class="attr">src:</span> <span class="string">filebeat.yml</span></span><br><span class="line">     <span class="attr">dest:</span> <span class="string">/etc/filebeat/filebeat.yml</span></span><br><span class="line">     <span class="attr">owner:</span> <span class="string">root</span></span><br><span class="line">     <span class="attr">group:</span> <span class="string">root</span></span><br><span class="line">     <span class="attr">mode:</span> <span class="number">0644</span>      </span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">remove</span></span><br><span class="line">    <span class="attr">file:</span> <span class="comment">#delete all files in this directory</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/var/lib/filebeat/registry</span>    </span><br><span class="line">      <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">service:</span> </span><br><span class="line">      <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><h2 id="查看-filebeat-output"><a href="#查看-filebeat-output" class="headerlink" title="查看 filebeat output"></a>查看 filebeat output</h2><p>首先需要修改配置，将 filebeat 输出到本地的文件，输出的格式为 json.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">/var/log/app/**</span></span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&quot;x.x.x.x&quot;</span></span><br><span class="line">    <span class="attr">region:</span> <span class="string">&quot;sg&quot;</span></span><br><span class="line">  <span class="attr">multiline:</span></span><br><span class="line">    <span class="attr">match:</span> <span class="string">after</span></span><br><span class="line">    <span class="attr">negate:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">pattern:</span> <span class="string">&#x27;^[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;&#x27;</span></span><br><span class="line">  <span class="attr">ignore_older:</span> <span class="string">24h</span></span><br><span class="line">  <span class="attr">clean_inactive:</span> <span class="string">72h</span></span><br><span class="line"></span><br><span class="line"><span class="attr">output.file:</span></span><br><span class="line"> <span class="attr">path:</span> <span class="string">&quot;/home/feiyang&quot;</span></span><br><span class="line">  <span class="attr">filename:</span> <span class="string">feiyang.json</span></span><br></pre></td></tr></table></figure><p>通过上述的配置，我们就可以在路径 &#x2F;home&#x2F;feiyang 下得到输出结果文件 feiyang.json 在这里需要注意的是，不同版本的 filebeat 输出结果的格式会有所不同，这会给 logstash 解析过滤造成一点点困难。下面举例说明 6.x 和 7.x filebeat 输出结果的不同</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 这是 <span class="number">6.4</span><span class="number">.2</span> 的 filebeat</span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2019-06-27T15:53:27.682Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;@metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;beat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filebeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.4.2&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x.x.x.x&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sg&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x.x.x.x&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;beat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x.x.x.x&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hostname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;feiyang-localhost&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.4.2&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;offset&quot;</span><span class="punctuation">:</span> <span class="number">1567983499</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[2019-06-27T22:53:25.756327232][Info][@http.go.177] [48552188]request&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/log/feiyang/scripts/all.log&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>6.4 与 7.2 还是有很大的差异，在结构上。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># 这是 <span class="number">7.2</span><span class="number">.0</span> 的 filebeat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2019-06-27T15:41:42.991Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;@metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;beat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filebeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7.2.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;agent&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3a38567b-e6c3-4b5a-a420-f0dee3a3bec8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filebeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ephemeral_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;b7e3c0b7-b460-4e43-a9af-6d36c25eece7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hostname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;feiyang-localhost&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;log&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;offset&quot;</span><span class="punctuation">:</span> <span class="number">69132192</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/log/app/feiyang/scripts/info.log&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2019-06-27 22:41:25.312|WARNING|14186|Option|data|unrecognized|fields=set([u&#x27;id&#x27;])&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;input&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;log&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x.x.x.x&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ecs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;feiyang-localhost&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="只需要配置logstash"><a href="#只需要配置logstash" class="headerlink" title="只需要配置logstash"></a>只需要配置logstash</h2><p>接下来，我们再来看一看 logstash.conf 记得看注释<br>参考链接:</p><ol><li><a href="https://www.elastic.co/guide/en/beats/filebeat/current/configuration-ssl.html">SSL详情可参考</a></li><li><a href="https://doc.yonyoucloud.com/doc/logstash-best-practice-cn/filter/grok.html">grok 正则捕获</a></li><li><a href="https://blog.csdn.net/qq_34021712/article/details/79746413">grok插件语法介绍</a></li><li><a href="http://www.ttlsa.com/elk/elk-logstash-configuration-syntax/">logstash 配置语法</a></li><li><a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns">grok 内置 pattern</a>  </li><li><a href="http://www.51niux.com/?id=205">Logstash详细记录</a></li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; <span class="number">5044</span></span><br><span class="line">    <span class="comment">#host =&gt; &quot;192.168.1.1&quot; 监听内网</span></span><br><span class="line">    <span class="comment">#ssl =&gt; true</span></span><br><span class="line">    <span class="comment">#ssl_certificate =&gt; &quot;/etc/logstash/logstash.crt&quot;</span></span><br><span class="line">    <span class="comment">#ssl_key =&gt; &quot;/etc/logstash/logstash.key&quot;</span></span><br><span class="line"><span class="comment"># 1. SSL详情可参考 </span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># filter 模块主要是数据预处理，提取一些信息，方便 elasticsearch 好归类存储。</span></span><br><span class="line"><span class="comment"># 2. grok 正则捕获</span></span><br><span class="line"><span class="comment"># 3. grok插件语法介绍 </span></span><br><span class="line"><span class="comment"># 4. logstash 配置语法 </span></span><br><span class="line"><span class="comment"># 5. grok 内置 pattern </span></span><br><span class="line">filter &#123;</span><br><span class="line">    grok &#123;  </span><br><span class="line">      match =&gt; &#123;<span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;%&#123;EXIM_DATE:timestamp&#125;\|%&#123;LOGLEVEL:log_level&#125;\|%&#123;INT:pid&#125;\|%&#123;GREEDYDATA&#125;&quot;</span>&#125;</span><br><span class="line"><span class="comment"># message 字段是 log 的内容，例如 2018-12-11 23:46:47.051|DEBUG|3491|helper.py:85|helper._save_to_cache|shop_session</span></span><br><span class="line"><span class="comment"># 在这里我们提取出了 timestamp log_level pid，grok 有内置定义好的patterns: EXIM_DATE, EXIM_DATE, INT</span></span><br><span class="line"><span class="comment"># GREEDYDATA 贪婪数据，代表任意字符都可以匹配 </span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 我们在 filebeat 里面添加了这个字段[fields][function]的话，那就会执行对应的 match 规则去匹配 path</span></span><br><span class="line"><span class="comment"># source 字段就是 log 的来源路径，例如 /var/log/nginx/feiyang233.club.access.log</span></span><br><span class="line"><span class="comment"># match 后我们就可以得到 path=feiyang233.club.access</span></span><br><span class="line">    <span class="keyword">if</span> [fields][function]==<span class="string">&quot;nginx&quot;</span> &#123;</span><br><span class="line">        grok &#123;         </span><br><span class="line">        match =&gt; &#123;<span class="string">&quot;source&quot;</span> =&gt; <span class="string">&quot;/var/log/nginx/%&#123;GREEDYDATA:path&#125;.log%&#123;GREEDYDATA&#125;&quot;</span>&#125;  </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment"># 例如 ims 日志来源是 /var/log/ims_logic/debug.log</span></span><br><span class="line"><span class="comment"># match 后我们就可以得到 path=ims_logic</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> [fields][function]==<span class="string">&quot;ims&quot;</span> &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">        match =&gt; &#123;<span class="string">&quot;source&quot;</span> =&gt; <span class="string">&quot;/var/log/%&#123;GREEDYDATA:path&#125;/%&#123;GREEDYDATA&#125;&quot;</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">        match =&gt; &#123;<span class="string">&quot;source&quot;</span> =&gt; <span class="string">&quot;/var/log/app/%&#123;GREEDYDATA:path&#125;/%&#123;GREEDYDATA&#125;&quot;</span>&#125;</span><br><span class="line">            &#125;         </span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># filebeat 有定义 [fields][function] 时，我们就添加上这个字段，例如 QA</span></span><br><span class="line">    <span class="keyword">if</span> [fields][function] &#123;</span><br><span class="line">          mutate &#123;</span><br><span class="line">              add_field =&gt; &#123;</span><br><span class="line">                  <span class="string">&quot;function&quot;</span> =&gt; <span class="string">&quot;%&#123;[fields][function]&#125;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment"># 因为线上的机器更多，线上的我默认不在 filebeat 添加 function，所以 else 我就添加上 live  </span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">          mutate &#123;</span><br><span class="line">              add_field =&gt; &#123;</span><br><span class="line">                  <span class="string">&quot;function&quot;</span> =&gt; <span class="string">&quot;live&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># 在之前 filter message 时，我们得到了 timestamp，这里我们修改一下格式，添加上时区。</span></span><br><span class="line">    date &#123;</span><br><span class="line">      match =&gt; [<span class="string">&quot;timestamp&quot;</span> , <span class="string">&quot;yyyy-MM-dd HH:mm:ss Z&quot;</span>]</span><br><span class="line">      target =&gt; <span class="string">&quot;@timestamp&quot;</span></span><br><span class="line">      timezone =&gt; <span class="string">&quot;Asia/Singapore&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 将之前获得的 path 替换其中的 / 替换为 - , 因为 elasticsearch index name 有要求</span></span><br><span class="line"><span class="comment"># 例如 feiyang/test  feiyang_test </span></span><br><span class="line">    mutate &#123;</span><br><span class="line">     gsub =&gt; [<span class="string">&quot;path&quot;</span>,<span class="string">&quot;/&quot;</span>,<span class="string">&quot;-&quot;</span>]</span><br><span class="line">      add_field =&gt; &#123;<span class="string">&quot;host_ip&quot;</span> =&gt; <span class="string">&quot;%&#123;[fields][host]&#125;&quot;</span>&#125;</span><br><span class="line">      remove_field =&gt; [<span class="string">&quot;tags&quot;</span>,<span class="string">&quot;@version&quot;</span>,<span class="string">&quot;offset&quot;</span>,<span class="string">&quot;beat&quot;</span>,<span class="string">&quot;fields&quot;</span>,<span class="string">&quot;exim_year&quot;</span>,<span class="string">&quot;exim_month&quot;</span>,<span class="string">&quot;exim_day&quot;</span>,<span class="string">&quot;exim_time&quot;</span>,<span class="string">&quot;timestamp&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># remove_field 去掉一些多余的字段</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 单节点 output 就在本机，也不需要 SSL, 但 index 的命名规则还是需要非常的注意</span></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;sg-%&#123;function&#125;-%&#123;path&#125;-%&#123;+xxxx.ww&#125;&quot;</span></span><br><span class="line"><span class="comment"># sg-nginx-feiyang233.club.access-2019.13  ww代表周数</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的流程图如下所示<br><img src="/img/elk/log.png" alt="log"><br>index 的规则 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.4/indices-create-index.html">参考链接</a></p><ul><li>Lowercase only</li><li>Cannot include , &#x2F;, *, ?, “, &lt;, &gt;, |, ` ` (space character), ,, #</li><li>Indices prior to 7.0 could contain a colon (:), but that’s been deprecated and won’t be supported in 7.0+</li><li>Cannot start with -, _, +</li><li>Cannot be . or ..</li><li>Cannot be longer than 255 bytes (note it is bytes, so multi-byte characters will count towards the 255 limit faster)</li></ul><h2 id="Kibana-简单的使用"><a href="#Kibana-简单的使用" class="headerlink" title="Kibana 简单的使用"></a>Kibana 简单的使用</h2><p>在搭建 ELK 时，暴露出来的 5601 端口就是 Kibana 的服务。<br>访问 <a href="http://your_elk_ip:5601/">http://your_elk_ip:5601</a><br><img src="/img/elk/kibana.png" alt="kibana"></p><h1 id="安装设置集群-ELK-版本-6-7"><a href="#安装设置集群-ELK-版本-6-7" class="headerlink" title="安装设置集群 ELK 版本 6.7"></a>安装设置集群 ELK 版本 6.7</h1><p><a href="https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html">ELK 安装文档</a>集群主要是高可用，多节点的 Elasticsearch 还可以扩容。本文中用的官方镜像 The base image is <a href="https://hub.docker.com/_/centos/">centos:7</a></p><h2 id="Elasticsearch-多节点搭建"><a href="#Elasticsearch-多节点搭建" class="headerlink" title="Elasticsearch 多节点搭建"></a>Elasticsearch 多节点搭建</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/docker.html">官方安装文档 Elasticsearch</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载出来的文件夹权限非常的重要</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/elk-data &amp;&amp; <span class="built_in">chmod</span> 755 /data/elk-data</span><br><span class="line"><span class="built_in">chown</span> -R root:root /data </span><br><span class="line">docker run -p WAN_IP:9200:9200 -p 10.66.236.116:9300:9300 \</span><br><span class="line">-v /data/elk-data:/usr/share/elasticsearch/data \</span><br><span class="line">--name feiy_elk \</span><br><span class="line">docker.elastic.co/elasticsearch/elasticsearch:6.7.0</span><br></pre></td></tr></table></figure><p>接下来是修改配置文件 elasticsearch.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Master 节点 node-1</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># docker exec -it 70ada825aae1 bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">&quot;feiy_elk&quot;</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-1</span></span><br><span class="line"><span class="attr">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.116</span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;10.66.236.116:9300&quot;</span>,<span class="string">&quot;10.66.236.118:9300&quot;</span>,<span class="string">&quot;10.66.236.115:9300&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slave 节点 node-2</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">&quot;feiy_elk&quot;</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-2</span></span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.118</span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;10.66.236.116:9300&quot;</span>,<span class="string">&quot;10.66.236.118:9300&quot;</span>,<span class="string">&quot;10.66.236.115:9300&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slave 节点 node-3</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">&quot;feiy_elk&quot;</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-3</span></span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.115</span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;10.66.236.116:9300&quot;</span>,<span class="string">&quot;10.66.236.118:9300&quot;</span>,<span class="string">&quot;10.66.236.115:9300&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure><p>检查集群节点个数，状态等 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html">Cluster get settings API</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl http://127.0.0.1:9200/_cluster/health?pretty</span><br><span class="line"><span class="comment"># curl http://wan_ip:9200/_cluster/health?pretty</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;feiy_elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;status&quot;</span> : <span class="string">&quot;green&quot;</span>,</span><br><span class="line">  <span class="string">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;number_of_nodes&quot;</span> : 3,</span><br><span class="line">  <span class="string">&quot;number_of_data_nodes&quot;</span> : 3,</span><br><span class="line">  <span class="string">&quot;active_primary_shards&quot;</span> : 9,</span><br><span class="line">  <span class="string">&quot;active_shards&quot;</span> : 18,</span><br><span class="line">  <span class="string">&quot;relocating_shards&quot;</span> : 0,</span><br><span class="line">  <span class="string">&quot;initializing_shards&quot;</span> : 0,</span><br><span class="line">  <span class="string">&quot;unassigned_shards&quot;</span> : 0,</span><br><span class="line">  <span class="string">&quot;delayed_unassigned_shards&quot;</span> : 0,</span><br><span class="line">  <span class="string">&quot;number_of_pending_tasks&quot;</span> : 0,</span><br><span class="line">  <span class="string">&quot;number_of_in_flight_fetch&quot;</span> : 0,</span><br><span class="line">  <span class="string">&quot;task_max_waiting_in_queue_millis&quot;</span> : 0,</span><br><span class="line">  <span class="string">&quot;active_shards_percent_as_number&quot;</span> : 100.0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">curl -X GET <span class="string">&quot;localhost:9200/_cluster/health?wait_for_status=yellow&amp;timeout=50s&amp;pretty&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># in console</span></span><br><span class="line">GET /_cluster/health?wait_for_status=yellow&amp;<span class="built_in">timeout</span>=50s</span><br></pre></td></tr></table></figure><p>最终结果图在 kibana 上可以看到集群状态<br><img src="/img/elk/elk.png" alt="elk"></p><h2 id="Kibana-搭建"><a href="#Kibana-搭建" class="headerlink" title="Kibana 搭建"></a>Kibana 搭建</h2><p><a href="https://www.elastic.co/guide/en/kibana/6.7/docker.html">官方安装文档  Kibana</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker run --link YOUR_ELASTICSEARCH_CONTAINER_NAME_OR_ID:elasticsearch -p 5601:5601 &#123;docker-repo&#125;:&#123;version&#125;</span></span><br><span class="line">docker run -p 外网IP:5601:5601 --<span class="built_in">link</span> elasticsearch容器的ID:elasticsearch docker.elastic.co/kibana/kibana:6.7.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意的是 --link 官方其实并不推荐的，推荐的是 use user-defined networks https://docs.docker.com/network/links/</span></span><br><span class="line"><span class="comment"># 测试不用 --link 也可以通。直接用容器的 IP</span></span><br><span class="line">docker run -p 外网IP:5601:5601  docker.elastic.co/kibana/kibana:6.7.0</span><br></pre></td></tr></table></figure><p>we recommend that you use user-defined networks to facilitate communication between two containers instead of using –<a href="https://docs.docker.com/network/links/">link</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/kibana/config/kibana.yml</span></span><br><span class="line"><span class="comment"># 需要把 hosts IP 改为 elasticsearch 容器的 IP</span></span><br><span class="line"><span class="comment"># 我这里 elasticsearch 容器的 IP 是 172.17.0.2</span></span><br><span class="line"><span class="comment"># 如何查看 docker inspect elasticsearch_ID</span></span><br><span class="line"><span class="attr">server.name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> [ <span class="string">&quot;http://172.17.0.2:9200&quot;</span> ]</span><br><span class="line"><span class="attr">xpack.monitoring.ui.container.elasticsearch.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出容器并重启</span></span><br><span class="line"><span class="string">docker</span> <span class="string">restart</span> [<span class="string">container_ID</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非容器安装</span></span><br><span class="line"><span class="attr">xpack.monitoring.enabled:</span> <span class="string">enable</span></span><br><span class="line"><span class="attr">xpack.monitoring.elasticsearch:</span> [<span class="string">&quot;http://127.0.0.1:9200&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="Logstash-搭建"><a href="#Logstash-搭建" class="headerlink" title="Logstash 搭建"></a>Logstash 搭建</h2><p>官方安装文档 <a href="https://www.elastic.co/guide/en/logstash/6.7/docker.html">Logstash</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker -d 以后台的方式启动容器  --name 参数显式地为容器命名</span></span><br><span class="line">docker run -p 5044:5044 -d --name test_logstash  docker.elastic.co/logstash/logstash:6.7.0</span><br><span class="line"><span class="comment"># 也可以指定网卡，监听在内网或者外网 监听在内网 192.168.1.2</span></span><br><span class="line">docker run -p 192.168.1.2:5044:5044 -d --name test_logstash  docker.elastic.co/logstash/logstash:6.7.0</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/logstash/pipeline/logstash.conf</span></span><br><span class="line"><span class="comment"># 配置详情请参考下面的链接,记得 output hosts IP 指向 Elasticsearch 的 IP</span></span><br><span class="line"><span class="comment"># Elasticsearch 的默认端口是9200，在下面的配置中可以省略。</span></span><br><span class="line">hosts =&gt; [<span class="string">&quot;IP Address 1:port1&quot;</span>, <span class="string">&quot;IP Address 2:port2&quot;</span>, <span class="string">&quot;IP Address 3&quot;</span>]</span><br></pre></td></tr></table></figure><p><a href="#%E5%8F%AA%E9%9C%80%E8%A6%81%E9%85%8D%E7%BD%AElogstash">logstash 过滤规则</a> 见上文的配置和 grok 语法规则</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/logstash/config/logstash.yml</span></span><br><span class="line"><span class="comment"># 需要把 url 改为 elasticsearch master 节点的 IP</span></span><br><span class="line"><span class="attr">http.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">xpack.monitoring.elasticsearch.url:</span> <span class="string">http://elasticsearch_master_IP:9200</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">&quot;feiy&quot;</span></span><br><span class="line"><span class="attr">pipeline.workers:</span> <span class="number">24</span> <span class="comment"># same with cores</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非容器安装</span></span><br><span class="line"><span class="attr">xpack.monitoring.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.monitoring.elasticsearch.hosts:</span> [<span class="string">&quot;http://127.0.0.1:9200&quot;</span>]</span><br><span class="line"><span class="attr">xpack.monitoring.collection.pipeline.details.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>改完配置 exit 从容器里退出到宿主机，然后重启这个容器。更多配置详情，参见<a href="https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html">官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如何查看 container_ID</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">docker restart [container_ID]</span><br></pre></td></tr></table></figure><h2 id="容灾测试"><a href="#容灾测试" class="headerlink" title="容灾测试"></a>容灾测试</h2><p>我们把当前的 master 节点 node-1 关机，通过 kibana 看看集群的状态是怎样变化的。<br><img src="/img/elk/elk1.png" alt="elk1"><br>当前集群的状态变成了黄色，因为还有 3 个 Unassigned Shards。颜色含义请参考<a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/_cluster_health.html">官方文档</a>，再过一会发现集群状态变成了绿色。<br><img src="/img/elk/elk2.png" alt="elk2"> </p><h1 id="kibana-控制台-Console"><a href="#kibana-控制台-Console" class="headerlink" title="kibana 控制台 Console"></a>kibana 控制台 Console</h1><p><strong>Quick intro to the UI</strong><br>The Console UI is split into two panes: an editor pane (left) and a response pane (right). Use the editor to type requests and submit them to Elasticsearch. The results will be displayed in the response pane on the right side.  </p><p>Console understands requests in a compact format, similar to cURL:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index a doc</span></span><br><span class="line">PUT index/type/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;body&quot;</span>: <span class="string">&quot;here&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># and get it ...</span></span><br><span class="line">GET index/type/<span class="number">1</span></span><br></pre></td></tr></table></figure><p>While typing a request, Console will make suggestions which you can then accept by hitting Enter&#x2F;Tab. These suggestions are made based on the request structure as well as your indices and types.  </p><p><strong>A few quick tips, while I have your attention</strong>   </p><ul><li>Submit requests to ES using the green triangle button.</li><li>Use the wrench menu for other useful things.</li><li>You can paste requests in cURL format and they will be translated to the Console syntax.</li><li>You can resize the editor and output panes by dragging the separator between them.</li><li>Study the keyboard shortcuts under the Help button. Good stuff in there!</li></ul><h2 id="Console-常用的命令"><a href="#Console-常用的命令" class="headerlink" title="Console 常用的命令"></a>Console 常用的命令</h2><p><a href="https://www.elastic.co/guide/cn/kibana/current/console-kibana.html">Kibana 控制台</a><br><a href="https://segmentfault.com/a/1190000015654154">ELK技术栈中的那些查询语法</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">&quot;https://user:passwd@IP:9200/_cat/indices?v&quot;</span></span><br><span class="line"></span><br><span class="line">GET _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_cat/health?v</span><br><span class="line"></span><br><span class="line">GET /_cat/nodes?v</span><br><span class="line"></span><br><span class="line">GET /_cluster/allocation/explain</span><br><span class="line"></span><br><span class="line">GET /_cluster/state</span><br><span class="line"></span><br><span class="line">GET /_cat/thread_pool?v</span><br><span class="line"></span><br><span class="line">GET /_cat/indices?health=red&amp;v</span><br><span class="line"></span><br><span class="line">GET /_cat/indices?v</span><br><span class="line"></span><br><span class="line"><span class="comment">#将当前所有的 index 的 replicas 设置为 0</span></span><br><span class="line"></span><br><span class="line">PUT /*/_settings</span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;index&quot;</span> : &#123;</span><br><span class="line">       <span class="string">&quot;number_of_replicas&quot;</span> : 0,</span><br><span class="line">       <span class="string">&quot;refresh_interval&quot;</span>: <span class="string">&quot;30s&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_template</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在单节点的时候，不需要备份，所以将 replicas 设置为 0</span></span><br><span class="line">PUT _template/app-logstash</span><br><span class="line">&#123;</span><br><span class="line"> <span class="string">&quot;index_patterns&quot;</span>: [<span class="string">&quot;app-*&quot;</span>],</span><br><span class="line"> <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">   <span class="string">&quot;number_of_shards&quot;</span>: 3,</span><br><span class="line">   <span class="string">&quot;number_of_replicas&quot;</span>: 0,</span><br><span class="line">   <span class="string">&quot;refresh_interval&quot;</span>: <span class="string">&quot;30s&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Delete all indices in your Elastic Search cluster</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl <span class="string">&#x27;localhost:9200/_cat/indices?v&#x27;</span> | <span class="built_in">tail</span> -n +2 | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>`; <span class="keyword">do</span> curl -XDELETE <span class="string">&quot;http://127.0.0.1:9200/<span class="variable">$i</span>&quot;</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim delete_elk.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl <span class="string">&#x27;localhost:9200/_cat/indices?v&#x27;</span> | <span class="built_in">tail</span> -n +2 | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>`; <span class="keyword">do</span></span><br><span class="line"> curl -XDELETE <span class="string">&quot;http://127.0.0.1:9200/<span class="variable">$i</span>&quot;</span>; </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">sleep</span> 5s</span><br><span class="line">systemctl restart elasticsearch</span><br></pre></td></tr></table></figure><h1 id="Elasticsearch-数据迁移"><a href="#Elasticsearch-数据迁移" class="headerlink" title="Elasticsearch 数据迁移"></a>Elasticsearch 数据迁移</h1><p><a href="https://www.elastic.co/guide/en/cloud/current/ec-migrate-data.html">Elasticsearch 数据迁移官方文档</a>感觉不是很详细。容器化的数据迁移，我太菜用 reindex 失败了，snapshot 也凉凉。<br>最后是用一个开源工具 <a href="https://github.com/medcl/esm-abandoned">An Elasticsearch Migration Tool</a> 进行数据迁移的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/medcl/esm-abandoned/releases/download/v0.4.2/linux64.tar.gz</span><br><span class="line">tar -xzvf linux64.tar.gz</span><br><span class="line">./esm  -s http://127.0.0.1:9200   -d http://192.168.21.55:9200 -x index_name  -w=5 -b=10 -c 10000 --copy_settings --copy_mappings --force  --refresh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="移除一个数据节点"><a href="#移除一个数据节点" class="headerlink" title="移除一个数据节点"></a>移除一个数据节点</h2><p>如何安全的移除一个 data node, 虽然 es 有自我恢复机制，但最佳的方式还是先移除 data node 上的数据: 重新 allocation</p><ul><li><a href="https://docs.oracle.com/cd/E91187_01/pt855pbr2/eng/pt/tpst/task_RemovingANodeFromACluster.html?pli=ul_d73e43_tpst">Removing a Node from a Cluster</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-cluster.html#cluster-shard-allocation-filtering">官方文档</a></li></ul><p>在 kibana 的 console 里面允许如下命令，移除 IP 为 10.0.0.1 的 data node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT _cluster/settings</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;transient&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;cluster.routing.allocation.exclude._ip&quot;</span> : <span class="string">&quot;10.0.0.1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Nginx-代理转发"><a href="#Nginx-代理转发" class="headerlink" title="Nginx 代理转发"></a>Nginx 代理转发</h1><p>因为有时候 docker 重启，iptables restart 也会刷新，所以导致了我们的限制规则会被更改，出现安全问题。这是由于 docker 的网络隔离基于 iptable 实现造成的问题。为了避免这个安全问题，我们可以在启动 docker 时，就只监听在内网，或者本地 127.0.0.1 然后通过 nginx 转发。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># cat kibana.conf</span><br><span class="line">upstream kibana &#123;</span><br><span class="line">    server 127.0.0.1:5601;</span><br><span class="line">    keepalive 15;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 25601;</span><br><span class="line">    server_name x.x.x.x;</span><br><span class="line">    access_log /var/log/nginx/kibana.access.log;</span><br><span class="line">    error_log /var/log/nginx/kibana.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        allow x.x.x.x;</span><br><span class="line">        allow x.x.x.x;</span><br><span class="line">        deny all;</span><br><span class="line"></span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_buffer_size 64k;</span><br><span class="line">        proxy_buffers   32 32k;</span><br><span class="line">        proxy_busy_buffers_size 128k;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Connection &quot;Keep-Alive&quot;;</span><br><span class="line">        proxy_set_header Proxy-Connection &quot;Keep-Alive&quot;;</span><br><span class="line">        </span><br><span class="line">        proxy_pass    http://kibana;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>! 这里需要注意的是， iptable filter 表 INPUT 链 有没有阻挡 172.17.0.0&#x2F;16  docker 默认的网段。是否阻挡了 25601 这个端口。</p><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><h2 id="iptables-防不住"><a href="#iptables-防不住" class="headerlink" title="iptables 防不住"></a>iptables 防不住</h2><p>需要看<a href="/post/network/">上一篇博客</a>里的 iptable 问题。或者监听在内网，用 Nginx 代理转发。</p><h2 id="elk-网络问题"><a href="#elk-网络问题" class="headerlink" title="elk 网络问题"></a>elk <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html">网络问题</a></h2><h2 id="elk-node"><a href="#elk-node" class="headerlink" title="elk node"></a>elk <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/modules-node.html">node</a></h2><h2 id="单节点"><a href="#单节点" class="headerlink" title="单节点"></a>单节点</h2><p><code>discovery.type=single-node</code><br>在测试单点时可用，搭建集群时不能设置这个环境变量，详情见<a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/bootstrap-checks.html#single-node-discovery">官方文档</a></p><h2 id="ELK的一次吞吐量优化"><a href="#ELK的一次吞吐量优化" class="headerlink" title="ELK的一次吞吐量优化"></a>ELK的一次<a href="https://www.leiyawu.com/2018/04/03/elk/">吞吐量优化</a></h2><h2 id="filebeat-版本"><a href="#filebeat-版本" class="headerlink" title="filebeat 版本"></a>filebeat 版本</h2><p>版本过低导致 recursive glob patterns <a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-log.html#recursive_glob">**</a> 不可用<br>用 ansible 升级 filebeat</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">upload</span> <span class="string">filebeat.repo</span> </span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">     <span class="attr">src:</span> <span class="string">elasticsearch.repo</span></span><br><span class="line">     <span class="attr">dest:</span> <span class="string">/etc/yum.repos.d/elasticsearch.repo</span></span><br><span class="line">     <span class="attr">owner:</span> <span class="string">root</span></span><br><span class="line">     <span class="attr">group:</span> <span class="string">root</span></span><br><span class="line">     <span class="attr">mode:</span> <span class="number">0644</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">yum:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">latest</span> <span class="comment">#6.x.1-1 7.x.1-1</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">service:</span> </span><br><span class="line">      <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">      </span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/elasticsearch.repo</span></span><br><span class="line">[<span class="string">elasticsearch-6.x</span>]</span><br><span class="line"><span class="string">name=Elasticsearch</span> <span class="string">repository</span> <span class="string">for</span> <span class="number">6.</span><span class="string">x</span> <span class="string">packages</span></span><br><span class="line"><span class="string">baseurl=https://artifacts.elastic.co/packages/6.x/yum</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">autorefresh=1</span></span><br><span class="line"><span class="string">type=rpm-md</span></span><br><span class="line"></span><br><span class="line">[<span class="string">elasticsearch-7.x</span>]</span><br><span class="line"><span class="string">name=Elasticsearch</span> <span class="string">repository</span> <span class="string">for</span> <span class="number">7.</span><span class="string">x</span> <span class="string">packages</span></span><br><span class="line"><span class="string">baseurl=https://artifacts.elastic.co/packages/7.x/yum</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">autorefresh=1</span></span><br><span class="line"><span class="string">type=rpm-md</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="filebeat-兼容性"><a href="#filebeat-兼容性" class="headerlink" title="filebeat 兼容性"></a>filebeat 兼容性</h2><p>7.x 与 6.x 不兼容问题. 关键字变化很大, 比如说 “sorce” 变为了 [log][file][path]</p><h2 id="kibana报错"><a href="#kibana报错" class="headerlink" title="kibana报错"></a>kibana报错</h2><p>“message”:”Alias [.kibana] has more than one indices associated with it [[.kibana_1, .kibana_2]] 这是因为 kibana 连接了一台机器，如果我们把这台 host 和 kibana 删除，但 kibana 的数据还会在另外两台 host上。当重新创建 host 加入时，会自动同步 .kibana，kibana 就会报错</p><h2 id="7-4版本日志位置"><a href="#7-4版本日志位置" class="headerlink" title="7.4版本日志位置"></a>7.4版本日志位置</h2><p>没有写在 &#x2F;var&#x2F;log&#x2F; 对应的文件夹，而是 sttout , 在 &#x2F;var&#x2F;log&#x2F;messages 下。 或者可以用命令 journalctl -fu logstash 查看最新的日志。</p><h2 id="logstash-7-4-启动错误"><a href="#logstash-7-4-启动错误" class="headerlink" title="logstash-7.4 启动错误"></a>logstash-7.4 启动错误</h2><p>CentOS 添加好 repo 后， 用 yum install logstash 安装好了以后。正在启动，但没有看到有进程监听 5044 端口， journalctl -fu logstash 查看日志发现报错如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[2019-11-21T19:18:21,800][FATAL][logstash.runner] An unexpected error occurred! </span><br><span class="line">&#123;:error=&gt;&lt;ArgumentError: Path <span class="string">&quot;/var/lib/logstash/dead_letter_queue&quot;</span> </span><br><span class="line">must be a writable directory. It is not writable.</span><br><span class="line"></span><br><span class="line"><span class="comment">#然后我们修改权限</span></span><br><span class="line"><span class="built_in">chmod</span> 777 /var/lib/logstash/dead_letter_queue</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新的报错为 Access Denied </span></span><br><span class="line"></span><br><span class="line">&#123;:error=&gt;java.nio.file.AccessDeniedException: /var/lib/logstash/.lock</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次修改权限，终于成功了</span></span><br><span class="line"><span class="built_in">chmod</span> 777 /var/lib/logstash/.lock</span><br></pre></td></tr></table></figure><h2 id="disk-full"><a href="#disk-full" class="headerlink" title="disk full"></a>disk full</h2><p>once disk usage more than 95%, elasticseach will stop store new data to index, and will add lock for these index. Even you release the disk, the lock is still enable. elk cannot store new data to read-only index. you will see the error log in logstash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[logstash.outputs.elasticsearch] retrying failed action with response code: 403 </span><br><span class="line">(&#123;&quot;type&quot;=&gt;ggq&quot;cluster_block_exception&quot;, &quot;reason&quot;=&gt;&quot;blocked by: [FORBIDDEN/12/index read-only / allow delete (api)];&quot;&#125;)</span><br></pre></td></tr></table></figure><p>The solution is <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.5/disk-allocator.html">resetting the read-only index</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># In consloe </span></span><br><span class="line">PUT /index_name/_settings</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;index.blocks.read_only_allow_delete&quot;</span>: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line">curl -X PUT <span class="string">&quot;localhost:9200/index_name/_settings?pretty&quot;</span> -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -d<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;index.blocks.read_only_allow_delete&quot;: null</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="kibana-cannot-create-index"><a href="#kibana-cannot-create-index" class="headerlink" title="kibana cannot create index"></a>kibana cannot create index</h2><p>In elasticsearch log, about <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/fielddata.html#fielddata">Fielddata</a></p><p>The <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-index.html">index</a>  option controls whether field values are indexed. It accepts true or false and defaults to true. Fields that are not indexed are not queryable.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[2020-02-03T00:00:12,211][DEBUG][o.e.a.s.TransportSearchAction] [localhost.localdomain] All shards failed for phase: [query]</span><br><span class="line">org.elasticsearch.ElasticsearchException$1: Fielddata is disabled on text fields by default. Set fielddata=true on [type] in order to load fielddata in memory by uninverting the inverted index. Note that this can however use significant memory. Alternatively use a keyword field instead.</span><br><span class="line">        at org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:639) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:137) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:273) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.InitialSearchPhase.onShardFailure(InitialSearchPhase.java:105) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.InitialSearchPhase.access$200(InitialSearchPhase.java:50) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.InitialSearchPhase$2.onFailure(InitialSearchPhase.java:273) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleException(SearchTransportService.java:424) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1120) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:1229) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1203) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:60) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.support.ChannelActionListener.onFailure(ChannelActionListener.java:56) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:70) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:64) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.lambda$rewriteShardRequest$7(SearchService.java:1043) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionRunnable$1.doRun(ActionRunnable.java:45) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:773) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]</span><br><span class="line">        at java.lang.Thread.run(Thread.java:830) [?:?]</span><br><span class="line">Caused by: java.lang.IllegalArgumentException: Fielddata is disabled on text fields by default. Set fielddata=true on [type] in order to load fielddata in memory by uninverting the inverted index. Note that this can however use significant memory. Alternatively use a keyword field instead.</span><br><span class="line">        at org.elasticsearch.index.mapper.TextFieldMapper$TextFieldType.fielddataBuilder(TextFieldMapper.java:759) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.index.fielddata.IndexFieldDataService.getForField(IndexFieldDataService.java:116) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.index.query.QueryShardContext.getForField(QueryShardContext.java:191) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceConfig.resolve(ValuesSourceConfig.java:112) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder.resolveConfig(ValuesSourceAggregationBuilder.java:350) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder.doBuild(ValuesSourceAggregationBuilder.java:322) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder.doBuild(ValuesSourceAggregationBuilder.java:39) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.AbstractAggregationBuilder.build(AbstractAggregationBuilder.java:139) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.AggregatorFactories$Builder.build(AggregatorFactories.java:332) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.parseSource(SearchService.java:784) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.createContext(SearchService.java:586) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:545) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:348) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.lambda$executeQueryPhase$1(SearchService.java:340) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener.lambda$map$2(ActionListener.java:145) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:62) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        ... 9 more</span><br></pre></td></tr></table></figure><h2 id="es-cluster"><a href="#es-cluster" class="headerlink" title="es cluster"></a>es cluster</h2><p>If we use domain for es cluster node load balance, we must specify the port, because kibana will use default port is 9200. But nginx load balance port is 80 or 443. If we use wrong port, the error is kibana Request Timeout after 3000ms</p><h1 id="自定义部分"><a href="#自定义部分" class="headerlink" title="自定义部分"></a>自定义部分</h1><h2 id="自动删除-index"><a href="#自动删除-index" class="headerlink" title="自动删除 index"></a>自动删除 index</h2><p>因为我是按周数来 %{+xxxx.ww} 存 index，由于我们的存储机器硬盘有限，最多能存放两个周的日志，所以需要删除两周之前的 index</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /opt/delete.sh</span></span><br><span class="line"><span class="comment"># 这个是放在容器内的脚本。</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">week=$(<span class="built_in">date</span> -d <span class="string">&quot;-2 week &quot;</span> +%V)</span><br><span class="line">year=$(<span class="built_in">date</span> +%Y)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$year</span><span class="string">&quot;-&quot;</span><span class="variable">$week</span></span><br><span class="line">curl -XDELETE <span class="string">&#x27;http://127.0.0.1:9200/*-&#x27;</span><span class="variable">$year</span><span class="string">&#x27;.&#x27;</span><span class="variable">$week</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>宿主机上跑 cronjob</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/crontab</span></span><br><span class="line"></span><br><span class="line">0 03  * * 1 root /bin/docker <span class="built_in">exec</span> [mysql 容器 ID] bash -c  <span class="string">&quot;cd /opt &amp;&amp; bash delete.sh&quot;</span> </span><br><span class="line"></span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure><h2 id="内部log过大"><a href="#内部log过大" class="headerlink" title="内部log过大"></a>内部log过大</h2><p>因为默认的 log level 的 INFO, 所以 logstash 的日志特别大。导致在做 logrotate 日志切割时 disk I&#x2F;O 特别的大。<br>解决的办法就是修改 log.level 在  &#x2F;opt&#x2F;logstash&#x2F;config&#x2F;log4j2.properties 里修改 log.level， 还有修改 &#x2F;opt&#x2F;logstash&#x2F;config&#x2F;logstash.yml  然后重启 logstash  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ------------ Debugging Settings --------------</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Options for log.level:</span></span><br><span class="line"><span class="comment">#   * fatal</span></span><br><span class="line"><span class="comment">#   * error</span></span><br><span class="line"><span class="comment">#   * warn</span></span><br><span class="line"><span class="comment">#   * info (default)</span></span><br><span class="line"><span class="comment">#   * debug</span></span><br><span class="line"><span class="comment">#   * trace</span></span><br><span class="line"><span class="comment">#日志输出的等级</span></span><br><span class="line"><span class="comment"># Trace:是追踪，就是程序推进一下.</span></span><br><span class="line"><span class="comment"># De<span class="doctag">bug:</span>指出细粒度信息事件对调试应用程序是非常有帮助的.</span></span><br><span class="line"><span class="comment"># Info:消息在粗粒度级别上突出强调应用程序的运行过程.</span></span><br><span class="line"><span class="comment"># Warn:输出警告及warn以下级别的日志.</span></span><br><span class="line"><span class="comment"># Error:输出错误信息日志.</span></span><br><span class="line"><span class="comment"># Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.</span></span><br><span class="line"> <span class="attr">log.level:</span> <span class="string">info</span></span><br></pre></td></tr></table></figure><p>修改日志保留的日期，默认是一周，可以修改 &#x2F;etc&#x2F;logrotate.d&#x2F;logstash  rotate 天数</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elk </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub-Hexo-NexT 免费搭建自己的博客</title>
      <link href="/post/hexo-blog/"/>
      <url>/post/hexo-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="关于写博客"><a href="#关于写博客" class="headerlink" title="关于写博客"></a>关于写博客</h2><p>2018 年我在 GitHub 上看到<a href="http://blog.dploop.org/">强哥的博客</a>，当时为之心动然后 Fork 了那个 repository。后来搬砖沦为社会人就断更了，在工作之后看到<a href="https://wsgzao.github.io/">奥哥的博客</a>，在他的安利之下，把之前的 Jekyll 的博客换成如今的 Hexo-NexT，打算记录下工作的点滴，学习的心得。一是分享，二是方便自己回顾和查阅。<span id="more"></span>  </p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 09 月 09 日 - 增加使用子文件夹管理 Hexo 文章且不改变文章永久链接</p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>如果没有 GitHub 账号，需要去官网 <a href="https://github.com/">https://github.com/</a> 注册一个账号。账号注册好之后，需要创建一个 repository，名称格式为 xxx.github.io  例如我的 GitHub 名称为 fainyang, 浏览器显示的 URL 为 <a href="https://github.com/fainyang">https://github.com/fainyang</a> 那么我新建的 repository 就是 fainyang.github.io    </p><p><img src="/img/2019/github.png" alt="github">  </p><p>申请完账号，创建了 repository 之后，下一步就是在自己的电脑上安装 Hexo。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo——快速、简洁且高效的博客框架。官网 <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a> 文档还有视频讲解如何安装  </p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>在安装 Hexo 之前，需要安装 Git 与 Node.js 请参考 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85">这里</a>   </p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g  </span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo init &lt;folder&gt;   # &lt;folder&gt; 自己取个文件夹名字</span><br><span class="line">cd &lt;folder&gt;          # 移动到 &lt;folder&gt; 文件夹，不清楚当前路径，可以执行 Mac:pwd  Windows: chdir</span><br><span class="line">npm install          #feiy-mac:Coding feiy$ pwd    /Users/feiy/Coding</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml    #站点配置文件,主要就是修改这个文件</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds      #模板文件夹</span><br><span class="line">├── source         #存放文章，图片的文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes         #主题文件夹，等会下载 NexT 主题</span><br></pre></td></tr></table></figure><h3 id="这是我的-config-yml-配置"><a href="#这是我的-config-yml-配置" class="headerlink" title="这是我的 _config.yml 配置"></a>这是我的 _config.yml 配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">feiyang&#x27;s</span> <span class="string">blog</span>  </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">费洋的博客</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">佛系咸鱼</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">feiyang</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>     <span class="comment">#网址的显示语言</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://fainyang.github.io</span>      <span class="comment">#需要修改为自己的网址</span></span><br><span class="line"><span class="attr">enforce_ssl:</span> <span class="string">fainyang.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">post/:name/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> </span><br><span class="line"> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span> </span><br><span class="line"><span class="attr">tag_map:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/fainyang/fainyang.github.io.git</span>  <span class="comment">#部署上传的地址，需要修改为自己的</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">new</span> <span class="string">hexo_blog</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Others</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">yearly:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">monthly:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h3><p>官网详细的介绍 <a href="https://hexo.io/zh-cn/docs/commands">https://hexo.io/zh-cn/docs/commands</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令缩写</span><br><span class="line">hexo n &quot;文章标题&quot; == hexo new &quot;文章标题&quot; #新建文章</span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server   #启动服务预览</span><br><span class="line">hexo d == hexo deploy   #部署</span><br></pre></td></tr></table></figure><h3 id="本地运行网站"><a href="#本地运行网站" class="headerlink" title="本地运行网站"></a>本地运行网站</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s  # 当前路径要在之前创建的 hexo init &lt;folder&gt;  这个 &lt;folder&gt; 下</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>在浏览器输入 <code>http://localhost:4000</code> 就可以看到初始的网站 </p><h3 id="post-subfolder"><a href="#post-subfolder" class="headerlink" title="_post subfolder"></a>_post subfolder</h3><p> _config.yml 里 permalinks 不用 :title 而用 :name 就好了（:name 就指代文件名本身)<br> 为什么这样做，是因为我在 _post 下面新建了几个folder， 用年份来命名的文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: post/:name/</span><br></pre></td></tr></table></figure><h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><p>Elegant Theme for Hexo——精于心，简于形。 官网 <a href="http://theme-next.iissnan.com/">http://theme-next.iissnan.com/</a></p><h3 id="安装-Next"><a href="#安装-Next" class="headerlink" title="安装 Next"></a>安装 Next</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当前路径要在之前创建的 hexo init &lt;folder&gt;  这个 &lt;folder&gt; 下</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前路径 Mac:<span class="built_in">pwd</span>  Windows: <span class="built_in">chdir</span></span></span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>git clone 完成后，指定文件夹的目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml    #站点配置文件，主要就是修改这个文件</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds      #模板文件夹</span><br><span class="line">├── source         #存放文章，图片的文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes         #主题文件夹，等会下载 NexT 主题</span><br><span class="line">    ├── landscape</span><br><span class="line">    └── next</span><br><span class="line">        └── _config.yml  #主题配置文件，修改博客主题样式等</span><br></pre></td></tr></table></figure><h3 id="主题配置文件-config-yml"><a href="#主题配置文件-config-yml" class="headerlink" title="主题配置文件 _config.yml"></a>主题配置文件 _config.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  菜单显示项</span></span><br><span class="line"><span class="attr">menu:</span> </span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes 主题选择，我用的是 Gemini</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure><p>此时可以在本地预览一下运行命令 <code>hexo s</code></p><h3 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h3><p>部署前，需要修改配置文件里面的 git 地址</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yourname/yourname.github.io.git</span>  <span class="comment">#部署上传的地址，需要修改为自己的</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">new</span> <span class="string">hexo_blog</span></span><br></pre></td></tr></table></figure><p>修改好 _config.yml 里的 deploy 模块后，就可以开始进行部署，上传到 GitHub</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>第一次部署需要输入自己的 GitHub 账号和密码。后面更新部署时就不需要再次输入密码了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line">feiy-mac:fainyang.github.io feiy$ hexo clean     #清除缓存</span><br><span class="line">INFO  Deleted database.</span><br><span class="line">INFO  Deleted public folder.</span><br><span class="line">feiy-mac:fainyang.github.io feiy$ hexo generate  #生成文件</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 902 ms</span><br><span class="line">INFO  Generated: sitemap.xml</span><br><span class="line">INFO  Generated: atom.xml</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: tags/index.html</span><br><span class="line">INFO  Generated: categories/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: about/index.html</span><br><span class="line">INFO  Generated: img/combination1.png</span><br><span class="line">INFO  Generated: images/algolia_logo.svg</span><br><span class="line">INFO  Generated: img/combination2.png</span><br><span class="line">INFO  Generated: img/404-southpark.jpg</span><br><span class="line">INFO  Generated: img/favicon.ico</span><br><span class="line">INFO  Generated: img/gay.jpeg</span><br><span class="line">INFO  Generated: images/apple-touch-icon-next.png</span><br><span class="line">INFO  Generated: img/old_driver.jpg</span><br><span class="line">INFO  Generated: img/qq-qrcode.png</span><br><span class="line">INFO  Generated: img/zjxc.jpg</span><br><span class="line">INFO  Generated: images/cc-by-nc-nd.svg</span><br><span class="line">INFO  Generated: images/avatar.gif</span><br><span class="line">INFO  Generated: images/cc-by-nc-sa.svg</span><br><span class="line">INFO  Generated: images/cc-by-nc.svg</span><br><span class="line">INFO  Generated: images/cc-by-sa.svg</span><br><span class="line">INFO  Generated: images/cc-by-nd.svg</span><br><span class="line">INFO  Generated: images/cc-by.svg</span><br><span class="line">INFO  Generated: images/favicon.ico</span><br><span class="line">INFO  Generated: images/quote-l.svg</span><br><span class="line">INFO  Generated: images/cc-zero.svg</span><br><span class="line">INFO  Generated: images/loading.gif</span><br><span class="line">INFO  Generated: images/logo.svg</span><br><span class="line">INFO  Generated: images/searchicon.png</span><br><span class="line">INFO  Generated: images/favicon-16x16-next.png</span><br><span class="line">INFO  Generated: images/placeholder.gif</span><br><span class="line">INFO  Generated: images/favicon-32x32-next.png</span><br><span class="line">INFO  Generated: images/quote-r.svg</span><br><span class="line">INFO  Generated: images/feiy.gif</span><br><span class="line">INFO  Generated: archives/2019/03/index.html</span><br><span class="line">INFO  Generated: archives/2018/02/index.html</span><br><span class="line">INFO  Generated: post/hexo-blog/index.html</span><br><span class="line">INFO  Generated: img/work/6.jpg</span><br><span class="line">INFO  Generated: archives/2018/08/index.html</span><br><span class="line">INFO  Generated: categories/学习/index.html</span><br><span class="line">INFO  Generated: archives/2018/11/index.html</span><br><span class="line">INFO  Generated: archives/2018/07/index.html</span><br><span class="line">INFO  Generated: img/robot/run.png</span><br><span class="line">INFO  Generated: tags/python/index.html</span><br><span class="line">INFO  Generated: categories/生活/index.html</span><br><span class="line">INFO  Generated: tags/hexo/index.html</span><br><span class="line">INFO  Generated: tags/工作/index.html</span><br><span class="line">INFO  Generated: archives/2018/04/index.html</span><br><span class="line">INFO  Generated: archives/2018/03/index.html</span><br><span class="line">INFO  Generated: tags/links/index.html</span><br><span class="line">INFO  Generated: post/Canteen/index.html</span><br><span class="line">INFO  Generated: tags/NUS/index.html</span><br><span class="line">INFO  Generated: img/2019/github.png</span><br><span class="line">INFO  Generated: post/Onboarding/index.html</span><br><span class="line">INFO  Generated: post/Combination/index.html</span><br><span class="line">INFO  Generated: post/Robot/index.html</span><br><span class="line">INFO  Generated: post/blog/index.html</span><br><span class="line">INFO  Generated: post/Master/index.html</span><br><span class="line">INFO  Generated: post/links/index.html</span><br><span class="line">INFO  Generated: post/timestampdiff/index.html</span><br><span class="line">INFO  Generated: img/time3.png</span><br><span class="line">INFO  Generated: img/start.jpg</span><br><span class="line">INFO  Generated: img/robot/tencent.png</span><br><span class="line">INFO  Generated: img/work/8.JPG</span><br><span class="line">INFO  Generated: img/work/7.JPG</span><br><span class="line">INFO  Generated: img/avatar-icon.jpg</span><br><span class="line">INFO  Generated: img/time1.png</span><br><span class="line">INFO  Generated: img/wx-qrcode.png</span><br><span class="line">INFO  Generated: archives/2018/index.html</span><br><span class="line">INFO  Generated: archives/2019/index.html</span><br><span class="line">INFO  Generated: img/146228364162795.jpg</span><br><span class="line">INFO  Generated: lib/font-awesome/HELP-US-OUT.txt</span><br><span class="line">INFO  Generated: css/main.css</span><br><span class="line">INFO  Generated: img/canteen/bird.jpg</span><br><span class="line">INFO  Generated: img/combination3.png</span><br><span class="line">INFO  Generated: img/time4.png</span><br><span class="line">INFO  Generated: img/path.jpg</span><br><span class="line">INFO  Generated: img/time2.png</span><br><span class="line">INFO  Generated: img/work/10.JPG</span><br><span class="line">INFO  Generated: img/work/5.JPG</span><br><span class="line">INFO  Generated: img/work/13.JPG</span><br><span class="line">INFO  Generated: img/work/2.JPG</span><br><span class="line">INFO  Generated: img/work/1.JPG</span><br><span class="line">INFO  Generated: lib/font-awesome/bower.json</span><br><span class="line">INFO  Generated: img/robot/ditou.jpg</span><br><span class="line">INFO  Generated: img/canteen/contact.png</span><br><span class="line">INFO  Generated: img/robot/happy.jpg</span><br><span class="line">INFO  Generated: img/robot/poor.jpeg</span><br><span class="line">INFO  Generated: img/robot/miaohui.jpg</span><br><span class="line">INFO  Generated: img/robot/qidai.jpeg</span><br><span class="line">INFO  Generated: img/robot/python.png</span><br><span class="line">INFO  Generated: img/robot/tuling.png</span><br><span class="line">INFO  Generated: img/canteen/B.png</span><br><span class="line">INFO  Generated: img/robot/dalao.png</span><br><span class="line">INFO  Generated: lib/velocity/velocity.ui.min.js</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.woff2</span><br><span class="line">INFO  Generated: img/robot/result3.jpeg</span><br><span class="line">INFO  Generated: img/canteen/F-319.png</span><br><span class="line">INFO  Generated: img/canteen/F-320.png</span><br><span class="line">INFO  Generated: img/robot/result1.jpeg</span><br><span class="line">INFO  Generated: img/work/9.JPG</span><br><span class="line">INFO  Generated: img/canteen/wen.png</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.woff</span><br><span class="line">INFO  Generated: img/canteen/E1.png</span><br><span class="line">INFO  Generated: lib/velocity/velocity.ui.js</span><br><span class="line">INFO  Generated: lib/velocity/velocity.min.js</span><br><span class="line">INFO  Generated: img/canteen/E-322.png</span><br><span class="line">INFO  Generated: img/canteen/F-321.png</span><br><span class="line">INFO  Generated: img/canteen/F-322.png</span><br><span class="line">INFO  Generated: img/canteen/F-323.png</span><br><span class="line">INFO  Generated: img/canteen/Y-320.png</span><br><span class="line">INFO  Generated: img/canteen/Y-321.png</span><br><span class="line">INFO  Generated: img/canteen/Y-322.png</span><br><span class="line">INFO  Generated: img/work/12.JPG</span><br><span class="line">INFO  Generated: img/robot/result2.jpeg</span><br><span class="line">INFO  Generated: img/work/4.JPG</span><br><span class="line">INFO  Generated: img/canteen/E-319.png</span><br><span class="line">INFO  Generated: js/src/algolia-search.js</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.css.map</span><br><span class="line">INFO  Generated: img/issue.png</span><br><span class="line">INFO  Generated: img/combination4.png</span><br><span class="line">INFO  Generated: img/canteen/E-323.png</span><br><span class="line">INFO  Generated: img/work/3.JPG</span><br><span class="line">INFO  Generated: img/canteen/Y-319.png</span><br><span class="line">INFO  Generated: img/canteen/table.png</span><br><span class="line">INFO  Generated: img/work/11.JPG</span><br><span class="line">INFO  Generated: img/work/15.JPG</span><br><span class="line">INFO  Generated: js/src/affix.js</span><br><span class="line">INFO  Generated: js/src/exturl.js</span><br><span class="line">INFO  Generated: js/src/next-boot.js</span><br><span class="line">INFO  Generated: js/src/scrollspy.js</span><br><span class="line">INFO  Generated: js/src/js.cookie.js</span><br><span class="line">INFO  Generated: js/src/post-details.js</span><br><span class="line">INFO  Generated: js/src/scroll-cookie.js</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.eot</span><br><span class="line">INFO  Generated: img/canteen/Y-323.png</span><br><span class="line">INFO  Generated: img/canteen/E-321.png</span><br><span class="line">INFO  Generated: img/canteen/E-320.png</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.min.css</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.css</span><br><span class="line">INFO  Generated: js/src/motion.js</span><br><span class="line">INFO  Generated: js/src/utils.js</span><br><span class="line">INFO  Generated: js/src/schemes/pisces.js</span><br><span class="line">INFO  Generated: img/work/16.JPG</span><br><span class="line">INFO  Generated: js/src/schemes/muse.js</span><br><span class="line">INFO  Generated: img/work/14.JPG</span><br><span class="line">INFO  Generated: lib/jquery/index.js</span><br><span class="line">INFO  Generated: img/install-steps.gif</span><br><span class="line">INFO  Generated: lib/velocity/velocity.js</span><br><span class="line">INFO  Generated: img/work/17.JPG</span><br><span class="line">INFO  Generated: img/work/18.jpg</span><br><span class="line">INFO  152 files generated in 1.86 s</span><br><span class="line">feiy-mac:fainyang.github.io feiy$ hexo deploy     #部署到 GitHub</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">[master f55c4d1] new hexo_blog</span><br><span class="line"> 34 files changed, 8859 insertions(+), 150 deletions(-)</span><br><span class="line"> create mode 100644 archives/2019/03/index.html</span><br><span class="line"> create mode 100644 archives/2019/index.html</span><br><span class="line"> create mode 100644 categories/index.html</span><br><span class="line"> create mode 100644 categories/学习/index.html</span><br><span class="line"> create mode 100644 categories/生活/index.html</span><br><span class="line"> create mode 100644 img/2019/github.png</span><br><span class="line"> create mode 100644 post/hexo-blog/index.html</span><br><span class="line"> create mode 100644 tags/NUS/index.html</span><br><span class="line"> create mode 100644 tags/hexo/index.html</span><br><span class="line"> rename tags/&#123;life =&gt; links&#125;/index.html (87%)</span><br><span class="line"> create mode 100644 tags/工作/index.html</span><br><span class="line">Enumerating objects: 114, done.</span><br><span class="line">Counting objects: 100% (114/114), done.</span><br><span class="line">Delta compression using up to 4 threads</span><br><span class="line">Compressing objects: 100% (43/43), done.</span><br><span class="line">Writing objects: 100% (69/69), 97.73 KiB | 3.62 MiB/s, done.</span><br><span class="line">Total 69 (delta 33), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (33/33), completed with 17 local objects.</span><br><span class="line">To https://github.com/fainyang/fainyang.github.io.git</span><br><span class="line">   2b7a9ca..f55c4d1  HEAD -&gt; master</span><br><span class="line">Branch &#x27;master&#x27; set up to track remote branch &#x27;master&#x27; from &#x27;https://github.com/fainyang/fainyang.github.io.git&#x27;.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure><p>在浏览器输入: yourname.github.io 如果看到博客页面那就大功告成。如果有错误的话，在 GitHub repository Setting 里的 GitHub Pages 可以看到错误信息。  </p><p><img src="/img/2019/publish.png" alt="publish"> </p><h2 id="图片管理"><a href="#图片管理" class="headerlink" title="图片管理"></a>图片管理</h2><p><a href="https://wsgzao.github.io/">奥哥</a>推荐的一个非常好用的图片管理工具 <a href="https://github.com/Molunerfinn/PicGo">PicGo</a> 图片上传+管理新体验。<br>picgo 需要用到 GitHub 的 token 最好保存下来，以免要迁移到其他电脑。</p><h2 id="github-改名"><a href="#github-改名" class="headerlink" title="github 改名"></a>github 改名</h2><p>在 github 改名和换邮箱后，之前很多的 commit 就不属于当前用户，无法显示在 activity 上面。 我们可以通过 <a href="https://github.com/newren/git-filter-repo">git-filter-repo</a> 来修改记录</p><ul><li><p>首先是<a href="https://github.com/newren/git-filter-repo/blob/main/INSTALL.md">安装  git-filter-repo</a> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip3 install git-filter-repo</span></span><br></pre></td></tr></table></figure></li><li><p>然后是创建文件 mailma ， 参考 <a href="https://www.scivision.dev/git-update-email-address/">Git rewrite commit email addresses</a> <a href="https://git-scm.com/docs/gitmailmap#_examples">gitmailmap</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">新名称 新邮箱地址一定带&lt; &gt; 旧名称 旧邮箱地址一定带&lt; &gt; </span><br><span class="line">feiyang233 &lt;feiyangyang233@gmail.com&gt; feiyang &lt;fainyang@foxmail.com&gt;</span><br><span class="line">feiyang233 &lt;feiyangyang233@gmail.com&gt; FEI YANG &lt;fainyang@foxmail.com&gt;</span><br></pre></td></tr></table></figure></li><li><p>下一步就是替换, 然后再更新远程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git filter-repo --mailmap mailmap --force</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">因为替换后， 自动删除了远程，我们需要添加 remot</span></span><br><span class="line">git remote add origin git@github.com:feiyang233/feiyang233.github.io.git</span><br><span class="line"></span><br><span class="line">git push --force</span><br></pre></td></tr></table></figure></li></ul><h2 id="hexo-github-改名"><a href="#hexo-github-改名" class="headerlink" title="hexo github 改名"></a>hexo github 改名</h2><ul><li><p>首先需要删除文件夹 <code>.deploy_git</code> ,   需要注意的是： 删除这个文件夹后，重新部署，github 上面的 commit 记录会重新初始化。但我认为无所谓啦，我们的 blog 源文件不是这个 repo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">➜  blog git:(main) ✗ tree . -a -L 1                                                                                                                                                     &lt;aws:default&gt;</span><br><span class="line">.</span><br><span class="line">|-- .DS_Store</span><br><span class="line">|-- .deploy_git</span><br><span class="line">|-- .git</span><br><span class="line">|-- .gitignore</span><br><span class="line">|-- .idea</span><br><span class="line">|-- .vscode</span><br><span class="line">|-- _config.yml</span><br><span class="line">|-- db.json</span><br><span class="line">|-- debug.log</span><br><span class="line">|-- node_modules</span><br><span class="line">|-- package-lock.json</span><br><span class="line">|-- package.json</span><br><span class="line">|-- public</span><br><span class="line">|-- scaffolds</span><br><span class="line">|-- source</span><br><span class="line">`-- themes</span><br></pre></td></tr></table></figure></li><li><p>然后更新 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:feiyang233/feiyang233.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">update</span> <span class="string">githubid</span> <span class="string">and</span> <span class="string">email</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">feiyang233</span></span><br><span class="line">  <span class="attr">email:</span> <span class="string">feiyangyang233@gmail.com</span></span><br></pre></td></tr></table></figure></li><li><p>还有一种老方法 <code>filter-branch</code> 也是可以的，但官方已经不推荐了。 详情请看 <a href="https://cloud.tencent.com/developer/article/1352623">修改Git全部Commit提交记录的用户名Name和邮箱Email</a></p></li></ul><h2 id="踩过的一些坑"><a href="#踩过的一些坑" class="headerlink" title="踩过的一些坑"></a>踩过的一些坑</h2><ol><li>在添加标签和分类的时候，当在source下面创建了文件夹的 index.md 这个文件一定要添加相关的 type. 例如 type: “categories”, type: “tags”.</li><li>添加<a href="https://theme-next.iissnan.com/third-party-services.html#local-search">搜索功能</a>时，一直转圈加载不出来。是因为自己写的文章中存在不可见字符：一个backspace的字符。 详情可以参考： <a href="http://luffy.studio/2018/04/11/Hexo%E4%B8%ADLocalSearch%E5%8D%A1%E6%AD%BB%E9%97%AE%E9%A2%98/">一</a>&amp;nbsp; <a href="https://www.sqlsec.com/2017/12/hexosearch.html">二</a></li><li>node@14 不兼容 <a href="https://github.com/hexojs/hexo-deployer-git/issues/177">https://github.com/hexojs/hexo-deployer-git/issues/177</a> <a href="https://hellozhaozheng.github.io/z_post/%E5%85%B6%E4%BB%96-hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%B1%87%E6%80%BB/">三</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError [ERR_INVALID_ARG_TYPE]: The &quot;mode&quot; argument must be integer. Received an instance of Object</span></span><br><span class="line"><span class="string">    at copyFile (fs.js:1890:10)</span></span><br><span class="line"><span class="string">    at tryCatcher (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at ret (eval at makeNodePromisifiedEval (/usr/local/lib/node_modules/hexo-cli/node_modules/bluebird/js/release/promisify.js:184:12), &lt;anonymous&gt;:13:39)</span></span><br><span class="line"><span class="string">    at /Users/yang.fei/Documents/fainyang.github.io/node_modules/hexo-deployer-git/node_modules/hexo-fs/lib/fs.js:144:39</span></span><br><span class="line"><span class="string">    at tryCatcher (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseFromHandler (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:512:31)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:569:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise0 (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:614:10)</span></span><br><span class="line"><span class="string">    at Promise._settlePromises (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:694:18)</span></span><br><span class="line"><span class="string">    at Promise._fulfill (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:638:18)</span></span><br><span class="line"><span class="string">    at Promise._resolveCallback (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:432:57)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseFromHandler (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:524:17)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:569:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise0 (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:614:10)</span></span><br><span class="line"><span class="string">    at Promise._settlePromises (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:694:18)</span></span><br><span class="line"><span class="string">    at Promise._fulfill (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:638:18)</span></span><br><span class="line"><span class="string">    at Promise._resolveCallback (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:432:57)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseFromHandler (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:524:17)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:569:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise0 (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:614:10)</span></span><br><span class="line"><span class="string">    at Promise._settlePromises (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:694:18)</span></span><br><span class="line"><span class="string">    at Promise._fulfill (/Users/yang.fei/Documents/fainyang.github.io/node_modules/bluebird/js/release/promise.js:638:18)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#不该升级的 brew upgrade，只能重新安装 node@12</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">brew install node@12</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &#x27;</span><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/opt/node@12/bin:<span class="variable">$PATH</span>&quot;</span><span class="string">&#x27; &gt;&gt; ~/.bash_profile</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">source ~/.bash_profile </span></span><br></pre></td></tr></table></figure></li><li>hexo deploy git user.name 和全局的不一样 <a href="https://github.com/hexojs/hexo/issues/2125">https://github.com/hexojs/hexo/issues/2125</a>, </li><li>update hexo <a href="https://finisky.github.io/2019/11/24/updatehexo/">https://finisky.github.io/2019/11/24/updatehexo/</a></li><li>解决Hexo博客模板hexo-theme-next的翻页按钮不正常显示问题 <a href="https://www.cnblogs.com/xiejava/p/12456273.html">https://www.cnblogs.com/xiejava/p/12456273.html</a></li><li>sidebar 出现 archives&#x2F;%7C%7C%20archive<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(theme.menu.archives).split(&#x27;||&#x27;)[0] | trim &#125;&#125;&quot;</span>&gt;</span> </span><br><span class="line">替换为</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(theme.menu.archives.split(&#x27;||&#x27;)[0] | trim) &#125;&#125;&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure></li></ol><h2 id="hexo-升级"><a href="#hexo-升级" class="headerlink" title="hexo 升级"></a>hexo 升级</h2><p>换了新电脑，环境重新配置的时候，老版本的 node 已经 brew 已经 deprecate 了，所以干脆就升级了。 用最新的 hexo V6 也是非常的简单</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">brew install node@18</span><br><span class="line"></span><br><span class="line">brew link node@18</span><br><span class="line"></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要 <span class="built_in">cd</span> 到 blog 目录下面安装</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line"></span><br><span class="line">➜  blog git:(main) ✗ hexo --version                                                                                                                                                                                                       &lt;aws:default&gt;</span><br><span class="line">INFO  Validating config</span><br><span class="line">hexo: 6.3.0</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line"></span><br><span class="line">hexo init new_blog</span><br><span class="line">cd new_blog/</span><br><span class="line">npm install</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装主题</span></span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>然后就把 blog root 目录下面的 _config.yml 文件还有 source 文件夹替换到新的 new_blog 下面， 最后就是替换 themes&#x2F;next 主题的配置文件 _config.yml</p><p>中间可能 hexo 有一些配置需要修改， 当运行 hexo s 会提示错误在哪里，然后就根据提示修改 hexo config 就行</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用链接分享</title>
      <link href="/post/links/"/>
      <url>/post/links/</url>
      
        <content type="html"><![CDATA[<h2 id="站在大佬们的肩膀上"><a href="#站在大佬们的肩膀上" class="headerlink" title="站在大佬们的肩膀上"></a>站在大佬们的肩膀上</h2><p>工作，学习，健身。 其实我蛮担心自己的发际线  </p><span id="more"></span>  <h3 id="运维博客"><a href="#运维博客" class="headerlink" title="运维博客"></a>运维博客</h3><ol><li><a href="https://www.kancloud.cn/dy2903/zhushuangyin_ansible/871778">朱双印博客</a> iptables, ansible, zabbix 都很不错  </li><li><a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html">骏马金龙</a> rsync, LVS, nginx, zooKeeper  </li><li><a href="http://www.jinbuguo.com/">金步国作品集</a> Linux  </li><li><a href="https://wsgzao.github.io/">HelloDog</a> 大佬同事奥哥的博客</li></ol><h3 id="实用文档"><a href="#实用文档" class="headerlink" title="实用文档"></a>实用文档</h3><ol><li><a href="https://docs.ansible.com/ansible/latest/index.html">ansible</a> 批量操作的好帮手  </li><li><a href="https://www.zabbix.com/documentation/current/start">zabbix</a> 实时监控了解一下  </li><li><a href="https://www.elastic.co/guide/index.html">ELK</a> 收集过滤检索神器  </li><li><a href="https://docs.docker.com/">Docker</a> 方便快速的容器 </li><li><a href="https://kubernetes.io/zh/docs/">Kubernetes</a> DevOps 玩转容器部署</li></ol><h3 id="学习一个"><a href="#学习一个" class="headerlink" title="学习一个"></a>学习一个</h3><ol><li><a href="https://www.imooc.com/">慕课网</a> 程序员的梦工厂</li><li><a href="http://www.runoob.com/">菜鸟教程</a> 学的不仅是技术，更是梦想   </li><li><a href="http://www.w3school.com.cn/">w3school</a> Web 技术教程</li><li><a href="https://www.codewars.com/">codewars</a> 一边游戏，一边学习编程</li></ol><h3 id="提高生产力"><a href="#提高生产力" class="headerlink" title="提高生产力"></a>提高生产力</h3><ol><li><a href="https://trello.com/">任务管理看板</a> Trello 免费无广告</li><li><a href="https://dbngin.com/">数据库引擎</a> Free All-in-One Database Version Management Tool</li><li><a href="https://tableplus.io/?utm_source=dbngin">TablePlus</a> Database management made easy 和 2 中的数据库引擎可以自动关联。</li><li>我的常用软件大公开！ <a href="https://mp.weixin.qq.com/s/gN3sL2zsCJA8_baShfTOZA">https://mp.weixin.qq.com/s/gN3sL2zsCJA8_baShfTOZA</a></li></ol><h3 id="好书推荐"><a href="#好书推荐" class="headerlink" title="好书推荐"></a>好书推荐</h3><ol><li><a href="http://blog.dploop.org/">强哥</a> 安利的 <a href="https://vonng.gitbooks.io/ddia-cn/content/">设计数据密集型应用</a></li><li><a href="https://mp.weixin.qq.com/s/FqYpxGoWd_POdGa63_n_MQ">这或许是东半球分析十大排序算法最好的一篇文章</a></li><li><a href="https://mp.weixin.qq.com/s/TgQ0nj5nP6a36LpMmER3Uw">万能学习法</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> links </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新加坡留学分享</title>
      <link href="/post/Master/"/>
      <url>/post/Master/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要留学"><a href="#为什么要留学" class="headerlink" title="为什么要留学"></a>为什么要留学</h2><p>这篇博客主要分享我的新加坡水硕留学经历，希望能对你有一点点帮助。</p><span id="more"></span><p>更新：1.<a href="https://mp.weixin.qq.com/s/yQ1Q3TKZ2IrXR59Au5k7qA">史上最全 NUS 硕士项目攻略</a>  2.<a href="https://mp.weixin.qq.com/s/zeudXLHsmdIXIlMt-AOuBw">史上最全的 NTU 硕士项目攻略</a></p><p>留学的优势：  </p><ul><li><code>时间短</code>，新加坡的授课型 Master 一年就读完。因为 EE 学院是按照学期收学费的，最快一年修完。大家当然都早点修完省学费。当国内同届的同学毕业时，你已经是有 2年工作经验的初级混子了。    </li><li><code>毕业容易</code>，毕业要求是修满 10 门课，没有导师。轻轻松松考完 10 门课混水硕文凭，考试是按照正态分布评分的，想挂科太难了。当然，你也可以选一个project跟着导师做一年项目，一个project抵两门课的学分。不要抱太大的期望，关键还是靠自学。比如我自己就选了<a href="https://github.com/fainyang/EE_Project/blob/master/mse%20sys/README.md">项目</a>，认识一个不错的导师，受益良多。  </li><li><code>读博容易</code>， 读完一年硕士，再去申请博士，比本科毕业申请直博容易太多，而且有机会面对面和导师交流，提前了解实验室的情况。我一届的 master 同学，想读博的，最后硕士毕业都梦想成真读博了。</li><li><code>长见识</code>，肉身翻墙出来看看世界之大，结识外国的朋友们，体验东南亚文化，然后你就知道还是祖国安逸，我多么想念四川美食。   </li><li><code>当跳板</code>，如果想出国工作，那么出国读书无疑是最好的一条路，毕业后留下来找工作。当然也有 Master 毕业再去美国读博的。   </li><li><code>海龟光环</code>，像华为的海外招聘回国工作的起薪比国内稍高一点。还有一个巨大的优势就是走<a href="http://xds.gcdr.gov.cn/home/infodetail.jsp?id=8a8048495e7cbae3015ea8a346f80013">海外选调生</a>考公务员竞争小，学而优则仕。  </li><li><code>出游方便</code>，因为新加坡是东南亚的经济中心，飞东南亚的航班又多又便宜。读书期间假期飞东南亚各国旅游，马来西亚，泰国，越南，印度尼西亚，菲律宾都非常方便。例如去年 recess week 学校假期我去槟城往返一共才 350 人民币的机票。</li></ul><p>留学的劣势：  </p><ul><li><code>花费贵</code>，硕士读下来至少 18 万人民币的学费，每个月生活费至少五千人民币。新加坡留学贷款，可以在学校里贷款 8 千新币，相当于 4 万人民币，利息很低，工作以后慢慢还。  </li><li><code>压力大</code>，虽然是水硕，但是全英文环境最开始还是有点不适应。如果选了 project，还要做项目写论文答辩。相当于把国内三年完成的事情全部压缩到一年内完成，十分的匆忙。  </li><li><code>水土不服</code>，这个因人而异。来新加坡读书有的同学瘦了十多斤，有的冒痘痘，有的脱发。但大家相同的感受就是太晒了（其实温度还好，最高 33° 左右）。</li></ul><h2 id="什么样的人适合来新加坡留学"><a href="#什么样的人适合来新加坡留学" class="headerlink" title="什么样的人适合来新加坡留学"></a>什么样的人适合来新加坡留学</h2><ul><li>安全第一，<a href="http://www.shicheng.news/show/225993">新加坡治安</a>在世界数一数二了。在大学里去食堂吃饭把电脑，手机放图书馆桌上很安全。在我读书的一年里，没有听说中国留学生有谁遇到失窃的。晚上大街上走也很安全的。（相比于犯罪分子，倒不如小心野生动物，蛇，蜥蜴那些）</li><li>英语差的人，比如我自己（雅思考了三次才上 6.5）。其实新加坡留学一年生活中，除了上课，和导师，外国人交流用英文。平时都用中文，本地华人的中文也非常好。（其实这也是缺点，读书一年，发现自己的口语没有怎么提高）</li><li>怕离家太远。新加坡回国非常快，飞中国南方的城市大约4个小时，而且往返机票（非节假日）大约两千多人民币。</li><li>负担不起美国留学，又想出来看看的人，比如我自己。新加坡的学费和生活费相对便宜。 </li><li>国内考研失败，但想继续读研的同学，出国读研肯定比二战的压力小太多了。国内考研每年一次，国外读研申请分两次，有秋季和春季。</li></ul><h2 id="留学的条件"><a href="#留学的条件" class="headerlink" title="留学的条件"></a>留学的条件</h2><p>就三点：学科成绩，英语成绩，留学费用。  </p><ul><li>学科成绩：NUS NTU 两所学校 Master 招生大部分都是 985，211的毕业生。NUS ECE学院基本上要本科成绩平均分85+，NTU EEE学院要求会稍微低一点。  </li><li>英语成绩：<a href="https://www.eng.nus.edu.sg/graduate/graduate-coursework-based-programmes/msc-application/admission-requirements/">NUS</a> 雅思最低 6 分，<a href="http://www.eee.ntu.edu.sg/Programmes/ProspectiveStudents/Graduate/MOE_sub_MSc/Pages/Admission_Reqts.aspx">NTU</a> 雅思最低 6.5 分 但最好 NUS 也是6.5 分。 这样的话开学就不用额外再上英语课。雅思的备考，可以报班，也可以自学。推荐APP: 雅思哥，小站雅思。个人的建议是英语不好的同学还是花钱报班吧，老师带着入门快点。  </li><li>留学费用：今年2018 NUS Master 入学的<a href="http://www.nus.edu.sg/registrar/info/gd/GDTuitionCurrent.pdf">费用</a>国际留学生一共是36,750新币。 以前是有 government-subsidised graduate programmes 补贴的(减免一半的学费)，读下来学费加生活费一年至少18+7&#x3D;25万。申请的时候还需要银行开具存款证明，每年的标准不同，大概在人民币 15 万左右。 卖身契详情请点击<a href="http://www.nus.edu.sg/admissions/graduate-studies/scholarships-financial-aid-and-fees/financial-aid-schemes/service-obligation-scheme.html">NUS 卖身契介绍</a> 或者 <a href="https://tgonline.moe.gov.sg/tgis/normal/studentViewServiceObligationSubsidyInfo.action">新加坡教育局卖身契介绍</a>，目前的消息是从 2020 年入学开始就没有授课硕士的卖身契了<blockquote><p>From AY2019 onwards, all graduate coursework programmes are not eligible for the SO Scheme with exception of following programmes which are not eligible for the SO scheme only from AY2020 onwards:Master of Science (Electrical Engineering) 因为违约的人还是有很多，详情请看<a href="https://mp.weixin.qq.com/s/ztldmcbuGCQhVSwToHeBQQ">新闻</a></p></blockquote></li></ul><p>从2020 年秋季入学开始，已经没有授课型硕士的卖身契了 <a href="https://admissions.ntu.edu.sg/graduate/Pages/ServiceObligation.aspx">https://admissions.ntu.edu.sg/graduate/Pages/ServiceObligation.aspx</a> </p><blockquote><p>Note: From Academic Year 2020 onwards, Service Obligation is no longer available to international students applying for Coursework Programmes as they will be liable for non-subsidised tuition fees.</p></blockquote><h2 id="如何申请"><a href="#如何申请" class="headerlink" title="如何申请"></a>如何申请</h2><ul><li><code>找中介</code>，适用于时间匆忙，想花钱省事的同学们。中介费大概在2万左右，中介老师会帮你写简历，文书，推荐信，邮寄申请材料等。推荐找大机构知名的中介，私人中介小心被坑。就算找了中介，自己还是要上点心，看看中介帮写的材料，注意申请的截止时间等。</li><li><code>DIY</code>，适用于时间充足，想省钱的同学。作为 DIY 过来人，新加坡和香港的申请都比较简单，申请的 requirement 网上都有，截止时间也都写的明明白白，只是需要自己细心的去寻找。如果有学长学姐指导，老司机带是最稳的。要自己 DIY 记得让父母申请一张 <code>Visa</code> 或者 <code>Master Card</code>，因为申请缴费的时候是不能用银联卡的。<a href="http://bbs.gter.net/forum-812-1.html">寄托论坛</a>上也有前辈们分享如何申请的。</li><li>申请所需资料：本科成绩单，本科在读证明，语言成绩单(雅思或托福)，个人简历，2 封推荐信，个人陈述（申请的理由，规划那些），银行存款证明。  </li><li>申请分秋季入学和春季入学。秋季是每年的一月开始申请，先在学校官网上申请，最后把所需的资料邮寄到学校，顺丰到新加坡只需 3 天。</li></ul><h2 id="入学前准备"><a href="#入学前准备" class="headerlink" title="入学前准备"></a>入学前准备</h2><p>秋季入学是每年的五月初发 offer，寄托论坛也有 <a href="http://www.gter.net/offer/index.html">offer榜</a>，可以看看其他人的录取情况。很多人都会收到两所学校的录取，那么上 NUS 还是选 NTU 呢？首先当然看看自己所读的专业哪个学校好啦，其实两所学校都差不多。NUS 在本地人眼里更好一点，离城里近，但申请不到宿舍，ECE 学院选课自由，有点像国内的按大类招生。 NTU 坐落在郊区，能申到宿舍。食堂十分的优秀，比 NUS 好吃。环境优美，有野猪等野生动物出没。</p><p>在收到 offer 后最重要的一件事情就是：<code>申请宿舍</code>，NUS Master 申请宿舍成功率低，因为 NUS 地方小宿舍少，几乎在 NUS 读 Master 的同学们都是在外面租房子，一般都是六个人租一整套三室一厅，两个人 share 一间房。租房子必须找中介，<a href="http://www.propertyguru.com.sg/">Property Guru</a> 和 <a href="https://www.99.co/">99co</a>新加坡本地发布平台，房源多。查找 NUS 周围的房源，然后联系中介看房，最后签合同。最近还有一个不错的小程序叫：小坡岛新加坡租房。一般 share 住房租人均在 450-600 新币&#x2F;月，水电气网大约 50 新&#x2F;月。 </p><p>NTU 就很优秀了，人人都能申请到宿舍。宿舍的配套设施很完善，厨房，洗衣房，自习室，健身房，食堂都有。宿舍价格根据宿舍类型定价 300-600 新币&#x2F;月。  </p><p>把住的地方提前搞定后，等学校帮忙办理好学生签证，接下来就是收拾行李准备留学啦。  </p><ul><li>新加坡的手机网络，国内全网通手机就 OK，最好提前在淘宝买一张 3天无限流量卡。等安顿好了，再去 711、Cheers、手机店买本地 prepaid 电话卡，等有了住址证明再办理 postpaid 电话卡，比如 非常推荐 <a href="https://www.cmlink.com/sg/">中国移动 CMLink</a> <a href="https://zero1.sg/">zero1</a> 无限流量电话卡。    </li><li>必备的APP: Grab（东南亚滴滴，打车方便，可以绑定支付宝付款）SG Buses or MyTransport (坐公交车必备，查询等车时间) Google Maps (出国当然用谷歌)  </li><li>银行卡：推荐办理在境外取现不收取手续费的银联卡。比如华夏银行，成都银行金卡等，在新加坡办理银行卡一定需要住址证明，这点非常重要，没有新加坡本地银行卡生活体验很差，不能扫码支付，最终体会硬币多的烦恼。   </li><li>机票：廉价航空没有行李额！留学生过来读书肯定都带了箱子，等到机场再买行李额要贵哭。我建议是不要买廉价航空，川航、国航都是两件行李额，南航是一件。  </li><li>新加坡全年夏天，衣服最多带一件外套抵御教室里寒冷的空调。这面的优衣库，H&amp;M 价格和国内差不多。  </li><li>再安利一下同事奥哥写的<a href="https://wsgzao.github.io/post/singapore/">新加坡生活指南</a>，网站有可能被墙了。</li></ul><h2 id="学生生活"><a href="#学生生活" class="headerlink" title="学生生活"></a>学生生活</h2><ul><li>报到：到新加坡安顿好以后，就去学校注册报到，然后就是校医院体检（主要检查肺结核和 HIV ）。接下来还有半个月开学，可以出去逛一逛，熟悉一下环境。  </li><li>选课：开学之前要网上选课，这个根据自己的爱好和学长学姐的建议，不要踩雷。可以选择 10门课，也可以选择 8门课 + 1个项目。  </li><li>上课：时间都是在晚上（本科课程在白天，NUS 可以跨选本科的课程，NTU 不能选本科课程），因为有非全日制的同学（人家白天要上班的），一周最多也就5节课。 每周都会有作业，有的 project 还需要小组组队完成。 编程作业 <a href="https://github.com/">GitHub</a>了解一下，说不定有答案。  </li><li>考试：在选课时就能看到期末考试日期，所以可以提前买回家的机票呀。考试时间一般是 2-2.5 小时，有开卷，闭卷，一页纸。评分按正态分布，想挂科和得 A+ 一样的困难。 混个水硕还是非常容易的。</li><li>项目： 选一个导师跟着做一年。NUS 最后要写论文答辩，NTU 写论文不答辩。确认过眼神，遇上对的老师收获巨大，选错就以泪洗面！</li><li>毕业要求：总学分平均绩点大于3.0， 3.0 我上我也行！（满绩是5.0 允许单科低于3.0 只要不是 F 就行，一般缺考才会得 F ） </li><li>就业去向：留下来的大多去了半导体和互联网公司，回国大部分都去互联网公司，少部分走<a href="http://xds.gcdr.gov.cn/home/infodetail.jsp?id=8a8048495e7cbae3015ea8a346f80013">海外选调生</a>当公务员。 2019 年，我刚刚成功内推一个我电 14 级的通信学妹入职 seagroup。</li><li>继续读博： 其实有很大比例的同学是把新加坡水硕当跳板，硕士毕业后去 NUS NTU 读博，还有去美国读博的。先读了 master 再读 PhD 比较容易，我认识的同学中，想读 PhD 的最终都梦想成真，只是有的老师手里名额多，硕士毕业马上入学 PhD。有的导师名额少，需要先做 RA 排队等待。</li><li>提醒一下：女生在校期间可以去校医院预约打 HPV 疫苗。学生卡还有很多优惠，比如学生邮箱免费注册 jetbrains 全家桶，环球影城半价，看电影半价，苹果学生优惠等。</li></ul><p>我的学生日常：白天早起去学校图书馆自习，起晚了太阳晒呀。白天自习，晚上上课。每周和导师一次 meeting 汇报情况。周末做作业、项目，偶尔出去聚餐。 如今回想起来，白天不上课应该去找一个实习做一做的，这样有助于就业。  </p><p>第二学期就比较忙一点，因为要找工作。每学期学校都有招聘会，不容错过。其他找工作的途径，在我上一篇博客咸鱼入海Sea里有。新加坡半导体和互联网就业相对容易，新加坡工程系毕业的 Master 起薪大概在 4000-5000 新币&#x2F;月（这是 2018 年的行业水平）。（2020年互联网行业已经涨到 5k-7k） 新加坡<a href="http://www.yan.sg/zhidaodenaxishi/">个人所得税</a>很低。 税前 50 万人民币，到手 47 万；税前 100 万，到手 89 万。  <a href="https://www.iras.gov.sg/irashome/Individuals/Locals/Working-Out-Your-Taxes/Income-Tax-Rates/">https://www.iras.gov.sg/irashome/Individuals/Locals/Working-Out-Your-Taxes/Income-Tax-Rates/</a><br>在新加坡上班，目前我自己的感受：互联网比国内轻松一点，很少加班，周末双休。 半导体上班同学的感受：<a href="https://baike.baidu.com/item/micron/10950612?fr=aladdin">Micron</a>上班 8小时，加班有工资美滋滋。 <a href="https://baike.baidu.com/item/%E5%85%89%E5%AE%9D%E7%A7%91%E6%8A%80%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8/8844437">Liteon</a> 同学感觉就像在国企上班一样，每天 5:30pm 下班，闲的都想回学校再读一个part-time Phd (结果2020年，她真的回 NUS 读 full-time 博士了).如果能有幸进入 全球大厂例如 Facebook（包三餐，早9:30晚6），Google，Apple,或者新加坡的国企 <a href="https://www.tech.gov.sg/careers/students-and-graduates/">Government Technology Agency</a> （早10晚6），可能真的会乐不思蜀了。</p><p>曾经的我，以为出国遥不可及，担心给家里带来巨大的负担。如今看来一切付出都是值得的，至少在我的留学圈子里，没有任何一个同学后悔出来看一看。很惭愧，只做了一点微小的贡献。    </p><h2 id="最后祝大家前程似锦，梦想成真"><a href="#最后祝大家前程似锦，梦想成真" class="headerlink" title="最后祝大家前程似锦，梦想成真"></a>最后祝大家前程似锦，梦想成真</h2><p>感谢阅读，如果看完文章的你，还对新加坡留学有疑问的话，可以加我的QQ: 601300870</p><h2 id="NUS-学生邮箱好处多"><a href="#NUS-学生邮箱好处多" class="headerlink" title="NUS 学生邮箱好处多"></a>NUS 学生邮箱好处多</h2><p>NUS 的学生邮箱 6 个月强制重置邮箱密码一次。我在工作后太懒，忘记了改密码。发邮件给学校的 IT Center 结果没有回复我。谷歌一下找到了两个网站可以，其中一个是<a href="https://myaces.nus.edu.sg/passwordreset/index.html">NUS-ID Password Reset</a>, 在这个网站上我重置失败，原因未知。还有一个是 <a href="https://alumnilifelong.nus.edu.sg/RequestResetPassword">Reset Password - NUS AlumMAIL Portal</a>，在这个网上我重置邮箱密码成功了。<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191018102737.png"><br>学生邮箱还可以用来申请 <a href="https://www.jetbrains.com/">jetbrains</a> 全家桶，每年一续<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191018103016.png"><br>还可以使用一些微软的工具，如下图<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191018103020.png"></p><p>还有一点是，可以使用全球大学的校园网 Eduroam 详情请点击 <a href="https://mp.weixin.qq.com/s/N_5EZ8n-2v5fNXHfyI6QGg">NUS WiFi 介绍</a></p><h2 id="关于职场的感悟"><a href="#关于职场的感悟" class="headerlink" title="关于职场的感悟"></a>关于职场的感悟</h2><blockquote><p>2020-05-15 更新</p></blockquote><p>最近认识了几位从国内跳槽过来的朋友，不得不感叹国内跳槽过来，涨薪幅度之猛，已经不止是翻一番了。</p><ul><li>985 放弃保研，18年本科毕业，白菜价进入百度，15k 人民币一个月。工作一年后， 19 年跳槽来新加坡虾皮，涨到了 7500 新币（约 37.5k 人民币）在百度做一天的工作量，新加坡可以干一个周，还没有人说你慢，非常的 work balance。 </li><li>还有一位是16 年本科毕业，知乎工作两年， 18 年跳槽来新加坡虾皮，涨到了 8000 新币（约 40k 人民币) 更多详情请参考 <a href="https://bbs.sgcn.org/thread-16562057-1-1.html?from=singlemessage&isappinstalled=0">https://bbs.sgcn.org/thread-16562057-1-1.html?from=singlemessage&amp;isappinstalled=0</a> 。<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200507173437.jpeg"></li><li>第三位是我的本科同学，2013级计算机同学，在北京爱奇艺 24K人民币&#x2F;月，跳槽来新加坡 shopee 约 8K 新币&#x2F; 月</li><li>2020 年应届生 shopee 岗位薪资： shopee tech ops: 5800; seamony: 6200; deep team: 6500</li></ul><p>反观本地应届生，毕业时候就是 4000-5000 新币， 每年的涨幅也不到 10%， 和国内跳槽过来的同龄人差距巨大。所以有时候我都感叹，最优路径：国内本科毕业，努力进大厂，工作一两年出国，工资不仅翻一番，还远离了福报。大学的时候，能认真想清楚自己要做什么的人太少了，如何才能想清楚呢？ 得多去实习，多去接触，才能知道自己所要的。从别人口中知道的，和自己去亲身体验还是有很大的差距。每年应届生都在涨（2020应届月薪已经上6k了，新加坡字节跳动应届生可以给到 7-8k），稍不注意就很容易就被倒挂了，现实就是这么的残酷。</p><h2 id="更新卖身契"><a href="#更新卖身契" class="headerlink" title="更新卖身契"></a>更新卖身契</h2><p>眼看三年之期就要满了，是时候更新卖身契了。<br>教育部网站 <a href="https://tgonline.moe.gov.sg/tgis/normal/index.action">https://tgonline.moe.gov.sg/tgis/normal/index.action</a><br>如果不小心忘记了密码, 甚至忘记了邮箱, 也可以找回的</p><ul><li>忘记密码: <a href="https://tgonline.moe.gov.sg/tgis/secure/lostPassword.action">https://tgonline.moe.gov.sg/tgis/secure/lostPassword.action</a></li><li>忘记邮箱: <a href="https://tgonline.moe.gov.sg/tgis/secure/lostEmail.action">https://tgonline.moe.gov.sg/tgis/secure/lostEmail.action</a></li></ul><p><img src="/img/work/19.png"><br><img src="/img/work/20.png"> </p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NUS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>沦为社畜</title>
      <link href="/post/Onboarding/"/>
      <url>/post/Onboarding/</url>
      
        <content type="html"><![CDATA[<p>关于工作，职场  <a href="https://roadmap.sh/">Developer Roadmaps</a> </p><span id="more"></span><h2 id="程序员的岗位"><a href="#程序员的岗位" class="headerlink" title="程序员的岗位"></a>程序员的岗位</h2><p><a href="https://roadmap.sh/">Developer Roadmaps</a><br>A：无论是在求职阶段，还是正式进入公司工作后，你都会发现，工程师普遍按技术的不同，分为下面几个岗位。</p><ul><li>前端：包括移动（Android、iOS）以及 Web 前端（JavaScript、CSS）开发。</li><li>后端（服务器端）：主要是服务器端的开发，简单来说，就是输入为请求，输出为响应，发送给客户端。</li><li>算法：主要涉及到的是机器学习，比如推荐系统如何更好地实现个性化推荐，搜索引擎返回的结果如何才能更符合地用户的需求等等。</li><li>架构：涉及系统架构，偏底层，语言以 C++ 为主。</li></ul><p>从薪酬的角度来看，普遍来说：算法 &gt; 架构 &gt; 后端 &gt; 前端。当然，这主要是由市场的供需关系决定的。</p><h2 id="2020-06-16"><a href="#2020-06-16" class="headerlink" title="2020-06-16"></a>2020-06-16</h2><p>工作还未满两年的我，就已经亲身经历了第一次裁员。上午 11 点钟， CEO 在直播时哽咽的说，我们将会裁员 5%， 涉及 363 人。被裁的同事们会在 12 点部分权限不可用，1 点收到一封正式的邮件。 我和我的小伙伴都坐立难安，人人自危。大家在工作群里面，留下了自己的联系方式，告别留言。大家在工作的 ZOOM 群里，一边聊天一边等待着裁员的结果，然后就听到同事说 goodbye，权限被剥夺，强制下线了。裁员措不及防，完全没有时间交接，赔偿方式为 2 个月的 notice period N+1.5+送电脑。上午大家都还有说有笑，瞬间组里就少了 2 位同事，其中一位还是内推我的姐姐。我当时真的是暴风哭泣，出了校园第一次体会到了社会的残酷。有人的地方就会有江湖，裁员也是一种清除异己的手段。作为渺小的个人，唯有好好学习，掌握真才实学，当裁员发生时，能有底气的说出： 此处不留爷，自有留爷处。<br><a href="https://mp.weixin.qq.com/s/MaVl3QkkOs0IxFehdWVNKA">https://mp.weixin.qq.com/s/MaVl3QkkOs0IxFehdWVNKA</a></p><h2 id="求职经历"><a href="#求职经历" class="headerlink" title="求职经历"></a>求职经历</h2><p>今年研究生毕业，在经历了一波三折的找工作之后。我这个咸鱼最终也找到了一份心仪的工作，在<a href="https://www.seagroup.com/home">sea</a>公司做Operation Enginner. 我是在春季的校园招聘会上投的简历，今天还翻到了曾经在招聘会上领取的资料<br><img src="/img/work/1.JPG" alt="sea1">  </p><p>一般找工作的途径：  </p><ol><li>找学长学姐，朋友们内推  </li><li>通过校园招聘会现场投简历  </li><li>公司官网在线投简历  </li><li>招聘网站，像<a href="https://www.monster.com.sg/">Monster</a>，<a href="https://www.glassdoor.com/index.htm">Glassdoor</a>，<a href="https://www.jobstreet.com.sg/">Jobstreet</a></li><li>如果是NUS学生，还可以通过<a href="https://nus-csm.symplicity.com/students/index.php?s=home">NUS校园求职网站</a>  </li><li>NUS 找工作的 APP <a href="http://nus.edu.sg/CFG/students/jobs-internships/nus-career-plus">NUS career+</a></li><li>由劳动力发展局和政府科技局合作推行的求职平台 MyCareersFuture.sg <a href="https://www.mycareersfuture.sg/">https://www.mycareersfuture.sg/</a></li></ol><p>总的来说，有内推是最好的，响应速度快，简历不容易被刷。其次是校园招聘会和校园求职网，都是校招，难度也低。 公司官网也可以，但要自己去一家家的找。专门的求职网站选择就很多，但自己要耐心的筛选（太多不知道的公司了，我曾经就被一家小作坊坑了，去面试的时候被那工作环境震惊）.<br>心得体会，应届生进入社会第一课：<code>虚心好学，接受自己的平庸。</code>早做准备，明白自己想干什么。举例子，如果打算未来从事某一项工作，那就去看看网上这份工作的描述，对求职者的要求是什么。（PS:简历也是很重要的一部分）祝大家求职顺利!  </p><h2 id="公司介绍"><a href="#公司介绍" class="headerlink" title="公司介绍"></a>公司介绍</h2><p><a href="https://www.seagroup.com/home">Sea</a>是东南亚的一家互联网公司，旗下有garena（东南亚游戏代理：王者荣耀，英雄联盟等），shopee （东南亚的电商），airpay（想做东南亚的支付宝）。 公司的员工都很年轻，几乎都是美丽小姐姐、帅气小哥哥们，超级nice的。公司的环境也相当的棒：  公司内部也有优先级： shopee &gt; garena &gt; seagroup 待遇排名<br><img src="/img/work/2.JPG" alt="sea2">  </p><p><img src="/img/work/3.JPG" alt="sea3">  </p><p><img src="/img/work/4.JPG" alt="sea4"> </p><h3 id="入职大礼包"><a href="#入职大礼包" class="headerlink" title="入职大礼包"></a>入职大礼包</h3><p><img src="/img/work/5.JPG" alt="sea5">  </p><p>还有互联网公司标配的Mac Pro<br><img src="/img/work/6.jpg" alt="sea6">  </p><p>两个戴尔 U2417H 显示器<br><img src="/img/work/7.JPG" alt="sea7">  </p><h3 id="公司福利"><a href="#公司福利" class="headerlink" title="公司福利"></a>公司福利</h3><p><img src="/img/work/8.JPG" alt="sea8">  </p><p>每个月还有两次马杀鸡按摩<br><img src="/img/work/9.JPG" alt="sea9">  </p><p>还有最受好评的小卖部，视频<a href="https://www.bilibili.com/video/av26321390">链接</a>在这里<br><img src="/img/work/10.JPG" alt="sea10">  </p><p><img src="/img/work/11.JPG" alt="sea11">  </p><p><img src="/img/work/12.JPG" alt="sea12">  </p><p><img src="/img/work/13.JPG" alt="sea13">  </p><p><img src="/img/work/14.JPG" alt="sea14">  </p><p><img src="/img/work/15.JPG" alt="sea15">  </p><p><img src="/img/work/16.JPG" alt="sea16">   </p><p>早上还有一盒水果和晚上的工作餐<br><img src="/img/work/17.JPG" alt="sea17"><br><img src="/img/work/18.jpg" alt="sea18"> </p><p>环境福利虽好，但每晚大概吃完饭都八点了，搬砖狗住！  </p><h2 id="谨以此文记录咸鱼开启职场生活"><a href="#谨以此文记录咸鱼开启职场生活" class="headerlink" title="谨以此文记录咸鱼开启职场生活"></a>谨以此文记录咸鱼开启职场生活</h2><p>公司的职位在<a href="http://career.seagroup.com/">这里</a>，需要内推的欢迎联系我email: <a href="mailto:&#x66;&#101;&#x69;&#121;&#x61;&#x6e;&#x67;&#x79;&#x61;&#x6e;&#103;&#50;&#51;&#51;&#x40;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109;">&#x66;&#101;&#x69;&#121;&#x61;&#x6e;&#x67;&#x79;&#x61;&#x6e;&#103;&#50;&#51;&#51;&#x40;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NUS食堂排队指南</title>
      <link href="/post/Canteen/"/>
      <url>/post/Canteen/</url>
      
        <content type="html"><![CDATA[<h2 id="人生苦短，珍惜时间"><a href="#人生苦短，珍惜时间" class="headerlink" title="人生苦短，珍惜时间"></a>人生苦短，珍惜时间</h2><p>这个其实是我读研在 NUS 跟着导师做的项目，自认为还是比较有趣的。在食堂吃饭，最怕长队漫漫，还有狗粮作伴。人生很多事情因为慢慢等待就错过了，本来打算去食堂吃某一样菜，却因为漫长的排队等待而望而却步。<br>所以嘛，年轻人要想少留遗憾，就要主动出击，爱要提前行动呀！</p><span id="more"></span><p><img src="/img/canteen/bird.jpg" alt="鸟"><br>本文主要基于WiFi历史数据，分析NUS 工学院、文学院、YIH食堂的规律（本来最初还计划有computing食堂的，奈何系统上没有相关的信息记录）。<br>用数据说话，分析每天食堂的拥挤时段给大家参考，以便大家减少排队时间，提高用餐体验。  </p><p>假设每个用户只有一个设备（在食堂用电脑的也比较少），并且在校园内大多数人都会打开WiFi。我们根据WiFi的连接情况，可以间接的判断人群密度，停留时间，流入流出速率。人群密度只需要统计每分钟连接WiFi的设备数即可。停留时间是由思科WiFi系统记录设备第一次连接WiFi的时间和当前时间作差得出，当设备离线超过15min系统会刷新first located time。流入流出速率则是比较前后两分钟mac address的不同来判断得出。</p><h3 id="首先举个例子好啦"><a href="#首先举个例子好啦" class="headerlink" title="首先举个例子好啦"></a><code>首先举个例子好啦</code></h3><p>WiFi原始数据如下图所示： 可以在<a href="https://datacommons.nus.edu.sg/Default">NUS Data Commons</a>用NUS ID登录后在Cisco MSE下载。<br><img src="/img/canteen/table.png" alt="Table"></p><p>经过分析处理，得到的结果图如下所示：<br><img src="/img/canteen/E1.png" alt="E1">  </p><ul><li>蓝色线条 代表总人数</li><li><code>红色</code>线条 代表平均停留时间</li><li>绿色线条 代表流入率</li><li>黑色线条 代表流出率</li></ul><p>上图是周一E1 6楼3月19号周一的情况。首先蓝色线条有5个峰值，而红色线条有5段逐渐增加的区间。两者结合，我们可知E1该天有5个上课时间段：9AM-11AM, 12PM-2PM, 2PM-4PM, 4PM-6PM, 6PM-9PM。<br>因为在上课时间，总人数肯定比较多，随着课堂的进行，dwell time停留时间也在逐渐增加。在课堂的开始和下课阶段，流入和流出率较大。晚上的课大多数都是master课程，老师一般会在7:30左右课间休息，8:30左右下课。图中的结果和作者亲身经历也完全吻合，侧面说明我们处理分析数据的方法是正确的。</p><h3 id="那如何分析食堂的数据呢？"><a href="#那如何分析食堂的数据呢？" class="headerlink" title="那如何分析食堂的数据呢？"></a>那如何分析食堂的数据呢？</h3><p>大家肯定想知道，什么时间去吃饭，<code>不算太早但排队的人也不多呢？</code><br>本文分析了2018年春季第10周（3.19-3.23）的数据，采用的分析方法是:  </p><ul><li><p>一般在总人数陡增前到达食堂是比较<code>稳</code>的，迟了队伍前面就是千军万马。<br><img src="/img/canteen/wen.png" alt="稳"> </p></li><li><p>平均停留时间开始急速下降的时候，因为如果没有顾客，食堂的device平均停留时间会由于食堂员工的存在随时间不断增加。当有大量学生来时，平均停留时间会因为基数的增大而开始下降。</p></li><li><p>流入流出率这里不采用，是因为根据作者的亲身经历来看，每分钟的流入流出率因为不可能那么大。误差估计是WiFi系统对于每分钟probing（探测）设备的统计误差，时有时无造成的。</p></li></ul><h2 id="工学院食堂"><a href="#工学院食堂" class="headerlink" title="工学院食堂"></a>工学院食堂</h2><p>Engineer师生常去的食堂，价格也超级便宜。队伍比较长的一般是西餐，日本料理等。感觉这学期在E1的课比较少，每周只有周一晚上才去吃饭。下图是周一工学院食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/E-319.png" alt="E">  </p><p>从图中我们可以看出，在<code>11:31</code>时，蓝色线条总人数开始迅速增加，红色线条平均停留时间也开始下降，这不正是暴风雨前的预兆吗？说明这个时间是用餐高峰期的开始。同样的，晚餐的用餐高峰期是从<code>5:20</code>开始的。</p><h2 id="文学院食堂"><a href="#文学院食堂" class="headerlink" title="文学院食堂"></a>文学院食堂</h2><p>文学院食堂作者最爱的是海南鸡饭，三楼凉拌功夫的麻辣香锅也很不错。作者曾经有一次亲身经历，11:40到文学院食堂，人多到我想放弃。。。下图是周一文学院食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/F-319.png" alt="F">  </p><p>文学院食堂从<code>11:20</code>，平均停留时间就开始下滑，<code>11:30</code>后总人数也是急剧攀升。说明这个11:20-11:30时间是用餐高峰期的开始。 晚餐虽然呈现出变化趋势，但真的一点都不拥挤。。。  </p><h2 id="YIH食堂"><a href="#YIH食堂" class="headerlink" title="YIH食堂"></a>YIH食堂</h2><p>YIH的mixed food每次人都超级多，排队时还经常可以吃狗粮，美滋滋。但YIH相比于前面两个食堂，人数明显是少很多，因为食堂本来就不是很大。下图是周一YIH食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/Y-319.png" alt="Y"> </p><p>从上图可以看出，午餐高峰时间从<code>11:20</code>开始，总人数开始增加，平均停留时间迅速减小，这不正是千军万马来临前的预兆吗？ 同样的，晚餐高峰是从<code>5:29</code>开始的。</p><h2 id="表格总结-划重点"><a href="#表格总结-划重点" class="headerlink" title="表格总结 划重点"></a>表格总结 <code>划重点</code></h2><p>每个食堂都分析了一周5天的数据，结果汇总在下表：<br><img src="/img/canteen/B.png" alt="B">   </p><p><code>敲黑板:</code>一般来说中午下课时间大概是在<code>11:30</code>，所以赶在这之前去食堂，人都会比较少。晚上除了YIH，其余两个食堂也不怎么拥挤。</p><h3 id="剩下的图：周二到周五"><a href="#剩下的图：周二到周五" class="headerlink" title="剩下的图：周二到周五"></a>剩下的图：周二到周五</h3><p><img src="/img/canteen/E-320.png" alt="E2"><br><img src="/img/canteen/E-321.png" alt="E3"><br><img src="/img/canteen/E-322.png" alt="E4"><br><img src="/img/canteen/E-323.png" alt="E5"> </p><p><img src="/img/canteen/F-320.png" alt="F2"><br><img src="/img/canteen/F-321.png" alt="F3"><br><img src="/img/canteen/F-322.png" alt="F4"><br><img src="/img/canteen/F-323.png" alt="F5">   </p><p><img src="/img/canteen/Y-320.png" alt="Y2"><br><img src="/img/canteen/Y-321.png" alt="Y3"><br><img src="/img/canteen/Y-322.png" alt="Y4"><br><img src="/img/canteen/Y-323.png" alt="Y5">  </p><h2 id="最后的吐槽"><a href="#最后的吐槽" class="headerlink" title="最后的吐槽"></a>最后的吐槽</h2><p>最后的一个月，马上就要毕业了，最近忙的没有时间写博客。课程，项目，论文，期末考试，找工作都是一座座艰难的大山。狗住Uo･ｪ･oU加油٩(●˙▿˙●)۶…⋆ฺ  </p><p>PS: 如果对这个分析有更好的建议，或者发现了错误之处。欢迎交流，联系方式:</p><ul><li>QQ: 601300870</li><li>Email: <a href="mailto:&#102;&#97;&#105;&#x6e;&#121;&#x61;&#x6e;&#103;&#x40;&#x66;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;">&#102;&#97;&#105;&#x6e;&#121;&#x61;&#x6e;&#103;&#x40;&#x66;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NUS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白也会用的微信机器人</title>
      <link href="/post/Robot/"/>
      <url>/post/Robot/</url>
      
        <content type="html"><![CDATA[<h2 id="天下武功，唯快不破"><a href="#天下武功，唯快不破" class="headerlink" title="天下武功，唯快不破"></a>天下武功，唯快不破</h2><p>这一篇文章是讲解如何安装微信自动回复机器人，独乐乐不如众乐乐。<br><code>画风突转，先来一段鸡汤：</code>并不是每个人都值得你腾出手中的事情秒回，如果有那么一个人，让你情不自禁地秒回了，说明那个人何其重要。<br>或者说，你被别人秒回，又是多么温暖的存在啊。<br>他秒回的瞬间，仿佛在说：你在我心中，很重要。</p><span id="more"></span><p><img src="/img/robot/miaohui.jpg" alt="秒回"></p><blockquote><p>只可惜我只是一个机器人，惊不惊喜，意不意外？</p></blockquote><p>废话不多说，先来看一看效果图：</p><p><img src="/img/robot/result1.jpeg" alt="举例子图片1"> </p><p><img src="/img/robot/result2.jpeg" alt="举例子图片2"></p><p><img src="/img/robot/result3.jpeg" alt="举例子图片3"></p><p>看完是不是有点小激动呢？</p><p><img src="/img/robot/qidai.jpeg" alt="激动的搓搓小手"></p><p>老司机通道：<code>会python的直接往下拉--看运行机器人程序</code></p><h2 id="第一步安装python环境"><a href="#第一步安装python环境" class="headerlink" title="第一步安装python环境"></a>第一步安装python环境</h2><p>俗话说，人生苦短，我用python。安装python就像安装游戏、QQ一样，去<a href="https://www.python.org/downloads/">官网</a>下载安装包，只是安装后桌面没有运行图标，而是在我们的计算机上安装了一个运行环境。</p><p>看<a href="https://www.jianshu.com/p/7a0b52075f70">Windows-python安装教程</a><br>如果不明白的话，再看看<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014316090478912dab2a3a9e8f4ed49d28854b292f85bb000">视频教程</a>。</p><p>用苹果电脑的点击观看<a href="https://www.jianshu.com/p/a10402b48a1c">苹果电脑python安装教程</a>。<br>如果看不懂，可以去视频网站<code>搜python安装教学视频</code>，一边看视频一边依葫芦画瓢，我在这里就不详细说明了。万事开头难，搞不懂的话你可以微信问我呀，哈哈。</p><p>安装好以后，在Windows命令行 or Mac的终端检查一下python的version版本</p><p><img src="/img/robot/python.png" alt="检查"></p><h2 id="安装python包"><a href="#安装python包" class="headerlink" title="安装python包"></a>安装python包</h2><p>当你把python环境安装好了以后，接下来你需要安装<code>python包</code>（python包是武林高手们打造的神兵利器，从新手村刚刚出来的你再也不用苦苦磨炼，自己去做武器啦）</p><p><img src="/img/robot/happy.jpg" alt="超开心耶"></p><p>那么问题来了，你怎么样从大侠手中借到神兵利器？？？<br>这个时候就需要我们常说的py交易（开玩笑的啦），肯定是用<a href="https://www.jianshu.com/p/cf420956e9c1">pip</a><br>。此外，这个机器人自动回复，需要两个包：一个是requests，另一个是itchat。</p><p>在Windows命令行 or Mac的终端 输入以下命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line"></span><br><span class="line">pip install itchat</span><br></pre></td></tr></table></figure><p>当用pip借到大佬们的神兵利器后，终于可以开始打怪升级了，美滋滋。</p><p><img src="/img/robot/dalao.png" alt="低头"></p><h2 id="运行机器人程序"><a href="#运行机器人程序" class="headerlink" title="运行机器人程序"></a>运行机器人程序</h2><p>第一步需要点击下载<a href="https://codeload.github.com/fainyang/Test/zip/master">源代码</a> 下载时存放的<code>地点</code>要记住。<br>下载之后解压文件<code>Test-master.zip</code>，其中的<code>tuling.py</code>就是我们的微信自动回复机器人小程序 。<br>在文件夹中找到<code>tuling.py</code>,右键&#x3D;&gt;打开方式用<code>记事本</code>打开，其中有两个地方需要修改。</p><p>第一个是图灵机器人的<code>apikey</code>，首先点击打开<a href="http://www.tuling123.com/">图灵机器人网站</a>注册一个账号，免费创建一个机器人，得到机器人的<code>apikey</code></p><p><img src="/img/robot/tuling.png" alt="tuling"></p><p>第二个地方就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itchat.auto_login(enableCmdQR=<span class="number">2</span>) </span><br></pre></td></tr></table></figure><p>修改为如下形式：这样是为了弹窗形式二维码比命令行形式的二维码清晰</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itchat.auto_login() </span><br></pre></td></tr></table></figure><p>至此，我们得到了机器人<code>apikey</code>，修改了二维码形式，就可以运行<code>tuling.py</code>了。</p><p>（最简单的小白法） Mac的终端 输入以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd  xxxx/Test-master   <span class="comment">#注释：先移动到tuling.py 所在文件</span></span><br><span class="line">python tuling.py      <span class="comment">#释：运行tuling.py</span></span><br></pre></td></tr></table></figure><p><img src="/img/robot/run.png" alt="run"><br>Windows用户在<code>Test-master</code>文件夹打开命令行，方法为：在此文件夹窗口内空白区域<code>右键单击（需要同时按住Shift）</code>，从菜单中选择＂在此处打开命令行窗口＂的项。</p><p>然后在命令窗口输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tuling.py </span><br></pre></td></tr></table></figure><p>如果前面python包成功安装，运行将会弹出来一个网页登录的二维码。微信扫码登录后，看到命令窗口的个人信息就意味着大功告成了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Getting uuid of QR code.</span><br><span class="line">Downloading QR code.</span><br><span class="line">Please scan the QR code to log <span class="keyword">in</span>.</span><br><span class="line">Please press confirm on your phone.</span><br><span class="line">Loading the contact, this may take a little <span class="keyword">while</span>.</span><br><span class="line">TERM environment variable <span class="keyword">not</span> <span class="built_in">set</span>.</span><br><span class="line">Login successfully <span class="keyword">as</span> Fain 费洋</span><br><span class="line">Start auto replying. </span><br></pre></td></tr></table></figure><p>但是这个机器人有一个缺陷：一旦运行python的电脑断网、休眠、关机。那么自动回复将会失效，因为自动回复的核心是<code>电脑</code>运行python调用图灵机器人来进行回复。但是对于小白来讲，这就已经足够<del>(≧▽≦)</del>啦啦啦。</p><h2 id="兽（瘦）人永不为奴，云服务器永不关机"><a href="#兽（瘦）人永不为奴，云服务器永不关机" class="headerlink" title="兽（瘦）人永不为奴，云服务器永不关机"></a>兽（瘦）人永不为奴，云服务器永不关机</h2><p>我这周刚买的<a href="https://cloud.tencent.com/act/campus">腾讯云</a>服务器，学生优惠下来3年360，超级划算的。<br><img src="/img/robot/tencent.png" alt="tencent"></p><p>我选择的系统是CentOS7.4（自带python2.7），需要安装python3.6–请参考<a href="http://www.jb51.net/article/133560.htm">教程1</a> 和<a href="https://cloud.tencent.com/developer/article/1017880">教程2</a> </p><p>安装好python环境以后，也需要安装两个包，一个是<code>requests</code>，另一个是<code>itchat</code>。<br>然后是在本地用<code>scp</code>把<code>tuling.py</code> 上传到云服务器，方法请参考<a href="https://cloud.tencent.com/document/product/213/2133">这里</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 本地文件地址 云服务器登录名@云服务器公网IP/域名:云服务器文件地址</span><br></pre></td></tr></table></figure><p>上传完成以后，运行试一试？结果你会发现当我们远程ssh关闭的时候，云服务器中的python程序也关闭了。<br>为了能长时间运行，你需要使用<a href="https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/">Linux 技巧</a>来续几年。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsid python tuling.py </span><br></pre></td></tr></table></figure><p>这样我们的机器人就能在云服务器一直运行啦，直到天荒地老，海枯石烂？</p><p>错！是服务器到期欠费。</p><p><img src="/img/robot/poor.jpeg" alt="poor"></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排列组合了解一下(阿里笔试题改编)</title>
      <link href="/post/Combination/"/>
      <url>/post/Combination/</url>
      
        <content type="html"><![CDATA[<h2 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h2><p>假设有小费和小王俩好基友，天天形影不离，二人分在一个组。<br>为了减少迟到的现象，班主任规定如下：</p><ol><li>迟到一次，则当事人记一分。（迟到）</li><li>小组两人在某一天同时迟到，则小组总分再记一分。（连坐）</li><li>一周内如果每天都迟到，则当事人再扣一分。（太皮了）</li></ol><span id="more"></span><p>  三种情况可累加记分，一周结算一次小组总分。<br>  肯定有人想说<br><img src="/img/gay.jpeg" alt="gay里gay气"> </p><h2 id="举个例子好了"><a href="#举个例子好了" class="headerlink" title="举个例子好了"></a>举个例子好了</h2><p>下图为某一周的出勤情况：从图中看出小费同学比较皮，天天迟到！小王同学有两天和小费同学一起开黑，导致了迟到。<br>所以总的小组计分为10分！</p><p><img src="/img/combination1.png" alt="出勤情况"></p><p><code>那么问题来了：如果已知某一周小组的总分情况，列出可能的出勤表</code></p><h2 id="咸鱼采用的暴力破解法"><a href="#咸鱼采用的暴力破解法" class="headerlink" title="咸鱼采用的暴力破解法"></a>咸鱼采用的暴力破解法</h2><p>有两个对象，每个对象有5个记录。每次记录的值有两种情况，我们可以暴力枚举出所有的情况。<br>一共也才2的10次方，1024种情况。对于计算机来说，当然是小菜一碟咯。</p><p>所有上面的出勤图就可以简化为0-1数值图：<br><img src="/img/combination2.png" alt="数值图"></p><p>接下来问题就变成，如何枚举出这1024种情况？</p><ol><li>2行5列一共10个值，循环列出0-1111111111二进制数的情况，高位补0。</li><li>如上图，2列是独立的，我们只需求出5位的情况，两列互相遍历即可。</li><li>用python自带的 <a href="https://docs.python.org/3/library/itertools.html">itertools</a>库，分分钟枚举完成。</li></ol><p><img src="/img/combination3.png" alt="解释图"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">start_day,faith_score</span>):</span><br><span class="line">    Calendar=[[<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>],[<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>]] <span class="comment">#模拟日历2行5列</span></span><br><span class="line">    L=<span class="built_in">list</span>(itertools.product([<span class="number">0</span>,<span class="number">1</span>],repeat=<span class="number">5</span>)) <span class="comment">#枚举产生</span></span><br><span class="line">    leng=<span class="built_in">len</span>(L)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(leng):<span class="comment">#两次遍历</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(leng):</span><br><span class="line">            Calendar[<span class="number">0</span>]=L[i]</span><br><span class="line">            Calendar[<span class="number">1</span>]=L[j]</span><br><span class="line">            <span class="keyword">if</span> sumcredit(Calendar)==faith_score:<span class="comment">#判断情况</span></span><br><span class="line">                gg=todate(Calendar,start_day)</span><br><span class="line">                <span class="built_in">print</span>(gg) <span class="comment">#输出情况</span></span><br></pre></td></tr></table></figure><p>只要有了枚举的所有情况，判断计分则是很容易的事情。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">credit1</span>(<span class="params">L</span>): <span class="comment">#迟到一次扣一分</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> L[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> L[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">if</span> j==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">credit2</span> (L):  <span class="comment">#一起迟到，多扣一分</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">if</span> L[<span class="number">0</span>][i]==<span class="number">1</span> <span class="keyword">and</span> L[<span class="number">1</span>][i]==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">credit3</span> (L): <span class="comment">#连续迟到，罪加一等</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">in</span> L[<span class="number">0</span>]:</span><br><span class="line">        credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">in</span> L[<span class="number">1</span>]:</span><br><span class="line">        credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sumcredit</span>(<span class="params">L</span>): <span class="comment">#累加总分</span></span><br><span class="line">    c1=credit1(L)</span><br><span class="line">    c2=credit2(L)</span><br><span class="line">    c3=credit3(L)</span><br><span class="line">    <span class="keyword">return</span> c1+c2+c3</span><br></pre></td></tr></table></figure><h2 id="时间问题，不容小觑"><a href="#时间问题，不容小觑" class="headerlink" title="时间问题，不容小觑"></a>时间问题，不容小觑</h2><p>因为时间在<code>跨月份</code>是时候有点麻烦，不能用普通的++，但我们可以用<code>datetime</code>库呀。<br>输入一个起始时间，我们要得到那一周的5天。<code>timedelta()</code>函数你值得拥有。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime,timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_date</span>(<span class="params">date</span>):       <span class="comment">#Y表示四位数的年份(0-9999)</span></span><br><span class="line">    date_begin=datetime.strptime(date,<span class="string">&#x27;%Y%m%d&#x27;</span>) </span><br><span class="line">    time=<span class="built_in">str</span>(datetime.date(date_begin))</span><br><span class="line"></span><br><span class="line">    date1=date_begin+timedelta(days=<span class="number">1</span>) <span class="comment">#加1s，哈哈</span></span><br><span class="line">    time1=<span class="built_in">str</span>(datetime.date(date1))</span><br><span class="line"></span><br><span class="line">    date2=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time2=<span class="built_in">str</span>(datetime.date(date2))</span><br><span class="line"></span><br><span class="line">    date3=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time3=<span class="built_in">str</span>(datetime.date(date3))</span><br><span class="line"></span><br><span class="line">    date4=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time4=<span class="built_in">str</span>(datetime.date(date4))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> time,time1,time2,time3,time4</span><br></pre></td></tr></table></figure><p>最后我们在输出 出勤情况的时候，将那个简化后的二维数组List<code>=&gt;</code>日历对应起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">todate</span>(<span class="params">L,date</span>):</span><br><span class="line">    time,time1,time2,time3,time4=get_date(date)</span><br><span class="line">    record=[time+<span class="string">&#x27;-小费&#x27;</span>,time+<span class="string">&#x27;-小王&#x27;</span>,time1+<span class="string">&#x27;-小费&#x27;</span>,time1+<span class="string">&#x27;-小王&#x27;</span>,time2+<span class="string">&#x27;-小费&#x27;</span>,\</span><br><span class="line">    time2+<span class="string">&#x27;-小王&#x27;</span>,time3+<span class="string">&#x27;-小费&#x27;</span>,time3+<span class="string">&#x27;-小王&#x27;</span>,time4+<span class="string">&#x27;-小费&#x27;</span>,time4+<span class="string">&#x27;-小王&#x27;</span>]</span><br><span class="line">    L1=L[<span class="number">0</span>]+L[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(L1)):</span><br><span class="line">        <span class="keyword">if</span> L1[i]==<span class="number">1</span>: <span class="comment">#1 代表迟到</span></span><br><span class="line">            record[i]+=<span class="string">&#x27;(迟到)&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment">#0代表没迟到</span></span><br><span class="line">            record[i]+=<span class="string">&#x27;(正常)&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> record</span><br></pre></td></tr></table></figure><p>假设我们输入<code>date=20180305,score=0</code><br>输出如下结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;2018-03-04-小费(正常)&#x27;</span>, <span class="string">&#x27;2018-03-04-小王(正常)&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;2018-03-05-小费(正常)&#x27;</span>, <span class="string">&#x27;2018-03-05-小王(正常)&#x27;</span>, </span><br><span class="line"> <span class="string">&#x27;2018-03-06-小费(正常)&#x27;</span>, <span class="string">&#x27;2018-03-06-小王(正常)&#x27;</span>, </span><br><span class="line"> <span class="string">&#x27;2018-03-06-小费(正常)&#x27;</span>, <span class="string">&#x27;2018-03-06-小王(正常)&#x27;</span>, </span><br><span class="line"> <span class="string">&#x27;2018-03-06-小费(正常)&#x27;</span>, <span class="string">&#x27;2018-03-06-小王(正常)&#x27;</span>]</span><br><span class="line">[Finished <span class="keyword">in</span> <span class="number">0.2</span>s]</span><br></pre></td></tr></table></figure><p>假设我们输入<code>date=20180305,score=1</code><br>输出如下结果：<br><img src="/img/combination4.png" alt="结果"></p><h2 id="最后一点废话"><a href="#最后一点废话" class="headerlink" title="最后一点废话"></a>最后一点废话</h2><p>有一篇关于itertools的文章<a href="https://mp.weixin.qq.com/s/Rb5aYWA7NYOi1eckGtakuQ">这段代码很Pythonic | 相见恨晚的 itertools 库</a> 安利一下。此文章的python<a href="https://github.com/fainyang/LeetCode_practice/blob/master/score.py">源代码</a></p><p>马上就要毕业了，再也没有当学生那种无忧无虑的感觉了。以前贪玩欠的债，找工作的时候哭出来。<br>去面试才知道自己有多菜，所幸我还比较<code>naive</code>，未来珍惜时间，好好学习。狗住，加油！</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间求差值timestampdiff</title>
      <link href="/post/timestampdiff/"/>
      <url>/post/timestampdiff/</url>
      
        <content type="html"><![CDATA[<h2 id="问题背景介绍"><a href="#问题背景介绍" class="headerlink" title="问题背景介绍"></a>问题背景介绍</h2><p>因为Prof想知道每个building里的average-dwell时间，NUS-WiFi数据库提供了current-time，<br>first-time。思路就是根据两者时间的差值来估计stay in building的时间。</p><span id="more"></span><p><img src="/img/time1.png" alt="数据时间格式"></p><h2 id="人生苦短，首选python"><a href="#人生苦短，首选python" class="headerlink" title="人生苦短，首选python"></a>人生苦短，首选python</h2><p>第一想法当然是用python，用python包：<code>time</code>, <code>datetime</code>.<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">difftime</span>(<span class="params">begintime,endtime</span>):</span><br><span class="line">date1=time.strptime(begintime,<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>) </span><br><span class="line">date2=time.strptime(endtime,<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="comment">#y两位数的年份表示（00-99）</span></span><br><span class="line"><span class="comment">#Y四位数的年份表示（000-9999）</span></span><br><span class="line">date3=datetime.datetime(</span><br><span class="line">date1[<span class="number">0</span>],date1[<span class="number">1</span>],date1[<span class="number">2</span>],date1[<span class="number">3</span>],date1[<span class="number">4</span>],date1[<span class="number">5</span>]) </span><br><span class="line">date4=datetime.datetime(</span><br><span class="line">date2[<span class="number">0</span>],date2[<span class="number">1</span>],date2[<span class="number">2</span>],date2[<span class="number">3</span>],date2[<span class="number">4</span>],date2[<span class="number">5</span>])</span><br><span class="line">minutes=(date4-date3).seconds/<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> minutes</span><br></pre></td></tr></table></figure><p>结果如下图：</p><p><img src="/img/time3.png" alt="结果展示"></p><h2 id="MySQL-表示不服"><a href="#MySQL-表示不服" class="headerlink" title="MySQL 表示不服"></a><code>MySQL</code> 表示不服</h2><p>上学期我用python做的统计工作，例如每分钟有多少device，或者每个device在building里停留了多少分钟.<br>用python至少得写30+行代码去读写csv文件，在MySQL就是一行代码的事情，相见恨晚。<br><code>无知限制了我的生产力！</code><br>MySQL的数据类型里有时间戳格式timestamp。也有专门计算时间差值的<code>timestampdiff</code>函数。<br>TIMESTAMPDIFF(unit,begin,end);返回end-begin的时间差值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select timestampdiff(minute,firstime,curtime)</span><br></pre></td></tr></table></figure><p>结果如下图：</p><p><img src="/img/time2.png" alt="结果展示"></p><h2 id="INSERT遇到问题了"><a href="#INSERT遇到问题了" class="headerlink" title="INSERT遇到问题了"></a>INSERT遇到问题了</h2><p>我想把timestampdiff返回的值插入在表的最后，先创建一个字段（列），再用insert插入，结果遇到了问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into test (diff)  select timestampdiff(minute,firstime,curtime)  from test;</span><br></pre></td></tr></table></figure><p><img src="/img/issue.png" alt="插入问题"></p><p>如图所示，结果是插在了diff列，但直接插在表的后面，没有覆盖原有的值。经过思考后，我尝试了 update的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update test set diff=timestampdiff(minute,firstime,curtime);</span><br></pre></td></tr></table></figure><p>终于成功了！</p><p><img src="/img/time4.png" alt="成功了"></p><h2 id="咸鱼的叹息"><a href="#咸鱼的叹息" class="headerlink" title="咸鱼的叹息"></a>咸鱼的叹息</h2><p>python定义了一个函数来计算，用MySQL就是一句话的事情。光找这句话我就花了好久，还得好好学习。<br>还是在项目中体会得多，光看书是不行的，纸上得来终觉浅。</p><p>很惭愧，连一点微小的工作都没有做，打扰了。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开始blog啦</title>
      <link href="/post/blog/"/>
      <url>/post/blog/</url>
      
        <content type="html"><![CDATA[<h2 id="第一篇post"><a href="#第一篇post" class="headerlink" title="第一篇post"></a>第一篇post</h2><p>虽然还不知道怎么用，先把这个网站搭起再说。</p><span id="more"></span><p>生活需要多点乐趣，人生苦短，需要一点甜甜的爱。<br>最幸福的事情莫过于找到所爱，所爱的事业，所爱的人。<br>除了美食，最近我也慢慢开始发现编程的乐趣。<br>今年的愿望是：每晚早点休息，年轻人不要熬夜。晚安<br>于 2018-02-20 深夜</p><h2 id="2021-05-30"><a href="#2021-05-30" class="headerlink" title="2021-05-30"></a>2021-05-30</h2><p>最近为申请 pr 的事情而担忧，因为在乎所以发愁。去社区做义工的时候，感觉 5 个小时很漫长，一分一分的度过。但这些事情都是急不得，不是我们努力就能改变的。<br>这些事情，回头看肯定也就一笑而过，类似于高考前夕，申请 NUS 等待结果，找工作等待 offer，跳槽的时候等待 offer 等。<br>那么要怎样改变这样的心态？首先想要完全不在乎这是不可能的，其次是静下来，就像一只坚定的乌龟，慢慢前进。然后把精力专注在其他事情上面，人一旦忙起来了，就没有闲心思去担忧其他事情了。专注当下可以做的事情，看书学习，运动健身也好，哪怕是睡觉恢复精神也是不错的选择。<br>最近这些年，互联网真的加速了社会发展，也让大家变得急性子，消息想马上得到回复，结果马上就要。 这样连带着影响了，好像做什么事情都想马上就想看到结果，人心浮躁啊。如何才能更加的坚定自我，不被外界所影响，这一点我也还在慢慢寻找答案</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
